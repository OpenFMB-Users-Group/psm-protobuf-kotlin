//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: reclosermodule/reclosermodule.proto

package openfmb.reclosermodule;

@kotlin.jvm.JvmName("-initializerecloserReadingProfile")
public inline fun recloserReadingProfile(block: openfmb.reclosermodule.RecloserReadingProfileKt.Dsl.() -> kotlin.Unit): openfmb.reclosermodule.RecloserReadingProfile =
  openfmb.reclosermodule.RecloserReadingProfileKt.Dsl._create(openfmb.reclosermodule.RecloserReadingProfile.newBuilder()).apply { block() }._build()
public object RecloserReadingProfileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.reclosermodule.RecloserReadingProfile.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.reclosermodule.RecloserReadingProfile.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.reclosermodule.RecloserReadingProfile = _builder.build()

    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];</code>
     */
    public var readingMessageInfo: openfmb.commonmodule.ReadingMessageInfo
      @JvmName("getReadingMessageInfo")
      get() = _builder.getReadingMessageInfo()
      @JvmName("setReadingMessageInfo")
      set(value) {
        _builder.setReadingMessageInfo(value)
      }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];</code>
     */
    public fun clearReadingMessageInfo() {
      _builder.clearReadingMessageInfo()
    }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];</code>
     * @return Whether the readingMessageInfo field is set.
     */
    public fun hasReadingMessageInfo(): kotlin.Boolean {
      return _builder.hasReadingMessageInfo()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.reclosermodule.Recloser recloser = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var recloser: openfmb.reclosermodule.Recloser
      @JvmName("getRecloser")
      get() = _builder.getRecloser()
      @JvmName("setRecloser")
      set(value) {
        _builder.setRecloser(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.reclosermodule.Recloser recloser = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearRecloser() {
      _builder.clearRecloser()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.reclosermodule.Recloser recloser = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     * @return Whether the recloser field is set.
     */
    public fun hasRecloser(): kotlin.Boolean {
      return _builder.hasRecloser()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RecloserReadingProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>repeated .reclosermodule.RecloserReading recloserReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];</code>
     */
     public val recloserReading: com.google.protobuf.kotlin.DslList<openfmb.reclosermodule.RecloserReading, RecloserReadingProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRecloserReadingList()
      )
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>repeated .reclosermodule.RecloserReading recloserReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];</code>
     * @param value The recloserReading to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRecloserReading")
    public fun com.google.protobuf.kotlin.DslList<openfmb.reclosermodule.RecloserReading, RecloserReadingProxy>.add(value: openfmb.reclosermodule.RecloserReading) {
      _builder.addRecloserReading(value)
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>repeated .reclosermodule.RecloserReading recloserReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];</code>
     * @param value The recloserReading to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRecloserReading")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<openfmb.reclosermodule.RecloserReading, RecloserReadingProxy>.plusAssign(value: openfmb.reclosermodule.RecloserReading) {
      add(value)
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>repeated .reclosermodule.RecloserReading recloserReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];</code>
     * @param values The recloserReading to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRecloserReading")
    public fun com.google.protobuf.kotlin.DslList<openfmb.reclosermodule.RecloserReading, RecloserReadingProxy>.addAll(values: kotlin.collections.Iterable<openfmb.reclosermodule.RecloserReading>) {
      _builder.addAllRecloserReading(values)
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>repeated .reclosermodule.RecloserReading recloserReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];</code>
     * @param values The recloserReading to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRecloserReading")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<openfmb.reclosermodule.RecloserReading, RecloserReadingProxy>.plusAssign(values: kotlin.collections.Iterable<openfmb.reclosermodule.RecloserReading>) {
      addAll(values)
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>repeated .reclosermodule.RecloserReading recloserReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];</code>
     * @param index The index to set the value at.
     * @param value The recloserReading to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRecloserReading")
    public operator fun com.google.protobuf.kotlin.DslList<openfmb.reclosermodule.RecloserReading, RecloserReadingProxy>.set(index: kotlin.Int, value: openfmb.reclosermodule.RecloserReading) {
      _builder.setRecloserReading(index, value)
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>repeated .reclosermodule.RecloserReading recloserReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRecloserReading")
    public fun com.google.protobuf.kotlin.DslList<openfmb.reclosermodule.RecloserReading, RecloserReadingProxy>.clear() {
      _builder.clearRecloserReading()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.reclosermodule.RecloserReadingProfile.copy(block: openfmb.reclosermodule.RecloserReadingProfileKt.Dsl.() -> kotlin.Unit): openfmb.reclosermodule.RecloserReadingProfile =
  openfmb.reclosermodule.RecloserReadingProfileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val openfmb.reclosermodule.RecloserReadingProfileOrBuilder.readingMessageInfoOrNull: openfmb.commonmodule.ReadingMessageInfo?
  get() = if (hasReadingMessageInfo()) getReadingMessageInfo() else null

val openfmb.reclosermodule.RecloserReadingProfileOrBuilder.recloserOrNull: openfmb.reclosermodule.Recloser?
  get() = if (hasRecloser()) getRecloser() else null

