//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: reclosermodule/reclosermodule.proto

package openfmb.reclosermodule;

@kotlin.jvm.JvmName("-initializerecloserStatusProfile")
public inline fun recloserStatusProfile(block: openfmb.reclosermodule.RecloserStatusProfileKt.Dsl.() -> kotlin.Unit): openfmb.reclosermodule.RecloserStatusProfile =
  openfmb.reclosermodule.RecloserStatusProfileKt.Dsl._create(openfmb.reclosermodule.RecloserStatusProfile.newBuilder()).apply { block() }._build()
public object RecloserStatusProfileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.reclosermodule.RecloserStatusProfile.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.reclosermodule.RecloserStatusProfile.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.reclosermodule.RecloserStatusProfile = _builder.build()

    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];</code>
     */
    public var statusMessageInfo: openfmb.commonmodule.StatusMessageInfo
      @JvmName("getStatusMessageInfo")
      get() = _builder.getStatusMessageInfo()
      @JvmName("setStatusMessageInfo")
      set(value) {
        _builder.setStatusMessageInfo(value)
      }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];</code>
     */
    public fun clearStatusMessageInfo() {
      _builder.clearStatusMessageInfo()
    }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];</code>
     * @return Whether the statusMessageInfo field is set.
     */
    public fun hasStatusMessageInfo(): kotlin.Boolean {
      return _builder.hasStatusMessageInfo()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.reclosermodule.Recloser recloser = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var recloser: openfmb.reclosermodule.Recloser
      @JvmName("getRecloser")
      get() = _builder.getRecloser()
      @JvmName("setRecloser")
      set(value) {
        _builder.setRecloser(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.reclosermodule.Recloser recloser = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearRecloser() {
      _builder.clearRecloser()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.reclosermodule.Recloser recloser = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     * @return Whether the recloser field is set.
     */
    public fun hasRecloser(): kotlin.Boolean {
      return _builder.hasRecloser()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.reclosermodule.RecloserStatus recloserStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var recloserStatus: openfmb.reclosermodule.RecloserStatus
      @JvmName("getRecloserStatus")
      get() = _builder.getRecloserStatus()
      @JvmName("setRecloserStatus")
      set(value) {
        _builder.setRecloserStatus(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.reclosermodule.RecloserStatus recloserStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearRecloserStatus() {
      _builder.clearRecloserStatus()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.reclosermodule.RecloserStatus recloserStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     * @return Whether the recloserStatus field is set.
     */
    public fun hasRecloserStatus(): kotlin.Boolean {
      return _builder.hasRecloserStatus()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.reclosermodule.RecloserStatusProfile.copy(block: openfmb.reclosermodule.RecloserStatusProfileKt.Dsl.() -> kotlin.Unit): openfmb.reclosermodule.RecloserStatusProfile =
  openfmb.reclosermodule.RecloserStatusProfileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val openfmb.reclosermodule.RecloserStatusProfileOrBuilder.statusMessageInfoOrNull: openfmb.commonmodule.StatusMessageInfo?
  get() = if (hasStatusMessageInfo()) getStatusMessageInfo() else null

val openfmb.reclosermodule.RecloserStatusProfileOrBuilder.recloserOrNull: openfmb.reclosermodule.Recloser?
  get() = if (hasRecloser()) getRecloser() else null

val openfmb.reclosermodule.RecloserStatusProfileOrBuilder.recloserStatusOrNull: openfmb.reclosermodule.RecloserStatus?
  get() = if (hasRecloserStatus()) getRecloserStatus() else null

