// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: commonmodule/commonmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializebCR")
public inline fun bCR(block: openfmb.commonmodule.BCRKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.BCR =
  openfmb.commonmodule.BCRKt.Dsl._create(openfmb.commonmodule.BCR.newBuilder()).apply { block() }._build()
/**
 * ```
 * Binary counter reading (BCR)
 * ```
 *
 * Protobuf type `commonmodule.BCR`
 */
public object BCRKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.BCR.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.BCR.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.BCR = _builder.build()

    /**
     * ```
     * Binary counter status represented as an integer value; wraps to 0 at the maximum or minimum
     * value of INT64.
     * ```
     *
     * `int64 actVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var actVal: kotlin.Long
      @JvmName("getActVal")
      get() = _builder.getActVal()
      @JvmName("setActVal")
      set(value) {
        _builder.setActVal(value)
      }
    /**
     * ```
     * Binary counter status represented as an integer value; wraps to 0 at the maximum or minimum
     * value of INT64.
     * ```
     *
     * `int64 actVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearActVal() {
      _builder.clearActVal()
    }

    /**
     * ```
     * Quality of the values in 'actVal', 'frVal'.
     * ```
     *
     * `.commonmodule.Quality q = 2;`
     */
    public var q: openfmb.commonmodule.Quality
      @JvmName("getQ")
      get() = _builder.getQ()
      @JvmName("setQ")
      set(value) {
        _builder.setQ(value)
      }
    /**
     * ```
     * Quality of the values in 'actVal', 'frVal'.
     * ```
     *
     * `.commonmodule.Quality q = 2;`
     */
    public fun clearQ() {
      _builder.clearQ()
    }
    /**
     * ```
     * Quality of the values in 'actVal', 'frVal'.
     * ```
     *
     * `.commonmodule.Quality q = 2;`
     * @return Whether the q field is set.
     */
    public fun hasQ(): kotlin.Boolean {
      return _builder.hasQ()
    }

    /**
     * ```
     * Timestamp of the last change of value in 'actVal' or 'q'.
     * ```
     *
     * `.commonmodule.Timestamp t = 3;`
     */
    public var t: openfmb.commonmodule.Timestamp
      @JvmName("getT")
      get() = _builder.getT()
      @JvmName("setT")
      set(value) {
        _builder.setT(value)
      }
    /**
     * ```
     * Timestamp of the last change of value in 'actVal' or 'q'.
     * ```
     *
     * `.commonmodule.Timestamp t = 3;`
     */
    public fun clearT() {
      _builder.clearT()
    }
    /**
     * ```
     * Timestamp of the last change of value in 'actVal' or 'q'.
     * ```
     *
     * `.commonmodule.Timestamp t = 3;`
     * @return Whether the t field is set.
     */
    public fun hasT(): kotlin.Boolean {
      return _builder.hasT()
    }
  }
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun openfmb.commonmodule.BCR.copy(block: openfmb.commonmodule.BCRKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.BCR =
  openfmb.commonmodule.BCRKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.commonmodule.BCROrBuilder.qOrNull: openfmb.commonmodule.Quality?
  get() = if (hasQ()) getQ() else null

public val openfmb.commonmodule.BCROrBuilder.tOrNull: openfmb.commonmodule.Timestamp?
  get() = if (hasT()) getT() else null

