//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: essmodule/essmodule.proto

package openfmb.essmodule;

@kotlin.jvm.JvmName("-initializesOCManagement")
public inline fun sOCManagement(block: openfmb.essmodule.SOCManagementKt.Dsl.() -> kotlin.Unit): openfmb.essmodule.SOCManagement =
  openfmb.essmodule.SOCManagementKt.Dsl._create(openfmb.essmodule.SOCManagement.newBuilder()).apply { block() }._build()
public object SOCManagementKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.essmodule.SOCManagement.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.essmodule.SOCManagement.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.essmodule.SOCManagement = _builder.build()

    /**
     * <pre>
     * uint/1%  Define a dead band (DB) around the SOC set point. When the battery SOC goes outside the
     * dead band, the SOC management executes and bring the SOC back to the set point. Upper DB = set point
     * + dead band plus Lower DB = set point – dead band minus
     * </pre>
     *
     * <code>.google.protobuf.FloatValue socDeadBandMinus = 1;</code>
     */
    public var socDeadBandMinus: com.google.protobuf.FloatValue
      @JvmName("getSocDeadBandMinus")
      get() = _builder.getSocDeadBandMinus()
      @JvmName("setSocDeadBandMinus")
      set(value) {
        _builder.setSocDeadBandMinus(value)
      }
    /**
     * <pre>
     * uint/1%  Define a dead band (DB) around the SOC set point. When the battery SOC goes outside the
     * dead band, the SOC management executes and bring the SOC back to the set point. Upper DB = set point
     * + dead band plus Lower DB = set point – dead band minus
     * </pre>
     *
     * <code>.google.protobuf.FloatValue socDeadBandMinus = 1;</code>
     */
    public fun clearSocDeadBandMinus() {
      _builder.clearSocDeadBandMinus()
    }
    /**
     * <pre>
     * uint/1%  Define a dead band (DB) around the SOC set point. When the battery SOC goes outside the
     * dead band, the SOC management executes and bring the SOC back to the set point. Upper DB = set point
     * + dead band plus Lower DB = set point – dead band minus
     * </pre>
     *
     * <code>.google.protobuf.FloatValue socDeadBandMinus = 1;</code>
     * @return Whether the socDeadBandMinus field is set.
     */
    public fun hasSocDeadBandMinus(): kotlin.Boolean {
      return _builder.hasSocDeadBandMinus()
    }

    /**
     * <pre>
     * uint/1%  Define a dead band (DB) around the SOC set point. When the battery SOC goes outside the
     * dead band, the SOC management executes and bring the SOC back to the set point. Upper DB = set point
     * + dead band plus Lower DB = set point – dead band minus
     * </pre>
     *
     * <code>.google.protobuf.FloatValue socDeadBandPlus = 2;</code>
     */
    public var socDeadBandPlus: com.google.protobuf.FloatValue
      @JvmName("getSocDeadBandPlus")
      get() = _builder.getSocDeadBandPlus()
      @JvmName("setSocDeadBandPlus")
      set(value) {
        _builder.setSocDeadBandPlus(value)
      }
    /**
     * <pre>
     * uint/1%  Define a dead band (DB) around the SOC set point. When the battery SOC goes outside the
     * dead band, the SOC management executes and bring the SOC back to the set point. Upper DB = set point
     * + dead band plus Lower DB = set point – dead band minus
     * </pre>
     *
     * <code>.google.protobuf.FloatValue socDeadBandPlus = 2;</code>
     */
    public fun clearSocDeadBandPlus() {
      _builder.clearSocDeadBandPlus()
    }
    /**
     * <pre>
     * uint/1%  Define a dead band (DB) around the SOC set point. When the battery SOC goes outside the
     * dead band, the SOC management executes and bring the SOC back to the set point. Upper DB = set point
     * + dead band plus Lower DB = set point – dead band minus
     * </pre>
     *
     * <code>.google.protobuf.FloatValue socDeadBandPlus = 2;</code>
     * @return Whether the socDeadBandPlus field is set.
     */
    public fun hasSocDeadBandPlus(): kotlin.Boolean {
      return _builder.hasSocDeadBandPlus()
    }

    /**
     * <pre>
     * Control value (TRUE or FALSE)
     * </pre>
     *
     * <code>.google.protobuf.BoolValue socManagementCtl = 3;</code>
     */
    public var socManagementCtl: com.google.protobuf.BoolValue
      @JvmName("getSocManagementCtl")
      get() = _builder.getSocManagementCtl()
      @JvmName("setSocManagementCtl")
      set(value) {
        _builder.setSocManagementCtl(value)
      }
    /**
     * <pre>
     * Control value (TRUE or FALSE)
     * </pre>
     *
     * <code>.google.protobuf.BoolValue socManagementCtl = 3;</code>
     */
    public fun clearSocManagementCtl() {
      _builder.clearSocManagementCtl()
    }
    /**
     * <pre>
     * Control value (TRUE or FALSE)
     * </pre>
     *
     * <code>.google.protobuf.BoolValue socManagementCtl = 3;</code>
     * @return Whether the socManagementCtl field is set.
     */
    public fun hasSocManagementCtl(): kotlin.Boolean {
      return _builder.hasSocManagementCtl()
    }

    /**
     * <pre>
     * uint/1kW  Set point used for SOC maintenance
     * </pre>
     *
     * <code>.google.protobuf.FloatValue socPowerSetPoint = 4;</code>
     */
    public var socPowerSetPoint: com.google.protobuf.FloatValue
      @JvmName("getSocPowerSetPoint")
      get() = _builder.getSocPowerSetPoint()
      @JvmName("setSocPowerSetPoint")
      set(value) {
        _builder.setSocPowerSetPoint(value)
      }
    /**
     * <pre>
     * uint/1kW  Set point used for SOC maintenance
     * </pre>
     *
     * <code>.google.protobuf.FloatValue socPowerSetPoint = 4;</code>
     */
    public fun clearSocPowerSetPoint() {
      _builder.clearSocPowerSetPoint()
    }
    /**
     * <pre>
     * uint/1kW  Set point used for SOC maintenance
     * </pre>
     *
     * <code>.google.protobuf.FloatValue socPowerSetPoint = 4;</code>
     * @return Whether the socPowerSetPoint field is set.
     */
    public fun hasSocPowerSetPoint(): kotlin.Boolean {
      return _builder.hasSocPowerSetPoint()
    }

    /**
     * <pre>
     * uint/1%  SOC Target in percentage (%).
     * </pre>
     *
     * <code>.google.protobuf.FloatValue socSetPoint = 5;</code>
     */
    public var socSetPoint: com.google.protobuf.FloatValue
      @JvmName("getSocSetPoint")
      get() = _builder.getSocSetPoint()
      @JvmName("setSocSetPoint")
      set(value) {
        _builder.setSocSetPoint(value)
      }
    /**
     * <pre>
     * uint/1%  SOC Target in percentage (%).
     * </pre>
     *
     * <code>.google.protobuf.FloatValue socSetPoint = 5;</code>
     */
    public fun clearSocSetPoint() {
      _builder.clearSocSetPoint()
    }
    /**
     * <pre>
     * uint/1%  SOC Target in percentage (%).
     * </pre>
     *
     * <code>.google.protobuf.FloatValue socSetPoint = 5;</code>
     * @return Whether the socSetPoint field is set.
     */
    public fun hasSocSetPoint(): kotlin.Boolean {
      return _builder.hasSocSetPoint()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.essmodule.SOCManagement.copy(block: openfmb.essmodule.SOCManagementKt.Dsl.() -> kotlin.Unit): openfmb.essmodule.SOCManagement =
  openfmb.essmodule.SOCManagementKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.essmodule.SOCManagementOrBuilder.socDeadBandMinusOrNull: com.google.protobuf.FloatValue?
  get() = if (hasSocDeadBandMinus()) getSocDeadBandMinus() else null

public val openfmb.essmodule.SOCManagementOrBuilder.socDeadBandPlusOrNull: com.google.protobuf.FloatValue?
  get() = if (hasSocDeadBandPlus()) getSocDeadBandPlus() else null

public val openfmb.essmodule.SOCManagementOrBuilder.socManagementCtlOrNull: com.google.protobuf.BoolValue?
  get() = if (hasSocManagementCtl()) getSocManagementCtl() else null

public val openfmb.essmodule.SOCManagementOrBuilder.socPowerSetPointOrNull: com.google.protobuf.FloatValue?
  get() = if (hasSocPowerSetPoint()) getSocPowerSetPoint() else null

public val openfmb.essmodule.SOCManagementOrBuilder.socSetPointOrNull: com.google.protobuf.FloatValue?
  get() = if (hasSocSetPoint()) getSocSetPoint() else null

