// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: commonmodule/commonmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializebooleanEventAndStatusGGIO")
public inline fun booleanEventAndStatusGGIO(block: openfmb.commonmodule.BooleanEventAndStatusGGIOKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.BooleanEventAndStatusGGIO =
  openfmb.commonmodule.BooleanEventAndStatusGGIOKt.Dsl._create(openfmb.commonmodule.BooleanEventAndStatusGGIO.newBuilder()).apply { block() }._build()
/**
 * ```
 * LN: Generic process I/O   Name: GGIO
 * ```
 *
 * Protobuf type `commonmodule.BooleanEventAndStatusGGIO`
 */
public object BooleanEventAndStatusGGIOKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.BooleanEventAndStatusGGIO.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.BooleanEventAndStatusGGIO.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.BooleanEventAndStatusGGIO = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];`
     */
    public var logicalNode: openfmb.commonmodule.LogicalNode
      @JvmName("getLogicalNode")
      get() = _builder.getLogicalNode()
      @JvmName("setLogicalNode")
      set(value) {
        _builder.setLogicalNode(value)
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearLogicalNode() {
      _builder.clearLogicalNode()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the logicalNode field is set.
     */
    public fun hasLogicalNode(): kotlin.Boolean {
      return _builder.hasLogicalNode()
    }

    /**
     * ```
     * If true, indication <i>n</i> is present.
     * ```
     *
     * `.commonmodule.StatusSPS Ind = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var ind: openfmb.commonmodule.StatusSPS
      @JvmName("getInd")
      get() = _builder.getInd()
      @JvmName("setInd")
      set(value) {
        _builder.setInd(value)
      }
    /**
     * ```
     * If true, indication <i>n</i> is present.
     * ```
     *
     * `.commonmodule.StatusSPS Ind = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearInd() {
      _builder.clearInd()
    }
    /**
     * ```
     * If true, indication <i>n</i> is present.
     * ```
     *
     * `.commonmodule.StatusSPS Ind = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the ind field is set.
     */
    public fun hasInd(): kotlin.Boolean {
      return _builder.hasInd()
    }

    /**
     * ```
     * Phase code
     * ```
     *
     * `.commonmodule.Optional_PhaseCodeKind Phase = 3;`
     */
    public var phase: openfmb.commonmodule.Optional_PhaseCodeKind
      @JvmName("getPhase")
      get() = _builder.getPhase()
      @JvmName("setPhase")
      set(value) {
        _builder.setPhase(value)
      }
    /**
     * ```
     * Phase code
     * ```
     *
     * `.commonmodule.Optional_PhaseCodeKind Phase = 3;`
     */
    public fun clearPhase() {
      _builder.clearPhase()
    }
    /**
     * ```
     * Phase code
     * ```
     *
     * `.commonmodule.Optional_PhaseCodeKind Phase = 3;`
     * @return Whether the phase field is set.
     */
    public fun hasPhase(): kotlin.Boolean {
      return _builder.hasPhase()
    }
  }
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun openfmb.commonmodule.BooleanEventAndStatusGGIO.copy(block: openfmb.commonmodule.BooleanEventAndStatusGGIOKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.BooleanEventAndStatusGGIO =
  openfmb.commonmodule.BooleanEventAndStatusGGIOKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.commonmodule.BooleanEventAndStatusGGIOOrBuilder.logicalNodeOrNull: openfmb.commonmodule.LogicalNode?
  get() = if (hasLogicalNode()) getLogicalNode() else null

public val openfmb.commonmodule.BooleanEventAndStatusGGIOOrBuilder.indOrNull: openfmb.commonmodule.StatusSPS?
  get() = if (hasInd()) getInd() else null

public val openfmb.commonmodule.BooleanEventAndStatusGGIOOrBuilder.phaseOrNull: openfmb.commonmodule.Optional_PhaseCodeKind?
  get() = if (hasPhase()) getPhase() else null

