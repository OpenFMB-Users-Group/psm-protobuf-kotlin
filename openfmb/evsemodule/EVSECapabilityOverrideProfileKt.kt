// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: evsemodule/evsemodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.evsemodule;

@kotlin.jvm.JvmName("-initializeeVSECapabilityOverrideProfile")
public inline fun eVSECapabilityOverrideProfile(block: openfmb.evsemodule.EVSECapabilityOverrideProfileKt.Dsl.() -> kotlin.Unit): openfmb.evsemodule.EVSECapabilityOverrideProfile =
  openfmb.evsemodule.EVSECapabilityOverrideProfileKt.Dsl._create(openfmb.evsemodule.EVSECapabilityOverrideProfile.newBuilder()).apply { block() }._build()
/**
 * ```
 * EVSE Capability Override Profile
 * ```
 *
 * Protobuf type `evsemodule.EVSECapabilityOverrideProfile`
 */
public object EVSECapabilityOverrideProfileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.evsemodule.EVSECapabilityOverrideProfile.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.evsemodule.EVSECapabilityOverrideProfile.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.evsemodule.EVSECapabilityOverrideProfile = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.CapabilityMessageInfo capabilityMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public var capabilityMessageInfo: openfmb.commonmodule.CapabilityMessageInfo
      @kotlin.jvm.JvmName("getCapabilityMessageInfo")
        get() = _builder.capabilityMessageInfo
      @kotlin.jvm.JvmName("setCapabilityMessageInfo")
        set(value) {
        _builder.capabilityMessageInfo = value
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.CapabilityMessageInfo capabilityMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearCapabilityMessageInfo() {
      _builder.clearCapabilityMessageInfo()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.CapabilityMessageInfo capabilityMessageInfo = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the capabilityMessageInfo field is set.
     */
    public fun hasCapabilityMessageInfo(): kotlin.Boolean {
      return _builder.hasCapabilityMessageInfo()
    }

    public val EVSECapabilityOverrideProfileKt.Dsl.capabilityMessageInfoOrNull: openfmb.commonmodule.CapabilityMessageInfo?
      get() = _builder.capabilityMessageInfoOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.evsemodule.EVSE evse = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var evse: openfmb.evsemodule.EVSE
      @kotlin.jvm.JvmName("getEvse")
        get() = _builder.evse
      @kotlin.jvm.JvmName("setEvse")
        set(value) {
        _builder.evse = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.evsemodule.EVSE evse = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearEvse() {
      _builder.clearEvse()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.evsemodule.EVSE evse = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the evse field is set.
     */
    public fun hasEvse(): kotlin.Boolean {
      return _builder.hasEvse()
    }

    public val EVSECapabilityOverrideProfileKt.Dsl.evseOrNull: openfmb.evsemodule.EVSE?
      get() = _builder.evseOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.evsemodule.EVSECapabilityOverride evseCapabilityOverride = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var evseCapabilityOverride: openfmb.evsemodule.EVSECapabilityOverride
      @kotlin.jvm.JvmName("getEvseCapabilityOverride")
        get() = _builder.evseCapabilityOverride
      @kotlin.jvm.JvmName("setEvseCapabilityOverride")
        set(value) {
        _builder.evseCapabilityOverride = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.evsemodule.EVSECapabilityOverride evseCapabilityOverride = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearEvseCapabilityOverride() {
      _builder.clearEvseCapabilityOverride()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.evsemodule.EVSECapabilityOverride evseCapabilityOverride = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the evseCapabilityOverride field is set.
     */
    public fun hasEvseCapabilityOverride(): kotlin.Boolean {
      return _builder.hasEvseCapabilityOverride()
    }

    public val EVSECapabilityOverrideProfileKt.Dsl.evseCapabilityOverrideOrNull: openfmb.evsemodule.EVSECapabilityOverride?
      get() = _builder.evseCapabilityOverrideOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.evsemodule.EVSECapabilityOverrideProfile.copy(block: `openfmb.evsemodule`.EVSECapabilityOverrideProfileKt.Dsl.() -> kotlin.Unit): openfmb.evsemodule.EVSECapabilityOverrideProfile =
  `openfmb.evsemodule`.EVSECapabilityOverrideProfileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.evsemodule.EVSECapabilityOverrideProfileOrBuilder.capabilityMessageInfoOrNull: openfmb.commonmodule.CapabilityMessageInfo?
  get() = if (hasCapabilityMessageInfo()) getCapabilityMessageInfo() else null

public val openfmb.evsemodule.EVSECapabilityOverrideProfileOrBuilder.evseOrNull: openfmb.evsemodule.EVSE?
  get() = if (hasEvse()) getEvse() else null

public val openfmb.evsemodule.EVSECapabilityOverrideProfileOrBuilder.evseCapabilityOverrideOrNull: openfmb.evsemodule.EVSECapabilityOverride?
  get() = if (hasEvseCapabilityOverride()) getEvseCapabilityOverride() else null

