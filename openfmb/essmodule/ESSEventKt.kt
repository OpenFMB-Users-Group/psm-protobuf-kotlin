//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: essmodule/essmodule.proto

package openfmb.essmodule;

@kotlin.jvm.JvmName("-initializeeSSEvent")
public inline fun eSSEvent(block: openfmb.essmodule.ESSEventKt.Dsl.() -> kotlin.Unit): openfmb.essmodule.ESSEvent =
  openfmb.essmodule.ESSEventKt.Dsl._create(openfmb.essmodule.ESSEvent.newBuilder()).apply { block() }._build()
public object ESSEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.essmodule.ESSEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.essmodule.ESSEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.essmodule.ESSEvent = _builder.build()

    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];</code>
     */
    public var eventValue: openfmb.commonmodule.EventValue
      @JvmName("getEventValue")
      get() = _builder.getEventValue()
      @JvmName("setEventValue")
      set(value) {
        _builder.setEventValue(value)
      }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];</code>
     */
    public fun clearEventValue() {
      _builder.clearEventValue()
    }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];</code>
     * @return Whether the eventValue field is set.
     */
    public fun hasEventValue(): kotlin.Boolean {
      return _builder.hasEventValue()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.essmodule.EssEventZBAT essEventZBAT = 2;</code>
     */
    public var essEventZBAT: openfmb.essmodule.EssEventZBAT
      @JvmName("getEssEventZBAT")
      get() = _builder.getEssEventZBAT()
      @JvmName("setEssEventZBAT")
      set(value) {
        _builder.setEssEventZBAT(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.essmodule.EssEventZBAT essEventZBAT = 2;</code>
     */
    public fun clearEssEventZBAT() {
      _builder.clearEssEventZBAT()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.essmodule.EssEventZBAT essEventZBAT = 2;</code>
     * @return Whether the essEventZBAT field is set.
     */
    public fun hasEssEventZBAT(): kotlin.Boolean {
      return _builder.hasEssEventZBAT()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.essmodule.ESSEventZGEN essEventZGEN = 3;</code>
     */
    public var essEventZGEN: openfmb.essmodule.ESSEventZGEN
      @JvmName("getEssEventZGEN")
      get() = _builder.getEssEventZGEN()
      @JvmName("setEssEventZGEN")
      set(value) {
        _builder.setEssEventZGEN(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.essmodule.ESSEventZGEN essEventZGEN = 3;</code>
     */
    public fun clearEssEventZGEN() {
      _builder.clearEssEventZGEN()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.essmodule.ESSEventZGEN essEventZGEN = 3;</code>
     * @return Whether the essEventZGEN field is set.
     */
    public fun hasEssEventZGEN(): kotlin.Boolean {
      return _builder.hasEssEventZGEN()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.essmodule.ESSEvent.copy(block: openfmb.essmodule.ESSEventKt.Dsl.() -> kotlin.Unit): openfmb.essmodule.ESSEvent =
  openfmb.essmodule.ESSEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.essmodule.ESSEventOrBuilder.eventValueOrNull: openfmb.commonmodule.EventValue?
  get() = if (hasEventValue()) getEventValue() else null

public val openfmb.essmodule.ESSEventOrBuilder.essEventZBATOrNull: openfmb.essmodule.EssEventZBAT?
  get() = if (hasEssEventZBAT()) getEssEventZBAT() else null

public val openfmb.essmodule.ESSEventOrBuilder.essEventZGENOrNull: openfmb.essmodule.ESSEventZGEN?
  get() = if (hasEssEventZGEN()) getEssEventZGEN() else null

