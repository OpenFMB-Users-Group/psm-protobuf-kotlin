//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: essmodule/essmodule.proto

package openfmb.essmodule;

@kotlin.jvm.JvmName("-initializeessControlFSCC")
public inline fun essControlFSCC(block: openfmb.essmodule.EssControlFSCCKt.Dsl.() -> kotlin.Unit): openfmb.essmodule.EssControlFSCC =
  openfmb.essmodule.EssControlFSCCKt.Dsl._create(openfmb.essmodule.EssControlFSCC.newBuilder()).apply { block() }._build()
public object EssControlFSCCKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.essmodule.EssControlFSCC.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.essmodule.EssControlFSCC.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.essmodule.EssControlFSCC = _builder.build()

    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];</code>
     */
    public var controlFSCC: openfmb.commonmodule.ControlFSCC
      @JvmName("getControlFSCC")
      get() = _builder.getControlFSCC()
      @JvmName("setControlFSCC")
      set(value) {
        _builder.setControlFSCC(value)
      }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];</code>
     */
    public fun clearControlFSCC() {
      _builder.clearControlFSCC()
    }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];</code>
     * @return Whether the controlFSCC field is set.
     */
    public fun hasControlFSCC(): kotlin.Boolean {
      return _builder.hasControlFSCC()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.essmodule.ESSControlScheduleFSCH essControlScheduleFSCH = 2;</code>
     */
    public var essControlScheduleFSCH: openfmb.essmodule.ESSControlScheduleFSCH
      @JvmName("getEssControlScheduleFSCH")
      get() = _builder.getEssControlScheduleFSCH()
      @JvmName("setEssControlScheduleFSCH")
      set(value) {
        _builder.setEssControlScheduleFSCH(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.essmodule.ESSControlScheduleFSCH essControlScheduleFSCH = 2;</code>
     */
    public fun clearEssControlScheduleFSCH() {
      _builder.clearEssControlScheduleFSCH()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.essmodule.ESSControlScheduleFSCH essControlScheduleFSCH = 2;</code>
     * @return Whether the essControlScheduleFSCH field is set.
     */
    public fun hasEssControlScheduleFSCH(): kotlin.Boolean {
      return _builder.hasEssControlScheduleFSCH()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.essmodule.EssControlFSCC.copy(block: openfmb.essmodule.EssControlFSCCKt.Dsl.() -> kotlin.Unit): openfmb.essmodule.EssControlFSCC =
  openfmb.essmodule.EssControlFSCCKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val openfmb.essmodule.EssControlFSCCOrBuilder.controlFSCCOrNull: openfmb.commonmodule.ControlFSCC?
  get() = if (hasControlFSCC()) getControlFSCC() else null

val openfmb.essmodule.EssControlFSCCOrBuilder.essControlScheduleFSCHOrNull: openfmb.essmodule.ESSControlScheduleFSCH?
  get() = if (hasEssControlScheduleFSCH()) getEssControlScheduleFSCH() else null

