// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: reclosermodule/reclosermodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.reclosermodule;

@kotlin.jvm.JvmName("-initializerecloserDiscreteControl")
public inline fun recloserDiscreteControl(block: openfmb.reclosermodule.RecloserDiscreteControlKt.Dsl.() -> kotlin.Unit): openfmb.reclosermodule.RecloserDiscreteControl =
  openfmb.reclosermodule.RecloserDiscreteControlKt.Dsl._create(openfmb.reclosermodule.RecloserDiscreteControl.newBuilder()).apply { block() }._build()
/**
 * ```
 * Recloser discrete control
 * ```
 *
 * Protobuf type `reclosermodule.RecloserDiscreteControl`
 */
public object RecloserDiscreteControlKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.reclosermodule.RecloserDiscreteControl.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.reclosermodule.RecloserDiscreteControl.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.reclosermodule.RecloserDiscreteControl = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];`
     */
    public var controlValue: openfmb.commonmodule.ControlValue
      @JvmName("getControlValue")
      get() = _builder.getControlValue()
      @JvmName("setControlValue")
      set(value) {
        _builder.setControlValue(value)
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearControlValue() {
      _builder.clearControlValue()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the controlValue field is set.
     */
    public fun hasControlValue(): kotlin.Boolean {
      return _builder.hasControlValue()
    }

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.CheckConditions check = 2;`
     */
    public var check: openfmb.commonmodule.CheckConditions
      @JvmName("getCheck")
      get() = _builder.getCheck()
      @JvmName("setCheck")
      set(value) {
        _builder.setCheck(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.CheckConditions check = 2;`
     */
    public fun clearCheck() {
      _builder.clearCheck()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.CheckConditions check = 2;`
     * @return Whether the check field is set.
     */
    public fun hasCheck(): kotlin.Boolean {
      return _builder.hasCheck()
    }

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reclosermodule.RecloserDiscreteControlXCBR recloserDiscreteControlXCBR = 3;`
     */
    public var recloserDiscreteControlXCBR: openfmb.reclosermodule.RecloserDiscreteControlXCBR
      @JvmName("getRecloserDiscreteControlXCBR")
      get() = _builder.getRecloserDiscreteControlXCBR()
      @JvmName("setRecloserDiscreteControlXCBR")
      set(value) {
        _builder.setRecloserDiscreteControlXCBR(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reclosermodule.RecloserDiscreteControlXCBR recloserDiscreteControlXCBR = 3;`
     */
    public fun clearRecloserDiscreteControlXCBR() {
      _builder.clearRecloserDiscreteControlXCBR()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reclosermodule.RecloserDiscreteControlXCBR recloserDiscreteControlXCBR = 3;`
     * @return Whether the recloserDiscreteControlXCBR field is set.
     */
    public fun hasRecloserDiscreteControlXCBR(): kotlin.Boolean {
      return _builder.hasRecloserDiscreteControlXCBR()
    }
  }
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun openfmb.reclosermodule.RecloserDiscreteControl.copy(block: openfmb.reclosermodule.RecloserDiscreteControlKt.Dsl.() -> kotlin.Unit): openfmb.reclosermodule.RecloserDiscreteControl =
  openfmb.reclosermodule.RecloserDiscreteControlKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.reclosermodule.RecloserDiscreteControlOrBuilder.controlValueOrNull: openfmb.commonmodule.ControlValue?
  get() = if (hasControlValue()) getControlValue() else null

public val openfmb.reclosermodule.RecloserDiscreteControlOrBuilder.checkOrNull: openfmb.commonmodule.CheckConditions?
  get() = if (hasCheck()) getCheck() else null

public val openfmb.reclosermodule.RecloserDiscreteControlOrBuilder.recloserDiscreteControlXCBROrNull: openfmb.reclosermodule.RecloserDiscreteControlXCBR?
  get() = if (hasRecloserDiscreteControlXCBR()) getRecloserDiscreteControlXCBR() else null

