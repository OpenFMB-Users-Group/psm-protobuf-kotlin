// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: essmodule/essmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.essmodule;

@kotlin.jvm.JvmName("-initializeeSSDiscreteControl")
public inline fun eSSDiscreteControl(block: openfmb.essmodule.ESSDiscreteControlKt.Dsl.() -> kotlin.Unit): openfmb.essmodule.ESSDiscreteControl =
  openfmb.essmodule.ESSDiscreteControlKt.Dsl._create(openfmb.essmodule.ESSDiscreteControl.newBuilder()).apply { block() }._build()
/**
 * ```
 * Cap bank discrete control
 * ```
 *
 * Protobuf type `essmodule.ESSDiscreteControl`
 */
public object ESSDiscreteControlKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.essmodule.ESSDiscreteControl.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.essmodule.ESSDiscreteControl.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.essmodule.ESSDiscreteControl = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];`
     */
    public var controlValue: openfmb.commonmodule.ControlValue
      @JvmName("getControlValue")
      get() = _builder.getControlValue()
      @JvmName("setControlValue")
      set(value) {
        _builder.setControlValue(value)
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearControlValue() {
      _builder.clearControlValue()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the controlValue field is set.
     */
    public fun hasControlValue(): kotlin.Boolean {
      return _builder.hasControlValue()
    }

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.CheckConditions check = 2;`
     */
    public var check: openfmb.commonmodule.CheckConditions
      @JvmName("getCheck")
      get() = _builder.getCheck()
      @JvmName("setCheck")
      set(value) {
        _builder.setCheck(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.CheckConditions check = 2;`
     */
    public fun clearCheck() {
      _builder.clearCheck()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.CheckConditions check = 2;`
     * @return Whether the check field is set.
     */
    public fun hasCheck(): kotlin.Boolean {
      return _builder.hasCheck()
    }

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.essmodule.ESSDiscreteControlDBAT essDiscreteControlDBAT = 3;`
     */
    public var essDiscreteControlDBAT: openfmb.essmodule.ESSDiscreteControlDBAT
      @JvmName("getEssDiscreteControlDBAT")
      get() = _builder.getEssDiscreteControlDBAT()
      @JvmName("setEssDiscreteControlDBAT")
      set(value) {
        _builder.setEssDiscreteControlDBAT(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.essmodule.ESSDiscreteControlDBAT essDiscreteControlDBAT = 3;`
     */
    public fun clearEssDiscreteControlDBAT() {
      _builder.clearEssDiscreteControlDBAT()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.essmodule.ESSDiscreteControlDBAT essDiscreteControlDBAT = 3;`
     * @return Whether the essDiscreteControlDBAT field is set.
     */
    public fun hasEssDiscreteControlDBAT(): kotlin.Boolean {
      return _builder.hasEssDiscreteControlDBAT()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.essmodule.ESSDiscreteControl.copy(block: openfmb.essmodule.ESSDiscreteControlKt.Dsl.() -> kotlin.Unit): openfmb.essmodule.ESSDiscreteControl =
  openfmb.essmodule.ESSDiscreteControlKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.essmodule.ESSDiscreteControlOrBuilder.controlValueOrNull: openfmb.commonmodule.ControlValue?
  get() = if (hasControlValue()) getControlValue() else null

public val openfmb.essmodule.ESSDiscreteControlOrBuilder.checkOrNull: openfmb.commonmodule.CheckConditions?
  get() = if (hasCheck()) getCheck() else null

public val openfmb.essmodule.ESSDiscreteControlOrBuilder.essDiscreteControlDBATOrNull: openfmb.essmodule.ESSDiscreteControlDBAT?
  get() = if (hasEssDiscreteControlDBAT()) getEssDiscreteControlDBAT() else null

