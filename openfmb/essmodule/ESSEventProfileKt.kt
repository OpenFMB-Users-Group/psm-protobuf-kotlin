// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: essmodule/essmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.essmodule;

@kotlin.jvm.JvmName("-initializeeSSEventProfile")
public inline fun eSSEventProfile(block: openfmb.essmodule.ESSEventProfileKt.Dsl.() -> kotlin.Unit): openfmb.essmodule.ESSEventProfile =
  openfmb.essmodule.ESSEventProfileKt.Dsl._create(openfmb.essmodule.ESSEventProfile.newBuilder()).apply { block() }._build()
/**
 * ```
 * ESS event profile
 * ```
 *
 * Protobuf type `essmodule.ESSEventProfile`
 */
public object ESSEventProfileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.essmodule.ESSEventProfile.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.essmodule.ESSEventProfile.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.essmodule.ESSEventProfile = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public var eventMessageInfo: openfmb.commonmodule.EventMessageInfo
      @kotlin.jvm.JvmName("getEventMessageInfo")
        get() = _builder.eventMessageInfo
      @kotlin.jvm.JvmName("setEventMessageInfo")
        set(value) {
        _builder.eventMessageInfo = value
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearEventMessageInfo() {
      _builder.clearEventMessageInfo()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the eventMessageInfo field is set.
     */
    public fun hasEventMessageInfo(): kotlin.Boolean {
      return _builder.hasEventMessageInfo()
    }

    public val ESSEventProfileKt.Dsl.eventMessageInfoOrNull: openfmb.commonmodule.EventMessageInfo?
      get() = _builder.eventMessageInfoOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var ess: openfmb.commonmodule.ESS
      @kotlin.jvm.JvmName("getEss")
        get() = _builder.ess
      @kotlin.jvm.JvmName("setEss")
        set(value) {
        _builder.ess = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearEss() {
      _builder.clearEss()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the ess field is set.
     */
    public fun hasEss(): kotlin.Boolean {
      return _builder.hasEss()
    }

    public val ESSEventProfileKt.Dsl.essOrNull: openfmb.commonmodule.ESS?
      get() = _builder.essOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.essmodule.ESSEvent essEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var essEvent: openfmb.essmodule.ESSEvent
      @kotlin.jvm.JvmName("getEssEvent")
        get() = _builder.essEvent
      @kotlin.jvm.JvmName("setEssEvent")
        set(value) {
        _builder.essEvent = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.essmodule.ESSEvent essEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearEssEvent() {
      _builder.clearEssEvent()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.essmodule.ESSEvent essEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the essEvent field is set.
     */
    public fun hasEssEvent(): kotlin.Boolean {
      return _builder.hasEssEvent()
    }

    public val ESSEventProfileKt.Dsl.essEventOrNull: openfmb.essmodule.ESSEvent?
      get() = _builder.essEventOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.essmodule.ESSEventProfile.copy(block: `openfmb.essmodule`.ESSEventProfileKt.Dsl.() -> kotlin.Unit): openfmb.essmodule.ESSEventProfile =
  `openfmb.essmodule`.ESSEventProfileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.essmodule.ESSEventProfileOrBuilder.eventMessageInfoOrNull: openfmb.commonmodule.EventMessageInfo?
  get() = if (hasEventMessageInfo()) getEventMessageInfo() else null

public val openfmb.essmodule.ESSEventProfileOrBuilder.essOrNull: openfmb.commonmodule.ESS?
  get() = if (hasEss()) getEss() else null

public val openfmb.essmodule.ESSEventProfileOrBuilder.essEventOrNull: openfmb.essmodule.ESSEvent?
  get() = if (hasEssEvent()) getEssEvent() else null

