// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: essmodule/essmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.essmodule;

@kotlin.jvm.JvmName("-initializeeSSCapabilityConfiguration")
public inline fun eSSCapabilityConfiguration(block: openfmb.essmodule.ESSCapabilityConfigurationKt.Dsl.() -> kotlin.Unit): openfmb.essmodule.ESSCapabilityConfiguration =
  openfmb.essmodule.ESSCapabilityConfigurationKt.Dsl._create(openfmb.essmodule.ESSCapabilityConfiguration.newBuilder()).apply { block() }._build()
/**
 * ```
 * MISSING DOCUMENTATION!!!
 * ```
 *
 * Protobuf type `essmodule.ESSCapabilityConfiguration`
 */
public object ESSCapabilityConfigurationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.essmodule.ESSCapabilityConfiguration.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.essmodule.ESSCapabilityConfiguration.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.essmodule.ESSCapabilityConfiguration = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.SourceCapabilityConfiguration sourceCapabilityConfiguration = 1 [(.uml.option_parent_message) = true];`
     */
    public var sourceCapabilityConfiguration: openfmb.commonmodule.SourceCapabilityConfiguration
      @JvmName("getSourceCapabilityConfiguration")
      get() = _builder.getSourceCapabilityConfiguration()
      @JvmName("setSourceCapabilityConfiguration")
      set(value) {
        _builder.setSourceCapabilityConfiguration(value)
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.SourceCapabilityConfiguration sourceCapabilityConfiguration = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearSourceCapabilityConfiguration() {
      _builder.clearSourceCapabilityConfiguration()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.SourceCapabilityConfiguration sourceCapabilityConfiguration = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the sourceCapabilityConfiguration field is set.
     */
    public fun hasSourceCapabilityConfiguration(): kotlin.Boolean {
      return _builder.hasSourceCapabilityConfiguration()
    }

    /**
     * ```
     * Apparent Power Charge Maximum
     * ```
     *
     * `.commonmodule.ASG VAChaRteMax = 2;`
     */
    public var vAChaRteMax: openfmb.commonmodule.ASG
      @JvmName("getVAChaRteMax")
      get() = _builder.getVAChaRteMax()
      @JvmName("setVAChaRteMax")
      set(value) {
        _builder.setVAChaRteMax(value)
      }
    /**
     * ```
     * Apparent Power Charge Maximum
     * ```
     *
     * `.commonmodule.ASG VAChaRteMax = 2;`
     */
    public fun clearVAChaRteMax() {
      _builder.clearVAChaRteMax()
    }
    /**
     * ```
     * Apparent Power Charge Maximum
     * ```
     *
     * `.commonmodule.ASG VAChaRteMax = 2;`
     * @return Whether the vAChaRteMax field is set.
     */
    public fun hasVAChaRteMax(): kotlin.Boolean {
      return _builder.hasVAChaRteMax()
    }

    /**
     * ```
     * Apparent Power Discharge Maximum
     * ```
     *
     * `.commonmodule.ASG VADisChaRteMax = 3;`
     */
    public var vADisChaRteMax: openfmb.commonmodule.ASG
      @JvmName("getVADisChaRteMax")
      get() = _builder.getVADisChaRteMax()
      @JvmName("setVADisChaRteMax")
      set(value) {
        _builder.setVADisChaRteMax(value)
      }
    /**
     * ```
     * Apparent Power Discharge Maximum
     * ```
     *
     * `.commonmodule.ASG VADisChaRteMax = 3;`
     */
    public fun clearVADisChaRteMax() {
      _builder.clearVADisChaRteMax()
    }
    /**
     * ```
     * Apparent Power Discharge Maximum
     * ```
     *
     * `.commonmodule.ASG VADisChaRteMax = 3;`
     * @return Whether the vADisChaRteMax field is set.
     */
    public fun hasVADisChaRteMax(): kotlin.Boolean {
      return _builder.hasVADisChaRteMax()
    }

    /**
     * ```
     * Active Power Charge Maximum
     * ```
     *
     * `.commonmodule.ASG WChaRteMax = 4;`
     */
    public var wChaRteMax: openfmb.commonmodule.ASG
      @JvmName("getWChaRteMax")
      get() = _builder.getWChaRteMax()
      @JvmName("setWChaRteMax")
      set(value) {
        _builder.setWChaRteMax(value)
      }
    /**
     * ```
     * Active Power Charge Maximum
     * ```
     *
     * `.commonmodule.ASG WChaRteMax = 4;`
     */
    public fun clearWChaRteMax() {
      _builder.clearWChaRteMax()
    }
    /**
     * ```
     * Active Power Charge Maximum
     * ```
     *
     * `.commonmodule.ASG WChaRteMax = 4;`
     * @return Whether the wChaRteMax field is set.
     */
    public fun hasWChaRteMax(): kotlin.Boolean {
      return _builder.hasWChaRteMax()
    }

    /**
     * ```
     * Active Power Discharge Maximum
     * ```
     *
     * `.commonmodule.ASG WDisChaRteMax = 5;`
     */
    public var wDisChaRteMax: openfmb.commonmodule.ASG
      @JvmName("getWDisChaRteMax")
      get() = _builder.getWDisChaRteMax()
      @JvmName("setWDisChaRteMax")
      set(value) {
        _builder.setWDisChaRteMax(value)
      }
    /**
     * ```
     * Active Power Discharge Maximum
     * ```
     *
     * `.commonmodule.ASG WDisChaRteMax = 5;`
     */
    public fun clearWDisChaRteMax() {
      _builder.clearWDisChaRteMax()
    }
    /**
     * ```
     * Active Power Discharge Maximum
     * ```
     *
     * `.commonmodule.ASG WDisChaRteMax = 5;`
     * @return Whether the wDisChaRteMax field is set.
     */
    public fun hasWDisChaRteMax(): kotlin.Boolean {
      return _builder.hasWDisChaRteMax()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.essmodule.ESSCapabilityConfiguration.copy(block: openfmb.essmodule.ESSCapabilityConfigurationKt.Dsl.() -> kotlin.Unit): openfmb.essmodule.ESSCapabilityConfiguration =
  openfmb.essmodule.ESSCapabilityConfigurationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.essmodule.ESSCapabilityConfigurationOrBuilder.sourceCapabilityConfigurationOrNull: openfmb.commonmodule.SourceCapabilityConfiguration?
  get() = if (hasSourceCapabilityConfiguration()) getSourceCapabilityConfiguration() else null

public val openfmb.essmodule.ESSCapabilityConfigurationOrBuilder.vAChaRteMaxOrNull: openfmb.commonmodule.ASG?
  get() = if (hasVAChaRteMax()) getVAChaRteMax() else null

public val openfmb.essmodule.ESSCapabilityConfigurationOrBuilder.vADisChaRteMaxOrNull: openfmb.commonmodule.ASG?
  get() = if (hasVADisChaRteMax()) getVADisChaRteMax() else null

public val openfmb.essmodule.ESSCapabilityConfigurationOrBuilder.wChaRteMaxOrNull: openfmb.commonmodule.ASG?
  get() = if (hasWChaRteMax()) getWChaRteMax() else null

public val openfmb.essmodule.ESSCapabilityConfigurationOrBuilder.wDisChaRteMaxOrNull: openfmb.commonmodule.ASG?
  get() = if (hasWDisChaRteMax()) getWDisChaRteMax() else null

