// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: commonmodule/commonmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializecontrolING")
public inline fun controlING(block: openfmb.commonmodule.ControlINGKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.ControlING =
  openfmb.commonmodule.ControlINGKt.Dsl._create(openfmb.commonmodule.ControlING.newBuilder()).apply { block() }._build()
/**
 * ```
 * Integer status setting (FC=SP) (ING_SP)
 * ```
 *
 * Protobuf type `commonmodule.ControlING`
 */
public object ControlINGKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.ControlING.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.ControlING.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.ControlING = _builder.build()

    /**
     * ```
     * The value of the status setting.
     * ```
     *
     * `int32 setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var setVal: kotlin.Int
      @kotlin.jvm.JvmName("getSetVal")
        get() = _builder.setVal
      @kotlin.jvm.JvmName("setSetVal")
        set(value) {
        _builder.setVal = value
      }
    /**
     * ```
     * The value of the status setting.
     * ```
     *
     * `int32 setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearSetVal() {
      _builder.clearSetVal()
    }

    /**
     * ```
     * Unit for 'setVal', 'minVal', 'maxVal', 'stepSize'.
     * ```
     *
     * `.commonmodule.Unit units = 2;`
     */
    public var units: openfmb.commonmodule.Unit
      @kotlin.jvm.JvmName("getUnits")
        get() = _builder.units
      @kotlin.jvm.JvmName("setUnits")
        set(value) {
        _builder.units = value
      }
    /**
     * ```
     * Unit for 'setVal', 'minVal', 'maxVal', 'stepSize'.
     * ```
     *
     * `.commonmodule.Unit units = 2;`
     */
    public fun clearUnits() {
      _builder.clearUnits()
    }
    /**
     * ```
     * Unit for 'setVal', 'minVal', 'maxVal', 'stepSize'.
     * ```
     *
     * `.commonmodule.Unit units = 2;`
     * @return Whether the units field is set.
     */
    public fun hasUnits(): kotlin.Boolean {
      return _builder.hasUnits()
    }

    public val ControlINGKt.Dsl.unitsOrNull: openfmb.commonmodule.Unit?
      get() = _builder.unitsOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.commonmodule.ControlING.copy(block: `openfmb.commonmodule`.ControlINGKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.ControlING =
  `openfmb.commonmodule`.ControlINGKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.commonmodule.ControlINGOrBuilder.unitsOrNull: openfmb.commonmodule.Unit?
  get() = if (hasUnits()) getUnits() else null

