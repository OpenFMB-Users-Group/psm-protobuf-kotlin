//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: switchmodule/switchmodule.proto

package openfmb.switchmodule;

@kotlin.jvm.JvmName("-initializeswitchStatusProfile")
public inline fun switchStatusProfile(block: openfmb.switchmodule.SwitchStatusProfileKt.Dsl.() -> kotlin.Unit): openfmb.switchmodule.SwitchStatusProfile =
  openfmb.switchmodule.SwitchStatusProfileKt.Dsl._create(openfmb.switchmodule.SwitchStatusProfile.newBuilder()).apply { block() }._build()
public object SwitchStatusProfileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.switchmodule.SwitchStatusProfile.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.switchmodule.SwitchStatusProfile.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.switchmodule.SwitchStatusProfile = _builder.build()

    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];</code>
     */
    public var statusMessageInfo: openfmb.commonmodule.StatusMessageInfo
      @JvmName("getStatusMessageInfo")
      get() = _builder.getStatusMessageInfo()
      @JvmName("setStatusMessageInfo")
      set(value) {
        _builder.setStatusMessageInfo(value)
      }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];</code>
     */
    public fun clearStatusMessageInfo() {
      _builder.clearStatusMessageInfo()
    }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];</code>
     * @return Whether the statusMessageInfo field is set.
     */
    public fun hasStatusMessageInfo(): kotlin.Boolean {
      return _builder.hasStatusMessageInfo()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var protectedSwitch: openfmb.switchmodule.ProtectedSwitch
      @JvmName("getProtectedSwitch")
      get() = _builder.getProtectedSwitch()
      @JvmName("setProtectedSwitch")
      set(value) {
        _builder.setProtectedSwitch(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearProtectedSwitch() {
      _builder.clearProtectedSwitch()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     * @return Whether the protectedSwitch field is set.
     */
    public fun hasProtectedSwitch(): kotlin.Boolean {
      return _builder.hasProtectedSwitch()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.switchmodule.SwitchStatus switchStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var switchStatus: openfmb.switchmodule.SwitchStatus
      @JvmName("getSwitchStatus")
      get() = _builder.getSwitchStatus()
      @JvmName("setSwitchStatus")
      set(value) {
        _builder.setSwitchStatus(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.switchmodule.SwitchStatus switchStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearSwitchStatus() {
      _builder.clearSwitchStatus()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.switchmodule.SwitchStatus switchStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     * @return Whether the switchStatus field is set.
     */
    public fun hasSwitchStatus(): kotlin.Boolean {
      return _builder.hasSwitchStatus()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.switchmodule.SwitchStatusProfile.copy(block: openfmb.switchmodule.SwitchStatusProfileKt.Dsl.() -> kotlin.Unit): openfmb.switchmodule.SwitchStatusProfile =
  openfmb.switchmodule.SwitchStatusProfileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val openfmb.switchmodule.SwitchStatusProfileOrBuilder.statusMessageInfoOrNull: openfmb.commonmodule.StatusMessageInfo?
  get() = if (hasStatusMessageInfo()) getStatusMessageInfo() else null

val openfmb.switchmodule.SwitchStatusProfileOrBuilder.protectedSwitchOrNull: openfmb.switchmodule.ProtectedSwitch?
  get() = if (hasProtectedSwitch()) getProtectedSwitch() else null

val openfmb.switchmodule.SwitchStatusProfileOrBuilder.switchStatusOrNull: openfmb.switchmodule.SwitchStatus?
  get() = if (hasSwitchStatus()) getSwitchStatus() else null

