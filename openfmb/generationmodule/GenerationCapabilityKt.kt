//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: generationmodule/generationmodule.proto

package openfmb.generationmodule;

@kotlin.jvm.JvmName("-initializegenerationCapability")
public inline fun generationCapability(block: openfmb.generationmodule.GenerationCapabilityKt.Dsl.() -> kotlin.Unit): openfmb.generationmodule.GenerationCapability =
  openfmb.generationmodule.GenerationCapabilityKt.Dsl._create(openfmb.generationmodule.GenerationCapability.newBuilder()).apply { block() }._build()
public object GenerationCapabilityKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.generationmodule.GenerationCapability.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.generationmodule.GenerationCapability.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.generationmodule.GenerationCapability = _builder.build()

    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.NameplateValue nameplateValue = 1 [(.uml.option_parent_message) = true];</code>
     */
    public var nameplateValue: openfmb.commonmodule.NameplateValue
      @JvmName("getNameplateValue")
      get() = _builder.getNameplateValue()
      @JvmName("setNameplateValue")
      set(value) {
        _builder.setNameplateValue(value)
      }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.NameplateValue nameplateValue = 1 [(.uml.option_parent_message) = true];</code>
     */
    public fun clearNameplateValue() {
      _builder.clearNameplateValue()
    }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.NameplateValue nameplateValue = 1 [(.uml.option_parent_message) = true];</code>
     * @return Whether the nameplateValue field is set.
     */
    public fun hasNameplateValue(): kotlin.Boolean {
      return _builder.hasNameplateValue()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.generationmodule.GenerationCapabilityRatings generationCapabilityRatings = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var generationCapabilityRatings: openfmb.generationmodule.GenerationCapabilityRatings
      @JvmName("getGenerationCapabilityRatings")
      get() = _builder.getGenerationCapabilityRatings()
      @JvmName("setGenerationCapabilityRatings")
      set(value) {
        _builder.setGenerationCapabilityRatings(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.generationmodule.GenerationCapabilityRatings generationCapabilityRatings = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearGenerationCapabilityRatings() {
      _builder.clearGenerationCapabilityRatings()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.generationmodule.GenerationCapabilityRatings generationCapabilityRatings = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     * @return Whether the generationCapabilityRatings field is set.
     */
    public fun hasGenerationCapabilityRatings(): kotlin.Boolean {
      return _builder.hasGenerationCapabilityRatings()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.generationmodule.GenerationCapabilityConfiguration generationCapabilityConfiguration = 3;</code>
     */
    public var generationCapabilityConfiguration: openfmb.generationmodule.GenerationCapabilityConfiguration
      @JvmName("getGenerationCapabilityConfiguration")
      get() = _builder.getGenerationCapabilityConfiguration()
      @JvmName("setGenerationCapabilityConfiguration")
      set(value) {
        _builder.setGenerationCapabilityConfiguration(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.generationmodule.GenerationCapabilityConfiguration generationCapabilityConfiguration = 3;</code>
     */
    public fun clearGenerationCapabilityConfiguration() {
      _builder.clearGenerationCapabilityConfiguration()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.generationmodule.GenerationCapabilityConfiguration generationCapabilityConfiguration = 3;</code>
     * @return Whether the generationCapabilityConfiguration field is set.
     */
    public fun hasGenerationCapabilityConfiguration(): kotlin.Boolean {
      return _builder.hasGenerationCapabilityConfiguration()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.generationmodule.GenerationCapability.copy(block: openfmb.generationmodule.GenerationCapabilityKt.Dsl.() -> kotlin.Unit): openfmb.generationmodule.GenerationCapability =
  openfmb.generationmodule.GenerationCapabilityKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val openfmb.generationmodule.GenerationCapabilityOrBuilder.nameplateValueOrNull: openfmb.commonmodule.NameplateValue?
  get() = if (hasNameplateValue()) getNameplateValue() else null

val openfmb.generationmodule.GenerationCapabilityOrBuilder.generationCapabilityRatingsOrNull: openfmb.generationmodule.GenerationCapabilityRatings?
  get() = if (hasGenerationCapabilityRatings()) getGenerationCapabilityRatings() else null

val openfmb.generationmodule.GenerationCapabilityOrBuilder.generationCapabilityConfigurationOrNull: openfmb.generationmodule.GenerationCapabilityConfiguration?
  get() = if (hasGenerationCapabilityConfiguration()) getGenerationCapabilityConfiguration() else null

