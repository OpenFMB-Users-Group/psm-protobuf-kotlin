//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: reclosermodule/reclosermodule.proto

package openfmb.reclosermodule;

@kotlin.jvm.JvmName("-initializerecloserDiscreteControlProfile")
public inline fun recloserDiscreteControlProfile(block: openfmb.reclosermodule.RecloserDiscreteControlProfileKt.Dsl.() -> kotlin.Unit): openfmb.reclosermodule.RecloserDiscreteControlProfile =
  openfmb.reclosermodule.RecloserDiscreteControlProfileKt.Dsl._create(openfmb.reclosermodule.RecloserDiscreteControlProfile.newBuilder()).apply { block() }._build()
public object RecloserDiscreteControlProfileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.reclosermodule.RecloserDiscreteControlProfile.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.reclosermodule.RecloserDiscreteControlProfile.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.reclosermodule.RecloserDiscreteControlProfile = _builder.build()

    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];</code>
     */
    public var controlMessageInfo: openfmb.commonmodule.ControlMessageInfo
      @JvmName("getControlMessageInfo")
      get() = _builder.getControlMessageInfo()
      @JvmName("setControlMessageInfo")
      set(value) {
        _builder.setControlMessageInfo(value)
      }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];</code>
     */
    public fun clearControlMessageInfo() {
      _builder.clearControlMessageInfo()
    }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];</code>
     * @return Whether the controlMessageInfo field is set.
     */
    public fun hasControlMessageInfo(): kotlin.Boolean {
      return _builder.hasControlMessageInfo()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.reclosermodule.Recloser recloser = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var recloser: openfmb.reclosermodule.Recloser
      @JvmName("getRecloser")
      get() = _builder.getRecloser()
      @JvmName("setRecloser")
      set(value) {
        _builder.setRecloser(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.reclosermodule.Recloser recloser = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearRecloser() {
      _builder.clearRecloser()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.reclosermodule.Recloser recloser = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     * @return Whether the recloser field is set.
     */
    public fun hasRecloser(): kotlin.Boolean {
      return _builder.hasRecloser()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.reclosermodule.RecloserDiscreteControl recloserDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var recloserDiscreteControl: openfmb.reclosermodule.RecloserDiscreteControl
      @JvmName("getRecloserDiscreteControl")
      get() = _builder.getRecloserDiscreteControl()
      @JvmName("setRecloserDiscreteControl")
      set(value) {
        _builder.setRecloserDiscreteControl(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.reclosermodule.RecloserDiscreteControl recloserDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearRecloserDiscreteControl() {
      _builder.clearRecloserDiscreteControl()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.reclosermodule.RecloserDiscreteControl recloserDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     * @return Whether the recloserDiscreteControl field is set.
     */
    public fun hasRecloserDiscreteControl(): kotlin.Boolean {
      return _builder.hasRecloserDiscreteControl()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.reclosermodule.RecloserDiscreteControlProfile.copy(block: openfmb.reclosermodule.RecloserDiscreteControlProfileKt.Dsl.() -> kotlin.Unit): openfmb.reclosermodule.RecloserDiscreteControlProfile =
  openfmb.reclosermodule.RecloserDiscreteControlProfileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val openfmb.reclosermodule.RecloserDiscreteControlProfileOrBuilder.controlMessageInfoOrNull: openfmb.commonmodule.ControlMessageInfo?
  get() = if (hasControlMessageInfo()) getControlMessageInfo() else null

val openfmb.reclosermodule.RecloserDiscreteControlProfileOrBuilder.recloserOrNull: openfmb.reclosermodule.Recloser?
  get() = if (hasRecloser()) getRecloser() else null

val openfmb.reclosermodule.RecloserDiscreteControlProfileOrBuilder.recloserDiscreteControlOrNull: openfmb.reclosermodule.RecloserDiscreteControl?
  get() = if (hasRecloserDiscreteControl()) getRecloserDiscreteControl() else null

