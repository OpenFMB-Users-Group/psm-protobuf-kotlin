//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: solarmodule/solarmodule.proto

package openfmb.solarmodule;

@kotlin.jvm.JvmName("-initializesolarCapabilityOverride")
public inline fun solarCapabilityOverride(block: openfmb.solarmodule.SolarCapabilityOverrideKt.Dsl.() -> kotlin.Unit): openfmb.solarmodule.SolarCapabilityOverride =
  openfmb.solarmodule.SolarCapabilityOverrideKt.Dsl._create(openfmb.solarmodule.SolarCapabilityOverride.newBuilder()).apply { block() }._build()
public object SolarCapabilityOverrideKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.solarmodule.SolarCapabilityOverride.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.solarmodule.SolarCapabilityOverride.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.solarmodule.SolarCapabilityOverride = _builder.build()

    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];</code>
     */
    public var identifiedObject: openfmb.commonmodule.IdentifiedObject
      @JvmName("getIdentifiedObject")
      get() = _builder.getIdentifiedObject()
      @JvmName("setIdentifiedObject")
      set(value) {
        _builder.setIdentifiedObject(value)
      }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];</code>
     */
    public fun clearIdentifiedObject() {
      _builder.clearIdentifiedObject()
    }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];</code>
     * @return Whether the identifiedObject field is set.
     */
    public fun hasIdentifiedObject(): kotlin.Boolean {
      return _builder.hasIdentifiedObject()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.solarmodule.SolarCapabilityConfiguration solarCapabilityConfiguration = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var solarCapabilityConfiguration: openfmb.solarmodule.SolarCapabilityConfiguration
      @JvmName("getSolarCapabilityConfiguration")
      get() = _builder.getSolarCapabilityConfiguration()
      @JvmName("setSolarCapabilityConfiguration")
      set(value) {
        _builder.setSolarCapabilityConfiguration(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.solarmodule.SolarCapabilityConfiguration solarCapabilityConfiguration = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearSolarCapabilityConfiguration() {
      _builder.clearSolarCapabilityConfiguration()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.solarmodule.SolarCapabilityConfiguration solarCapabilityConfiguration = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     * @return Whether the solarCapabilityConfiguration field is set.
     */
    public fun hasSolarCapabilityConfiguration(): kotlin.Boolean {
      return _builder.hasSolarCapabilityConfiguration()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.solarmodule.SolarCapabilityOverride.copy(block: openfmb.solarmodule.SolarCapabilityOverrideKt.Dsl.() -> kotlin.Unit): openfmb.solarmodule.SolarCapabilityOverride =
  openfmb.solarmodule.SolarCapabilityOverrideKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.solarmodule.SolarCapabilityOverrideOrBuilder.identifiedObjectOrNull: openfmb.commonmodule.IdentifiedObject?
  get() = if (hasIdentifiedObject()) getIdentifiedObject() else null

public val openfmb.solarmodule.SolarCapabilityOverrideOrBuilder.solarCapabilityConfigurationOrNull: openfmb.solarmodule.SolarCapabilityConfiguration?
  get() = if (hasSolarCapabilityConfiguration()) getSolarCapabilityConfiguration() else null

