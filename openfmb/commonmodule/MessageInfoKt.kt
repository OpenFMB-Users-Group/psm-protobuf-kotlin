// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: commonmodule/commonmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializemessageInfo")
public inline fun messageInfo(block: openfmb.commonmodule.MessageInfoKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.MessageInfo =
  openfmb.commonmodule.MessageInfoKt.Dsl._create(openfmb.commonmodule.MessageInfo.newBuilder()).apply { block() }._build()
/**
 * ```
 * Generic control message info.
 * ```
 *
 * Protobuf type `commonmodule.MessageInfo`
 */
public object MessageInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.MessageInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.MessageInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.MessageInfo = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];`
     */
    public var identifiedObject: openfmb.commonmodule.IdentifiedObject
      @JvmName("getIdentifiedObject")
      get() = _builder.getIdentifiedObject()
      @JvmName("setIdentifiedObject")
      set(value) {
        _builder.setIdentifiedObject(value)
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearIdentifiedObject() {
      _builder.clearIdentifiedObject()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the identifiedObject field is set.
     */
    public fun hasIdentifiedObject(): kotlin.Boolean {
      return _builder.hasIdentifiedObject()
    }

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.Timestamp messageTimeStamp = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var messageTimeStamp: openfmb.commonmodule.Timestamp
      @JvmName("getMessageTimeStamp")
      get() = _builder.getMessageTimeStamp()
      @JvmName("setMessageTimeStamp")
      set(value) {
        _builder.setMessageTimeStamp(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.Timestamp messageTimeStamp = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearMessageTimeStamp() {
      _builder.clearMessageTimeStamp()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.Timestamp messageTimeStamp = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the messageTimeStamp field is set.
     */
    public fun hasMessageTimeStamp(): kotlin.Boolean {
      return _builder.hasMessageTimeStamp()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.commonmodule.MessageInfo.copy(block: openfmb.commonmodule.MessageInfoKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.MessageInfo =
  openfmb.commonmodule.MessageInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.commonmodule.MessageInfoOrBuilder.identifiedObjectOrNull: openfmb.commonmodule.IdentifiedObject?
  get() = if (hasIdentifiedObject()) getIdentifiedObject() else null

public val openfmb.commonmodule.MessageInfoOrBuilder.messageTimeStampOrNull: openfmb.commonmodule.Timestamp?
  get() = if (hasMessageTimeStamp()) getMessageTimeStamp() else null

