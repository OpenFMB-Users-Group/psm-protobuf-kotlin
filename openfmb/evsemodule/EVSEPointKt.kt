// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: evsemodule/evsemodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.evsemodule;

@kotlin.jvm.JvmName("-initializeeVSEPoint")
public inline fun eVSEPoint(block: openfmb.evsemodule.EVSEPointKt.Dsl.() -> kotlin.Unit): openfmb.evsemodule.EVSEPoint =
  openfmb.evsemodule.EVSEPointKt.Dsl._create(openfmb.evsemodule.EVSEPoint.newBuilder()).apply { block() }._build()
/**
 * ```
 * Point definition (Point)
 * ```
 *
 * Protobuf type `evsemodule.EVSEPoint`
 */
public object EVSEPointKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.evsemodule.EVSEPoint.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.evsemodule.EVSEPoint.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.evsemodule.EVSEPoint = _builder.build()

    /**
     * ```
     * EVSE function parameter
     * ```
     *
     * `.evsemodule.EVSEFunction function = 3;`
     */
    public var function: openfmb.evsemodule.EVSEFunction
      @kotlin.jvm.JvmName("getFunction")
        get() = _builder.function
      @kotlin.jvm.JvmName("setFunction")
        set(value) {
        _builder.function = value
      }
    /**
     * ```
     * EVSE function parameter
     * ```
     *
     * `.evsemodule.EVSEFunction function = 3;`
     */
    public fun clearFunction() {
      _builder.clearFunction()
    }
    /**
     * ```
     * EVSE function parameter
     * ```
     *
     * `.evsemodule.EVSEFunction function = 3;`
     * @return Whether the function field is set.
     */
    public fun hasFunction(): kotlin.Boolean {
      return _builder.hasFunction()
    }

    public val EVSEPointKt.Dsl.functionOrNull: openfmb.evsemodule.EVSEFunction?
      get() = _builder.functionOrNull

    /**
     * ```
     * Grid connect mode
     * ```
     *
     * `.commonmodule.ENG_GridConnectModeKind mode = 4;`
     */
    public var mode: openfmb.commonmodule.ENG_GridConnectModeKind
      @kotlin.jvm.JvmName("getMode")
        get() = _builder.mode
      @kotlin.jvm.JvmName("setMode")
        set(value) {
        _builder.mode = value
      }
    /**
     * ```
     * Grid connect mode
     * ```
     *
     * `.commonmodule.ENG_GridConnectModeKind mode = 4;`
     */
    public fun clearMode() {
      _builder.clearMode()
    }
    /**
     * ```
     * Grid connect mode
     * ```
     *
     * `.commonmodule.ENG_GridConnectModeKind mode = 4;`
     * @return Whether the mode field is set.
     */
    public fun hasMode(): kotlin.Boolean {
      return _builder.hasMode()
    }

    public val EVSEPointKt.Dsl.modeOrNull: openfmb.commonmodule.ENG_GridConnectModeKind?
      get() = _builder.modeOrNull

    /**
     * ```
     * Ramp rates
     * ```
     *
     * `.commonmodule.RampRate rampRates = 7;`
     */
    public var rampRates: openfmb.commonmodule.RampRate
      @kotlin.jvm.JvmName("getRampRates")
        get() = _builder.rampRates
      @kotlin.jvm.JvmName("setRampRates")
        set(value) {
        _builder.rampRates = value
      }
    /**
     * ```
     * Ramp rates
     * ```
     *
     * `.commonmodule.RampRate rampRates = 7;`
     */
    public fun clearRampRates() {
      _builder.clearRampRates()
    }
    /**
     * ```
     * Ramp rates
     * ```
     *
     * `.commonmodule.RampRate rampRates = 7;`
     * @return Whether the rampRates field is set.
     */
    public fun hasRampRates(): kotlin.Boolean {
      return _builder.hasRampRates()
    }

    public val EVSEPointKt.Dsl.rampRatesOrNull: openfmb.commonmodule.RampRate?
      get() = _builder.rampRatesOrNull

    /**
     * ```
     * Reset device
     * ```
     *
     * `.commonmodule.ControlSPC reset = 10;`
     */
    public var reset: openfmb.commonmodule.ControlSPC
      @kotlin.jvm.JvmName("getReset")
        get() = _builder.reset
      @kotlin.jvm.JvmName("setReset")
        set(value) {
        _builder.reset = value
      }
    /**
     * ```
     * Reset device
     * ```
     *
     * `.commonmodule.ControlSPC reset = 10;`
     */
    public fun clearReset() {
      _builder.clearReset()
    }
    /**
     * ```
     * Reset device
     * ```
     *
     * `.commonmodule.ControlSPC reset = 10;`
     * @return Whether the reset field is set.
     */
    public fun hasReset(): kotlin.Boolean {
      return _builder.hasReset()
    }

    public val EVSEPointKt.Dsl.resetOrNull: openfmb.commonmodule.ControlSPC?
      get() = _builder.resetOrNull

    /**
     * ```
     * EV state
     * ```
     *
     * `.evsemodule.Optional_ChargingStateKind state = 11;`
     */
    public var state: openfmb.evsemodule.Optional_ChargingStateKind
      @kotlin.jvm.JvmName("getState")
        get() = _builder.state
      @kotlin.jvm.JvmName("setState")
        set(value) {
        _builder.state = value
      }
    /**
     * ```
     * EV state
     * ```
     *
     * `.evsemodule.Optional_ChargingStateKind state = 11;`
     */
    public fun clearState() {
      _builder.clearState()
    }
    /**
     * ```
     * EV state
     * ```
     *
     * `.evsemodule.Optional_ChargingStateKind state = 11;`
     * @return Whether the state field is set.
     */
    public fun hasState(): kotlin.Boolean {
      return _builder.hasState()
    }

    public val EVSEPointKt.Dsl.stateOrNull: openfmb.evsemodule.Optional_ChargingStateKind?
      get() = _builder.stateOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.EnterServiceAPC enterServiceOperation = 16;`
     */
    public var enterServiceOperation: openfmb.commonmodule.EnterServiceAPC
      @kotlin.jvm.JvmName("getEnterServiceOperation")
        get() = _builder.enterServiceOperation
      @kotlin.jvm.JvmName("setEnterServiceOperation")
        set(value) {
        _builder.enterServiceOperation = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.EnterServiceAPC enterServiceOperation = 16;`
     */
    public fun clearEnterServiceOperation() {
      _builder.clearEnterServiceOperation()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.EnterServiceAPC enterServiceOperation = 16;`
     * @return Whether the enterServiceOperation field is set.
     */
    public fun hasEnterServiceOperation(): kotlin.Boolean {
      return _builder.hasEnterServiceOperation()
    }

    public val EVSEPointKt.Dsl.enterServiceOperationOrNull: openfmb.commonmodule.EnterServiceAPC?
      get() = _builder.enterServiceOperationOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.HzWAPC hzWOperation = 17;`
     */
    public var hzWOperation: openfmb.commonmodule.HzWAPC
      @kotlin.jvm.JvmName("getHzWOperation")
        get() = _builder.hzWOperation
      @kotlin.jvm.JvmName("setHzWOperation")
        set(value) {
        _builder.hzWOperation = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.HzWAPC hzWOperation = 17;`
     */
    public fun clearHzWOperation() {
      _builder.clearHzWOperation()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.HzWAPC hzWOperation = 17;`
     * @return Whether the hzWOperation field is set.
     */
    public fun hasHzWOperation(): kotlin.Boolean {
      return _builder.hasHzWOperation()
    }

    public val EVSEPointKt.Dsl.hzWOperationOrNull: openfmb.commonmodule.HzWAPC?
      get() = _builder.hzWOperationOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.LimitWAPC limitWOperation = 18;`
     */
    public var limitWOperation: openfmb.commonmodule.LimitWAPC
      @kotlin.jvm.JvmName("getLimitWOperation")
        get() = _builder.limitWOperation
      @kotlin.jvm.JvmName("setLimitWOperation")
        set(value) {
        _builder.limitWOperation = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.LimitWAPC limitWOperation = 18;`
     */
    public fun clearLimitWOperation() {
      _builder.clearLimitWOperation()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.LimitWAPC limitWOperation = 18;`
     * @return Whether the limitWOperation field is set.
     */
    public fun hasLimitWOperation(): kotlin.Boolean {
      return _builder.hasLimitWOperation()
    }

    public val EVSEPointKt.Dsl.limitWOperationOrNull: openfmb.commonmodule.LimitWAPC?
      get() = _builder.limitWOperationOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.PFSPC pFOperation = 19;`
     */
    public var pFOperation: openfmb.commonmodule.PFSPC
      @kotlin.jvm.JvmName("getPFOperation")
        get() = _builder.pfOperation
      @kotlin.jvm.JvmName("setPFOperation")
        set(value) {
        _builder.pfOperation = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.PFSPC pFOperation = 19;`
     */
    public fun clearPFOperation() {
      _builder.clearPFOperation()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.PFSPC pFOperation = 19;`
     * @return Whether the pFOperation field is set.
     */
    public fun hasPFOperation(): kotlin.Boolean {
      return _builder.hasPFOperation()
    }

    public val EVSEPointKt.Dsl.pFOperationOrNull: openfmb.commonmodule.PFSPC?
      get() = _builder.pFOperationOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.TmHzCSG tmHzTripOperation = 20;`
     */
    public var tmHzTripOperation: openfmb.commonmodule.TmHzCSG
      @kotlin.jvm.JvmName("getTmHzTripOperation")
        get() = _builder.tmHzTripOperation
      @kotlin.jvm.JvmName("setTmHzTripOperation")
        set(value) {
        _builder.tmHzTripOperation = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.TmHzCSG tmHzTripOperation = 20;`
     */
    public fun clearTmHzTripOperation() {
      _builder.clearTmHzTripOperation()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.TmHzCSG tmHzTripOperation = 20;`
     * @return Whether the tmHzTripOperation field is set.
     */
    public fun hasTmHzTripOperation(): kotlin.Boolean {
      return _builder.hasTmHzTripOperation()
    }

    public val EVSEPointKt.Dsl.tmHzTripOperationOrNull: openfmb.commonmodule.TmHzCSG?
      get() = _builder.tmHzTripOperationOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.TmVoltCSG tmVoltTripOperation = 21;`
     */
    public var tmVoltTripOperation: openfmb.commonmodule.TmVoltCSG
      @kotlin.jvm.JvmName("getTmVoltTripOperation")
        get() = _builder.tmVoltTripOperation
      @kotlin.jvm.JvmName("setTmVoltTripOperation")
        set(value) {
        _builder.tmVoltTripOperation = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.TmVoltCSG tmVoltTripOperation = 21;`
     */
    public fun clearTmVoltTripOperation() {
      _builder.clearTmVoltTripOperation()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.TmVoltCSG tmVoltTripOperation = 21;`
     * @return Whether the tmVoltTripOperation field is set.
     */
    public fun hasTmVoltTripOperation(): kotlin.Boolean {
      return _builder.hasTmVoltTripOperation()
    }

    public val EVSEPointKt.Dsl.tmVoltTripOperationOrNull: openfmb.commonmodule.TmVoltCSG?
      get() = _builder.tmVoltTripOperationOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.VarSPC vArOperation = 22;`
     */
    public var vArOperation: openfmb.commonmodule.VarSPC
      @kotlin.jvm.JvmName("getVArOperation")
        get() = _builder.vArOperation
      @kotlin.jvm.JvmName("setVArOperation")
        set(value) {
        _builder.vArOperation = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.VarSPC vArOperation = 22;`
     */
    public fun clearVArOperation() {
      _builder.clearVArOperation()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.VarSPC vArOperation = 22;`
     * @return Whether the vArOperation field is set.
     */
    public fun hasVArOperation(): kotlin.Boolean {
      return _builder.hasVArOperation()
    }

    public val EVSEPointKt.Dsl.vArOperationOrNull: openfmb.commonmodule.VarSPC?
      get() = _builder.vArOperationOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.VoltVarCSG voltVarOperation = 23;`
     */
    public var voltVarOperation: openfmb.commonmodule.VoltVarCSG
      @kotlin.jvm.JvmName("getVoltVarOperation")
        get() = _builder.voltVarOperation
      @kotlin.jvm.JvmName("setVoltVarOperation")
        set(value) {
        _builder.voltVarOperation = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.VoltVarCSG voltVarOperation = 23;`
     */
    public fun clearVoltVarOperation() {
      _builder.clearVoltVarOperation()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.VoltVarCSG voltVarOperation = 23;`
     * @return Whether the voltVarOperation field is set.
     */
    public fun hasVoltVarOperation(): kotlin.Boolean {
      return _builder.hasVoltVarOperation()
    }

    public val EVSEPointKt.Dsl.voltVarOperationOrNull: openfmb.commonmodule.VoltVarCSG?
      get() = _builder.voltVarOperationOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.VoltWCSG voltWOperation = 24;`
     */
    public var voltWOperation: openfmb.commonmodule.VoltWCSG
      @kotlin.jvm.JvmName("getVoltWOperation")
        get() = _builder.voltWOperation
      @kotlin.jvm.JvmName("setVoltWOperation")
        set(value) {
        _builder.voltWOperation = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.VoltWCSG voltWOperation = 24;`
     */
    public fun clearVoltWOperation() {
      _builder.clearVoltWOperation()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.VoltWCSG voltWOperation = 24;`
     * @return Whether the voltWOperation field is set.
     */
    public fun hasVoltWOperation(): kotlin.Boolean {
      return _builder.hasVoltWOperation()
    }

    public val EVSEPointKt.Dsl.voltWOperationOrNull: openfmb.commonmodule.VoltWCSG?
      get() = _builder.voltWOperationOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.WVarCSG wVarOperation = 25;`
     */
    public var wVarOperation: openfmb.commonmodule.WVarCSG
      @kotlin.jvm.JvmName("getWVarOperation")
        get() = _builder.wVarOperation
      @kotlin.jvm.JvmName("setWVarOperation")
        set(value) {
        _builder.wVarOperation = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.WVarCSG wVarOperation = 25;`
     */
    public fun clearWVarOperation() {
      _builder.clearWVarOperation()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.WVarCSG wVarOperation = 25;`
     * @return Whether the wVarOperation field is set.
     */
    public fun hasWVarOperation(): kotlin.Boolean {
      return _builder.hasWVarOperation()
    }

    public val EVSEPointKt.Dsl.wVarOperationOrNull: openfmb.commonmodule.WVarCSG?
      get() = _builder.wVarOperationOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.WSPC wOperation = 26;`
     */
    public var wOperation: openfmb.commonmodule.WSPC
      @kotlin.jvm.JvmName("getWOperation")
        get() = _builder.wOperation
      @kotlin.jvm.JvmName("setWOperation")
        set(value) {
        _builder.wOperation = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.WSPC wOperation = 26;`
     */
    public fun clearWOperation() {
      _builder.clearWOperation()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.WSPC wOperation = 26;`
     * @return Whether the wOperation field is set.
     */
    public fun hasWOperation(): kotlin.Boolean {
      return _builder.hasWOperation()
    }

    public val EVSEPointKt.Dsl.wOperationOrNull: openfmb.commonmodule.WSPC?
      get() = _builder.wOperationOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.evsemodule.EVSEPoint.copy(block: `openfmb.evsemodule`.EVSEPointKt.Dsl.() -> kotlin.Unit): openfmb.evsemodule.EVSEPoint =
  `openfmb.evsemodule`.EVSEPointKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.evsemodule.EVSEPointOrBuilder.functionOrNull: openfmb.evsemodule.EVSEFunction?
  get() = if (hasFunction()) getFunction() else null

public val openfmb.evsemodule.EVSEPointOrBuilder.modeOrNull: openfmb.commonmodule.ENG_GridConnectModeKind?
  get() = if (hasMode()) getMode() else null

public val openfmb.evsemodule.EVSEPointOrBuilder.rampRatesOrNull: openfmb.commonmodule.RampRate?
  get() = if (hasRampRates()) getRampRates() else null

public val openfmb.evsemodule.EVSEPointOrBuilder.resetOrNull: openfmb.commonmodule.ControlSPC?
  get() = if (hasReset()) getReset() else null

public val openfmb.evsemodule.EVSEPointOrBuilder.stateOrNull: openfmb.evsemodule.Optional_ChargingStateKind?
  get() = if (hasState()) getState() else null

public val openfmb.evsemodule.EVSEPointOrBuilder.enterServiceOperationOrNull: openfmb.commonmodule.EnterServiceAPC?
  get() = if (hasEnterServiceOperation()) getEnterServiceOperation() else null

public val openfmb.evsemodule.EVSEPointOrBuilder.hzWOperationOrNull: openfmb.commonmodule.HzWAPC?
  get() = if (hasHzWOperation()) getHzWOperation() else null

public val openfmb.evsemodule.EVSEPointOrBuilder.limitWOperationOrNull: openfmb.commonmodule.LimitWAPC?
  get() = if (hasLimitWOperation()) getLimitWOperation() else null

public val openfmb.evsemodule.EVSEPointOrBuilder.pFOperationOrNull: openfmb.commonmodule.PFSPC?
  get() = if (hasPFOperation()) getPFOperation() else null

public val openfmb.evsemodule.EVSEPointOrBuilder.tmHzTripOperationOrNull: openfmb.commonmodule.TmHzCSG?
  get() = if (hasTmHzTripOperation()) getTmHzTripOperation() else null

public val openfmb.evsemodule.EVSEPointOrBuilder.tmVoltTripOperationOrNull: openfmb.commonmodule.TmVoltCSG?
  get() = if (hasTmVoltTripOperation()) getTmVoltTripOperation() else null

public val openfmb.evsemodule.EVSEPointOrBuilder.vArOperationOrNull: openfmb.commonmodule.VarSPC?
  get() = if (hasVArOperation()) getVArOperation() else null

public val openfmb.evsemodule.EVSEPointOrBuilder.voltVarOperationOrNull: openfmb.commonmodule.VoltVarCSG?
  get() = if (hasVoltVarOperation()) getVoltVarOperation() else null

public val openfmb.evsemodule.EVSEPointOrBuilder.voltWOperationOrNull: openfmb.commonmodule.VoltWCSG?
  get() = if (hasVoltWOperation()) getVoltWOperation() else null

public val openfmb.evsemodule.EVSEPointOrBuilder.wVarOperationOrNull: openfmb.commonmodule.WVarCSG?
  get() = if (hasWVarOperation()) getWVarOperation() else null

public val openfmb.evsemodule.EVSEPointOrBuilder.wOperationOrNull: openfmb.commonmodule.WSPC?
  get() = if (hasWOperation()) getWOperation() else null

