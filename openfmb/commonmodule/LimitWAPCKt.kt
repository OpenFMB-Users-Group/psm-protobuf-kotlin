// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: commonmodule/commonmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializelimitWAPC")
public inline fun limitWAPC(block: openfmb.commonmodule.LimitWAPCKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.LimitWAPC =
  openfmb.commonmodule.LimitWAPCKt.Dsl._create(openfmb.commonmodule.LimitWAPC.newBuilder()).apply { block() }._build()
/**
 * ```
 * MISSING DOCUMENTATION!!!
 * ```
 *
 * Protobuf type `commonmodule.LimitWAPC`
 */
public object LimitWAPCKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.LimitWAPC.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.LimitWAPC.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.LimitWAPC = _builder.build()

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.OperationDWMX maxLimParameter = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var maxLimParameter: openfmb.commonmodule.OperationDWMX
      @JvmName("getMaxLimParameter")
      get() = _builder.getMaxLimParameter()
      @JvmName("setMaxLimParameter")
      set(value) {
        _builder.setMaxLimParameter(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.OperationDWMX maxLimParameter = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearMaxLimParameter() {
      _builder.clearMaxLimParameter()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.OperationDWMX maxLimParameter = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the maxLimParameter field is set.
     */
    public fun hasMaxLimParameter(): kotlin.Boolean {
      return _builder.hasMaxLimParameter()
    }

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.OperationDWMN minLimParameter = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var minLimParameter: openfmb.commonmodule.OperationDWMN
      @JvmName("getMinLimParameter")
      get() = _builder.getMinLimParameter()
      @JvmName("setMinLimParameter")
      set(value) {
        _builder.setMinLimParameter(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.OperationDWMN minLimParameter = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearMinLimParameter() {
      _builder.clearMinLimParameter()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.OperationDWMN minLimParameter = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the minLimParameter field is set.
     */
    public fun hasMinLimParameter(): kotlin.Boolean {
      return _builder.hasMinLimParameter()
    }

    /**
     * ```
     * This is an absolute value field.  Maximum Active Power
     * ```
     *
     * `float wMaxSptVal = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var wMaxSptVal: kotlin.Float
      @JvmName("getWMaxSptVal")
      get() = _builder.getWMaxSptVal()
      @JvmName("setWMaxSptVal")
      set(value) {
        _builder.setWMaxSptVal(value)
      }
    /**
     * ```
     * This is an absolute value field.  Maximum Active Power
     * ```
     *
     * `float wMaxSptVal = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearWMaxSptVal() {
      _builder.clearWMaxSptVal()
    }

    /**
     * ```
     * This is an absolute value field.  Minimum Active Power
     * ```
     *
     * `float wMinSptVal = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var wMinSptVal: kotlin.Float
      @JvmName("getWMinSptVal")
      get() = _builder.getWMinSptVal()
      @JvmName("setWMinSptVal")
      set(value) {
        _builder.setWMinSptVal(value)
      }
    /**
     * ```
     * This is an absolute value field.  Minimum Active Power
     * ```
     *
     * `float wMinSptVal = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearWMinSptVal() {
      _builder.clearWMinSptVal()
    }
  }
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun openfmb.commonmodule.LimitWAPC.copy(block: openfmb.commonmodule.LimitWAPCKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.LimitWAPC =
  openfmb.commonmodule.LimitWAPCKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.commonmodule.LimitWAPCOrBuilder.maxLimParameterOrNull: openfmb.commonmodule.OperationDWMX?
  get() = if (hasMaxLimParameter()) getMaxLimParameter() else null

public val openfmb.commonmodule.LimitWAPCOrBuilder.minLimParameterOrNull: openfmb.commonmodule.OperationDWMN?
  get() = if (hasMinLimParameter()) getMinLimParameter() else null

