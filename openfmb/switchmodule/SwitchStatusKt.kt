//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: switchmodule/switchmodule.proto

package openfmb.switchmodule;

@kotlin.jvm.JvmName("-initializeswitchStatus")
public inline fun switchStatus(block: openfmb.switchmodule.SwitchStatusKt.Dsl.() -> kotlin.Unit): openfmb.switchmodule.SwitchStatus =
  openfmb.switchmodule.SwitchStatusKt.Dsl._create(openfmb.switchmodule.SwitchStatus.newBuilder()).apply { block() }._build()
public object SwitchStatusKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.switchmodule.SwitchStatus.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.switchmodule.SwitchStatus.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.switchmodule.SwitchStatus = _builder.build()

    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];</code>
     */
    public var statusValue: openfmb.commonmodule.StatusValue
      @JvmName("getStatusValue")
      get() = _builder.getStatusValue()
      @JvmName("setStatusValue")
      set(value) {
        _builder.setStatusValue(value)
      }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];</code>
     */
    public fun clearStatusValue() {
      _builder.clearStatusValue()
    }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];</code>
     * @return Whether the statusValue field is set.
     */
    public fun hasStatusValue(): kotlin.Boolean {
      return _builder.hasStatusValue()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.switchmodule.SwitchStatusXSWI switchStatusXSWI = 2;</code>
     */
    public var switchStatusXSWI: openfmb.switchmodule.SwitchStatusXSWI
      @JvmName("getSwitchStatusXSWI")
      get() = _builder.getSwitchStatusXSWI()
      @JvmName("setSwitchStatusXSWI")
      set(value) {
        _builder.setSwitchStatusXSWI(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.switchmodule.SwitchStatusXSWI switchStatusXSWI = 2;</code>
     */
    public fun clearSwitchStatusXSWI() {
      _builder.clearSwitchStatusXSWI()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.switchmodule.SwitchStatusXSWI switchStatusXSWI = 2;</code>
     * @return Whether the switchStatusXSWI field is set.
     */
    public fun hasSwitchStatusXSWI(): kotlin.Boolean {
      return _builder.hasSwitchStatusXSWI()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.switchmodule.SwitchStatus.copy(block: openfmb.switchmodule.SwitchStatusKt.Dsl.() -> kotlin.Unit): openfmb.switchmodule.SwitchStatus =
  openfmb.switchmodule.SwitchStatusKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.switchmodule.SwitchStatusOrBuilder.statusValueOrNull: openfmb.commonmodule.StatusValue?
  get() = if (hasStatusValue()) getStatusValue() else null

public val openfmb.switchmodule.SwitchStatusOrBuilder.switchStatusXSWIOrNull: openfmb.switchmodule.SwitchStatusXSWI?
  get() = if (hasSwitchStatusXSWI()) getSwitchStatusXSWI() else null

