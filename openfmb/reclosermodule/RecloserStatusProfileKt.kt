// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: reclosermodule/reclosermodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.reclosermodule;

@kotlin.jvm.JvmName("-initializerecloserStatusProfile")
public inline fun recloserStatusProfile(block: openfmb.reclosermodule.RecloserStatusProfileKt.Dsl.() -> kotlin.Unit): openfmb.reclosermodule.RecloserStatusProfile =
  openfmb.reclosermodule.RecloserStatusProfileKt.Dsl._create(openfmb.reclosermodule.RecloserStatusProfile.newBuilder()).apply { block() }._build()
/**
 * ```
 * Recloser status profile
 * ```
 *
 * Protobuf type `reclosermodule.RecloserStatusProfile`
 */
public object RecloserStatusProfileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.reclosermodule.RecloserStatusProfile.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.reclosermodule.RecloserStatusProfile.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.reclosermodule.RecloserStatusProfile = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public var statusMessageInfo: openfmb.commonmodule.StatusMessageInfo
      @kotlin.jvm.JvmName("getStatusMessageInfo")
        get() = _builder.statusMessageInfo
      @kotlin.jvm.JvmName("setStatusMessageInfo")
        set(value) {
        _builder.statusMessageInfo = value
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearStatusMessageInfo() {
      _builder.clearStatusMessageInfo()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the statusMessageInfo field is set.
     */
    public fun hasStatusMessageInfo(): kotlin.Boolean {
      return _builder.hasStatusMessageInfo()
    }

    public val RecloserStatusProfileKt.Dsl.statusMessageInfoOrNull: openfmb.commonmodule.StatusMessageInfo?
      get() = _builder.statusMessageInfoOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reclosermodule.Recloser recloser = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var recloser: openfmb.reclosermodule.Recloser
      @kotlin.jvm.JvmName("getRecloser")
        get() = _builder.recloser
      @kotlin.jvm.JvmName("setRecloser")
        set(value) {
        _builder.recloser = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reclosermodule.Recloser recloser = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearRecloser() {
      _builder.clearRecloser()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reclosermodule.Recloser recloser = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the recloser field is set.
     */
    public fun hasRecloser(): kotlin.Boolean {
      return _builder.hasRecloser()
    }

    public val RecloserStatusProfileKt.Dsl.recloserOrNull: openfmb.reclosermodule.Recloser?
      get() = _builder.recloserOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reclosermodule.RecloserStatus recloserStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var recloserStatus: openfmb.reclosermodule.RecloserStatus
      @kotlin.jvm.JvmName("getRecloserStatus")
        get() = _builder.recloserStatus
      @kotlin.jvm.JvmName("setRecloserStatus")
        set(value) {
        _builder.recloserStatus = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reclosermodule.RecloserStatus recloserStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearRecloserStatus() {
      _builder.clearRecloserStatus()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reclosermodule.RecloserStatus recloserStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the recloserStatus field is set.
     */
    public fun hasRecloserStatus(): kotlin.Boolean {
      return _builder.hasRecloserStatus()
    }

    public val RecloserStatusProfileKt.Dsl.recloserStatusOrNull: openfmb.reclosermodule.RecloserStatus?
      get() = _builder.recloserStatusOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.reclosermodule.RecloserStatusProfile.copy(block: `openfmb.reclosermodule`.RecloserStatusProfileKt.Dsl.() -> kotlin.Unit): openfmb.reclosermodule.RecloserStatusProfile =
  `openfmb.reclosermodule`.RecloserStatusProfileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.reclosermodule.RecloserStatusProfileOrBuilder.statusMessageInfoOrNull: openfmb.commonmodule.StatusMessageInfo?
  get() = if (hasStatusMessageInfo()) getStatusMessageInfo() else null

public val openfmb.reclosermodule.RecloserStatusProfileOrBuilder.recloserOrNull: openfmb.reclosermodule.Recloser?
  get() = if (hasRecloser()) getRecloser() else null

public val openfmb.reclosermodule.RecloserStatusProfileOrBuilder.recloserStatusOrNull: openfmb.reclosermodule.RecloserStatus?
  get() = if (hasRecloserStatus()) getRecloserStatus() else null

