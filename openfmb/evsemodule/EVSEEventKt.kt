// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: evsemodule/evsemodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.evsemodule;

@kotlin.jvm.JvmName("-initializeeVSEEvent")
public inline fun eVSEEvent(block: openfmb.evsemodule.EVSEEventKt.Dsl.() -> kotlin.Unit): openfmb.evsemodule.EVSEEvent =
  openfmb.evsemodule.EVSEEventKt.Dsl._create(openfmb.evsemodule.EVSEEvent.newBuilder()).apply { block() }._build()
/**
 * ```
 * MISSING DOCUMENTATION!!!
 * ```
 *
 * Protobuf type `evsemodule.EVSEEvent`
 */
public object EVSEEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.evsemodule.EVSEEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.evsemodule.EVSEEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.evsemodule.EVSEEvent = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];`
     */
    public var eventValue: openfmb.commonmodule.EventValue
      @kotlin.jvm.JvmName("getEventValue")
        get() = _builder.eventValue
      @kotlin.jvm.JvmName("setEventValue")
        set(value) {
        _builder.eventValue = value
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearEventValue() {
      _builder.clearEventValue()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the eventValue field is set.
     */
    public fun hasEventValue(): kotlin.Boolean {
      return _builder.hasEventValue()
    }

    public val EVSEEventKt.Dsl.eventValueOrNull: openfmb.commonmodule.EventValue?
      get() = _builder.eventValueOrNull

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class EventAndStatusDESEProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `repeated .evsemodule.EventAndStatusDESE eventAndStatusDESE = 2 [(.uml.option_multiplicity_min) = 0];`
     */
     public val eventAndStatusDESE: com.google.protobuf.kotlin.DslList<openfmb.evsemodule.EventAndStatusDESE, EventAndStatusDESEProxy>
      @kotlin.jvm.JvmSynthetic
  get() = com.google.protobuf.kotlin.DslList(
        _builder.eventAndStatusDESEList
      )
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `repeated .evsemodule.EventAndStatusDESE eventAndStatusDESE = 2 [(.uml.option_multiplicity_min) = 0];`
     * @param value The eventAndStatusDESE to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addEventAndStatusDESE")
    public fun com.google.protobuf.kotlin.DslList<openfmb.evsemodule.EventAndStatusDESE, EventAndStatusDESEProxy>.add(value: openfmb.evsemodule.EventAndStatusDESE) {
      _builder.addEventAndStatusDESE(value)
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `repeated .evsemodule.EventAndStatusDESE eventAndStatusDESE = 2 [(.uml.option_multiplicity_min) = 0];`
     * @param value The eventAndStatusDESE to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignEventAndStatusDESE")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<openfmb.evsemodule.EventAndStatusDESE, EventAndStatusDESEProxy>.plusAssign(value: openfmb.evsemodule.EventAndStatusDESE) {
      add(value)
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `repeated .evsemodule.EventAndStatusDESE eventAndStatusDESE = 2 [(.uml.option_multiplicity_min) = 0];`
     * @param values The eventAndStatusDESE to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllEventAndStatusDESE")
    public fun com.google.protobuf.kotlin.DslList<openfmb.evsemodule.EventAndStatusDESE, EventAndStatusDESEProxy>.addAll(values: kotlin.collections.Iterable<openfmb.evsemodule.EventAndStatusDESE>) {
      _builder.addAllEventAndStatusDESE(values)
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `repeated .evsemodule.EventAndStatusDESE eventAndStatusDESE = 2 [(.uml.option_multiplicity_min) = 0];`
     * @param values The eventAndStatusDESE to add.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllEventAndStatusDESE")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<openfmb.evsemodule.EventAndStatusDESE, EventAndStatusDESEProxy>.plusAssign(values: kotlin.collections.Iterable<openfmb.evsemodule.EventAndStatusDESE>) {
      addAll(values)
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `repeated .evsemodule.EventAndStatusDESE eventAndStatusDESE = 2 [(.uml.option_multiplicity_min) = 0];`
     * @param index The index to set the value at.
     * @param value The eventAndStatusDESE to set.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setEventAndStatusDESE")
    public operator fun com.google.protobuf.kotlin.DslList<openfmb.evsemodule.EventAndStatusDESE, EventAndStatusDESEProxy>.set(index: kotlin.Int, value: openfmb.evsemodule.EventAndStatusDESE) {
      _builder.setEventAndStatusDESE(index, value)
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `repeated .evsemodule.EventAndStatusDESE eventAndStatusDESE = 2 [(.uml.option_multiplicity_min) = 0];`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearEventAndStatusDESE")
    public fun com.google.protobuf.kotlin.DslList<openfmb.evsemodule.EventAndStatusDESE, EventAndStatusDESEProxy>.clear() {
      _builder.clearEventAndStatusDESE()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.evsemodule.EVSEEvent.copy(block: `openfmb.evsemodule`.EVSEEventKt.Dsl.() -> kotlin.Unit): openfmb.evsemodule.EVSEEvent =
  `openfmb.evsemodule`.EVSEEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.evsemodule.EVSEEventOrBuilder.eventValueOrNull: openfmb.commonmodule.EventValue?
  get() = if (hasEventValue()) getEventValue() else null

