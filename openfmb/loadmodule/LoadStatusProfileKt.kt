// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: loadmodule/loadmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.loadmodule;

@kotlin.jvm.JvmName("-initializeloadStatusProfile")
public inline fun loadStatusProfile(block: openfmb.loadmodule.LoadStatusProfileKt.Dsl.() -> kotlin.Unit): openfmb.loadmodule.LoadStatusProfile =
  openfmb.loadmodule.LoadStatusProfileKt.Dsl._create(openfmb.loadmodule.LoadStatusProfile.newBuilder()).apply { block() }._build()
/**
 * ```
 * Load status profile
 * ```
 *
 * Protobuf type `loadmodule.LoadStatusProfile`
 */
public object LoadStatusProfileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.loadmodule.LoadStatusProfile.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.loadmodule.LoadStatusProfile.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.loadmodule.LoadStatusProfile = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public var statusMessageInfo: openfmb.commonmodule.StatusMessageInfo
      @kotlin.jvm.JvmName("getStatusMessageInfo")
        get() = _builder.statusMessageInfo
      @kotlin.jvm.JvmName("setStatusMessageInfo")
        set(value) {
        _builder.statusMessageInfo = value
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearStatusMessageInfo() {
      _builder.clearStatusMessageInfo()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the statusMessageInfo field is set.
     */
    public fun hasStatusMessageInfo(): kotlin.Boolean {
      return _builder.hasStatusMessageInfo()
    }

    public val LoadStatusProfileKt.Dsl.statusMessageInfoOrNull: openfmb.commonmodule.StatusMessageInfo?
      get() = _builder.statusMessageInfoOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.EnergyConsumer energyConsumer = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var energyConsumer: openfmb.commonmodule.EnergyConsumer
      @kotlin.jvm.JvmName("getEnergyConsumer")
        get() = _builder.energyConsumer
      @kotlin.jvm.JvmName("setEnergyConsumer")
        set(value) {
        _builder.energyConsumer = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.EnergyConsumer energyConsumer = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearEnergyConsumer() {
      _builder.clearEnergyConsumer()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.EnergyConsumer energyConsumer = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the energyConsumer field is set.
     */
    public fun hasEnergyConsumer(): kotlin.Boolean {
      return _builder.hasEnergyConsumer()
    }

    public val LoadStatusProfileKt.Dsl.energyConsumerOrNull: openfmb.commonmodule.EnergyConsumer?
      get() = _builder.energyConsumerOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.loadmodule.LoadStatus loadStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var loadStatus: openfmb.loadmodule.LoadStatus
      @kotlin.jvm.JvmName("getLoadStatus")
        get() = _builder.loadStatus
      @kotlin.jvm.JvmName("setLoadStatus")
        set(value) {
        _builder.loadStatus = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.loadmodule.LoadStatus loadStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearLoadStatus() {
      _builder.clearLoadStatus()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.loadmodule.LoadStatus loadStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the loadStatus field is set.
     */
    public fun hasLoadStatus(): kotlin.Boolean {
      return _builder.hasLoadStatus()
    }

    public val LoadStatusProfileKt.Dsl.loadStatusOrNull: openfmb.loadmodule.LoadStatus?
      get() = _builder.loadStatusOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.loadmodule.LoadStatusProfile.copy(block: `openfmb.loadmodule`.LoadStatusProfileKt.Dsl.() -> kotlin.Unit): openfmb.loadmodule.LoadStatusProfile =
  `openfmb.loadmodule`.LoadStatusProfileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.loadmodule.LoadStatusProfileOrBuilder.statusMessageInfoOrNull: openfmb.commonmodule.StatusMessageInfo?
  get() = if (hasStatusMessageInfo()) getStatusMessageInfo() else null

public val openfmb.loadmodule.LoadStatusProfileOrBuilder.energyConsumerOrNull: openfmb.commonmodule.EnergyConsumer?
  get() = if (hasEnergyConsumer()) getEnergyConsumer() else null

public val openfmb.loadmodule.LoadStatusProfileOrBuilder.loadStatusOrNull: openfmb.loadmodule.LoadStatus?
  get() = if (hasLoadStatus()) getLoadStatus() else null

