// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: generationmodule/generationmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.generationmodule;

@kotlin.jvm.JvmName("-initializerealPowerControl")
public inline fun realPowerControl(block: openfmb.generationmodule.RealPowerControlKt.Dsl.() -> kotlin.Unit): openfmb.generationmodule.RealPowerControl =
  openfmb.generationmodule.RealPowerControlKt.Dsl._create(openfmb.generationmodule.RealPowerControl.newBuilder()).apply { block() }._build()
/**
 * ```
 * Generation real power control
 * ```
 *
 * Protobuf type `generationmodule.RealPowerControl`
 */
public object RealPowerControlKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.generationmodule.RealPowerControl.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.generationmodule.RealPowerControl.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.generationmodule.RealPowerControl = _builder.build()

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.generationmodule.DroopParameter droopSetpoint = 1;`
     */
    public var droopSetpoint: openfmb.generationmodule.DroopParameter
      @JvmName("getDroopSetpoint")
      get() = _builder.getDroopSetpoint()
      @JvmName("setDroopSetpoint")
      set(value) {
        _builder.setDroopSetpoint(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.generationmodule.DroopParameter droopSetpoint = 1;`
     */
    public fun clearDroopSetpoint() {
      _builder.clearDroopSetpoint()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.generationmodule.DroopParameter droopSetpoint = 1;`
     * @return Whether the droopSetpoint field is set.
     */
    public fun hasDroopSetpoint(): kotlin.Boolean {
      return _builder.hasDroopSetpoint()
    }

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.google.protobuf.FloatValue isochronousSetpoint = 2;`
     */
    public var isochronousSetpoint: com.google.protobuf.FloatValue
      @JvmName("getIsochronousSetpoint")
      get() = _builder.getIsochronousSetpoint()
      @JvmName("setIsochronousSetpoint")
      set(value) {
        _builder.setIsochronousSetpoint(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.google.protobuf.FloatValue isochronousSetpoint = 2;`
     */
    public fun clearIsochronousSetpoint() {
      _builder.clearIsochronousSetpoint()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.google.protobuf.FloatValue isochronousSetpoint = 2;`
     * @return Whether the isochronousSetpoint field is set.
     */
    public fun hasIsochronousSetpoint(): kotlin.Boolean {
      return _builder.hasIsochronousSetpoint()
    }

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.Optional_RealPowerControlKind realPowerControlMode = 3;`
     */
    public var realPowerControlMode: openfmb.commonmodule.Optional_RealPowerControlKind
      @JvmName("getRealPowerControlMode")
      get() = _builder.getRealPowerControlMode()
      @JvmName("setRealPowerControlMode")
      set(value) {
        _builder.setRealPowerControlMode(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.Optional_RealPowerControlKind realPowerControlMode = 3;`
     */
    public fun clearRealPowerControlMode() {
      _builder.clearRealPowerControlMode()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.Optional_RealPowerControlKind realPowerControlMode = 3;`
     * @return Whether the realPowerControlMode field is set.
     */
    public fun hasRealPowerControlMode(): kotlin.Boolean {
      return _builder.hasRealPowerControlMode()
    }

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.google.protobuf.FloatValue realPowerSetpoint = 4;`
     */
    public var realPowerSetpoint: com.google.protobuf.FloatValue
      @JvmName("getRealPowerSetpoint")
      get() = _builder.getRealPowerSetpoint()
      @JvmName("setRealPowerSetpoint")
      set(value) {
        _builder.setRealPowerSetpoint(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.google.protobuf.FloatValue realPowerSetpoint = 4;`
     */
    public fun clearRealPowerSetpoint() {
      _builder.clearRealPowerSetpoint()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.google.protobuf.FloatValue realPowerSetpoint = 4;`
     * @return Whether the realPowerSetpoint field is set.
     */
    public fun hasRealPowerSetpoint(): kotlin.Boolean {
      return _builder.hasRealPowerSetpoint()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.generationmodule.RealPowerControl.copy(block: openfmb.generationmodule.RealPowerControlKt.Dsl.() -> kotlin.Unit): openfmb.generationmodule.RealPowerControl =
  openfmb.generationmodule.RealPowerControlKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.generationmodule.RealPowerControlOrBuilder.droopSetpointOrNull: openfmb.generationmodule.DroopParameter?
  get() = if (hasDroopSetpoint()) getDroopSetpoint() else null

public val openfmb.generationmodule.RealPowerControlOrBuilder.isochronousSetpointOrNull: com.google.protobuf.FloatValue?
  get() = if (hasIsochronousSetpoint()) getIsochronousSetpoint() else null

public val openfmb.generationmodule.RealPowerControlOrBuilder.realPowerControlModeOrNull: openfmb.commonmodule.Optional_RealPowerControlKind?
  get() = if (hasRealPowerControlMode()) getRealPowerControlMode() else null

public val openfmb.generationmodule.RealPowerControlOrBuilder.realPowerSetpointOrNull: com.google.protobuf.FloatValue?
  get() = if (hasRealPowerSetpoint()) getRealPowerSetpoint() else null

