// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: interconnectionmodule/interconnectionmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.interconnectionmodule;

@kotlin.jvm.JvmName("-initializeinterconnectionSchedule")
public inline fun interconnectionSchedule(block: openfmb.interconnectionmodule.InterconnectionScheduleKt.Dsl.() -> kotlin.Unit): openfmb.interconnectionmodule.InterconnectionSchedule =
  openfmb.interconnectionmodule.InterconnectionScheduleKt.Dsl._create(openfmb.interconnectionmodule.InterconnectionSchedule.newBuilder()).apply { block() }._build()
/**
 * ```
 * Interconnection schedule
 * ```
 *
 * Protobuf type `interconnectionmodule.InterconnectionSchedule`
 */
public object InterconnectionScheduleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.interconnectionmodule.InterconnectionSchedule.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.interconnectionmodule.InterconnectionSchedule.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.interconnectionmodule.InterconnectionSchedule = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];`
     */
    public var identifiedObject: openfmb.commonmodule.IdentifiedObject
      @JvmName("getIdentifiedObject")
      get() = _builder.getIdentifiedObject()
      @JvmName("setIdentifiedObject")
      set(value) {
        _builder.setIdentifiedObject(value)
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearIdentifiedObject() {
      _builder.clearIdentifiedObject()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the identifiedObject field is set.
     */
    public fun hasIdentifiedObject(): kotlin.Boolean {
      return _builder.hasIdentifiedObject()
    }

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.CheckConditions check = 2;`
     */
    public var check: openfmb.commonmodule.CheckConditions
      @JvmName("getCheck")
      get() = _builder.getCheck()
      @JvmName("setCheck")
      set(value) {
        _builder.setCheck(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.CheckConditions check = 2;`
     */
    public fun clearCheck() {
      _builder.clearCheck()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.CheckConditions check = 2;`
     * @return Whether the check field is set.
     */
    public fun hasCheck(): kotlin.Boolean {
      return _builder.hasCheck()
    }

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.interconnectionmodule.InterconnectionScheduleFSCC interconnectionScheduleFSCC = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var interconnectionScheduleFSCC: openfmb.interconnectionmodule.InterconnectionScheduleFSCC
      @JvmName("getInterconnectionScheduleFSCC")
      get() = _builder.getInterconnectionScheduleFSCC()
      @JvmName("setInterconnectionScheduleFSCC")
      set(value) {
        _builder.setInterconnectionScheduleFSCC(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.interconnectionmodule.InterconnectionScheduleFSCC interconnectionScheduleFSCC = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearInterconnectionScheduleFSCC() {
      _builder.clearInterconnectionScheduleFSCC()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.interconnectionmodule.InterconnectionScheduleFSCC interconnectionScheduleFSCC = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the interconnectionScheduleFSCC field is set.
     */
    public fun hasInterconnectionScheduleFSCC(): kotlin.Boolean {
      return _builder.hasInterconnectionScheduleFSCC()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.interconnectionmodule.InterconnectionSchedule.copy(block: openfmb.interconnectionmodule.InterconnectionScheduleKt.Dsl.() -> kotlin.Unit): openfmb.interconnectionmodule.InterconnectionSchedule =
  openfmb.interconnectionmodule.InterconnectionScheduleKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.interconnectionmodule.InterconnectionScheduleOrBuilder.identifiedObjectOrNull: openfmb.commonmodule.IdentifiedObject?
  get() = if (hasIdentifiedObject()) getIdentifiedObject() else null

public val openfmb.interconnectionmodule.InterconnectionScheduleOrBuilder.checkOrNull: openfmb.commonmodule.CheckConditions?
  get() = if (hasCheck()) getCheck() else null

public val openfmb.interconnectionmodule.InterconnectionScheduleOrBuilder.interconnectionScheduleFSCCOrNull: openfmb.interconnectionmodule.InterconnectionScheduleFSCC?
  get() = if (hasInterconnectionScheduleFSCC()) getInterconnectionScheduleFSCC() else null

