// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: reservemodule/reservemodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.reservemodule;

@kotlin.jvm.JvmName("-initializereserveRequest")
public inline fun reserveRequest(block: openfmb.reservemodule.ReserveRequestKt.Dsl.() -> kotlin.Unit): openfmb.reservemodule.ReserveRequest =
  openfmb.reservemodule.ReserveRequestKt.Dsl._create(openfmb.reservemodule.ReserveRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * MISSING DOCUMENTATION!!!
 * ```
 *
 * Protobuf type `reservemodule.ReserveRequest`
 */
public object ReserveRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.reservemodule.ReserveRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.reservemodule.ReserveRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.reservemodule.ReserveRequest = _builder.build()

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `string requestID = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var requestID: kotlin.String
      @JvmName("getRequestID")
      get() = _builder.getRequestID()
      @JvmName("setRequestID")
      set(value) {
        _builder.setRequestID(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `string requestID = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearRequestID() {
      _builder.clearRequestID()
    }

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reservemodule.ReserveMargin margin = 2;`
     */
    public var margin: openfmb.reservemodule.ReserveMargin
      @JvmName("getMargin")
      get() = _builder.getMargin()
      @JvmName("setMargin")
      set(value) {
        _builder.setMargin(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reservemodule.ReserveMargin margin = 2;`
     */
    public fun clearMargin() {
      _builder.clearMargin()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reservemodule.ReserveMargin margin = 2;`
     * @return Whether the margin field is set.
     */
    public fun hasMargin(): kotlin.Boolean {
      return _builder.hasMargin()
    }

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reservemodule.ReserveMargin standbyMargin = 3;`
     */
    public var standbyMargin: openfmb.reservemodule.ReserveMargin
      @JvmName("getStandbyMargin")
      get() = _builder.getStandbyMargin()
      @JvmName("setStandbyMargin")
      set(value) {
        _builder.setStandbyMargin(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reservemodule.ReserveMargin standbyMargin = 3;`
     */
    public fun clearStandbyMargin() {
      _builder.clearStandbyMargin()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reservemodule.ReserveMargin standbyMargin = 3;`
     * @return Whether the standbyMargin field is set.
     */
    public fun hasStandbyMargin(): kotlin.Boolean {
      return _builder.hasStandbyMargin()
    }
  }
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun openfmb.reservemodule.ReserveRequest.copy(block: openfmb.reservemodule.ReserveRequestKt.Dsl.() -> kotlin.Unit): openfmb.reservemodule.ReserveRequest =
  openfmb.reservemodule.ReserveRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.reservemodule.ReserveRequestOrBuilder.marginOrNull: openfmb.reservemodule.ReserveMargin?
  get() = if (hasMargin()) getMargin() else null

public val openfmb.reservemodule.ReserveRequestOrBuilder.standbyMarginOrNull: openfmb.reservemodule.ReserveMargin?
  get() = if (hasStandbyMargin()) getStandbyMargin() else null

