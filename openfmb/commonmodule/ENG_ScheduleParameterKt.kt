// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: commonmodule/commonmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializeeNGScheduleParameter")
public inline fun eNGScheduleParameter(block: openfmb.commonmodule.ENG_ScheduleParameterKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.ENG_ScheduleParameter =
  openfmb.commonmodule.ENG_ScheduleParameterKt.Dsl._create(openfmb.commonmodule.ENG_ScheduleParameter.newBuilder()).apply { block() }._build()
/**
 * ```
 * Grid connect mode kind
 * ```
 *
 * Protobuf type `commonmodule.ENG_ScheduleParameter`
 */
public object ENG_ScheduleParameterKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.ENG_ScheduleParameter.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.ENG_ScheduleParameter.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.ENG_ScheduleParameter = _builder.build()

    /**
     * ```
     * Schedule parameter type
     * ```
     *
     * `.commonmodule.ScheduleParameterKind scheduleParameterType = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var scheduleParameterType: openfmb.commonmodule.ScheduleParameterKind
      @JvmName("getScheduleParameterType")
      get() = _builder.getScheduleParameterType()
      @JvmName("setScheduleParameterType")
      set(value) {
        _builder.setScheduleParameterType(value)
      }
    public var scheduleParameterTypeValue: kotlin.Int
      @JvmName("getScheduleParameterTypeValue")
      get() = _builder.getScheduleParameterTypeValue()
      @JvmName("setScheduleParameterTypeValue")
      set(value) {
        _builder.setScheduleParameterTypeValue(value)
      }
    /**
     * ```
     * Schedule parameter type
     * ```
     *
     * `.commonmodule.ScheduleParameterKind scheduleParameterType = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearScheduleParameterType() {
      _builder.clearScheduleParameterType()
    }

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `double value = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var value: kotlin.Double
      @JvmName("getValue")
      get() = _builder.getValue()
      @JvmName("setValue")
      set(value) {
        _builder.setValue(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `double value = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearValue() {
      _builder.clearValue()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.commonmodule.ENG_ScheduleParameter.copy(block: openfmb.commonmodule.ENG_ScheduleParameterKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.ENG_ScheduleParameter =
  openfmb.commonmodule.ENG_ScheduleParameterKt.Dsl._create(this.toBuilder()).apply { block() }._build()

