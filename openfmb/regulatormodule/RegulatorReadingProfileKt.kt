// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: regulatormodule/regulatormodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.regulatormodule;

@kotlin.jvm.JvmName("-initializeregulatorReadingProfile")
public inline fun regulatorReadingProfile(block: openfmb.regulatormodule.RegulatorReadingProfileKt.Dsl.() -> kotlin.Unit): openfmb.regulatormodule.RegulatorReadingProfile =
  openfmb.regulatormodule.RegulatorReadingProfileKt.Dsl._create(openfmb.regulatormodule.RegulatorReadingProfile.newBuilder()).apply { block() }._build()
/**
 * ```
 * Regulator reading profile
 * ```
 *
 * Protobuf type `regulatormodule.RegulatorReadingProfile`
 */
public object RegulatorReadingProfileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.regulatormodule.RegulatorReadingProfile.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.regulatormodule.RegulatorReadingProfile.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.regulatormodule.RegulatorReadingProfile = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public var readingMessageInfo: openfmb.commonmodule.ReadingMessageInfo
      @JvmName("getReadingMessageInfo")
      get() = _builder.getReadingMessageInfo()
      @JvmName("setReadingMessageInfo")
      set(value) {
        _builder.setReadingMessageInfo(value)
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearReadingMessageInfo() {
      _builder.clearReadingMessageInfo()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the readingMessageInfo field is set.
     */
    public fun hasReadingMessageInfo(): kotlin.Boolean {
      return _builder.hasReadingMessageInfo()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RegulatorReadingProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `repeated .regulatormodule.RegulatorReading regulatorReading = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];`
     */
     public val regulatorReading: com.google.protobuf.kotlin.DslList<openfmb.regulatormodule.RegulatorReading, RegulatorReadingProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRegulatorReadingList()
      )
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `repeated .regulatormodule.RegulatorReading regulatorReading = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];`
     * @param value The regulatorReading to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRegulatorReading")
    public fun com.google.protobuf.kotlin.DslList<openfmb.regulatormodule.RegulatorReading, RegulatorReadingProxy>.add(value: openfmb.regulatormodule.RegulatorReading) {
      _builder.addRegulatorReading(value)
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `repeated .regulatormodule.RegulatorReading regulatorReading = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];`
     * @param value The regulatorReading to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRegulatorReading")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<openfmb.regulatormodule.RegulatorReading, RegulatorReadingProxy>.plusAssign(value: openfmb.regulatormodule.RegulatorReading) {
      add(value)
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `repeated .regulatormodule.RegulatorReading regulatorReading = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];`
     * @param values The regulatorReading to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRegulatorReading")
    public fun com.google.protobuf.kotlin.DslList<openfmb.regulatormodule.RegulatorReading, RegulatorReadingProxy>.addAll(values: kotlin.collections.Iterable<openfmb.regulatormodule.RegulatorReading>) {
      _builder.addAllRegulatorReading(values)
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `repeated .regulatormodule.RegulatorReading regulatorReading = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];`
     * @param values The regulatorReading to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRegulatorReading")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<openfmb.regulatormodule.RegulatorReading, RegulatorReadingProxy>.plusAssign(values: kotlin.collections.Iterable<openfmb.regulatormodule.RegulatorReading>) {
      addAll(values)
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `repeated .regulatormodule.RegulatorReading regulatorReading = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];`
     * @param index The index to set the value at.
     * @param value The regulatorReading to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRegulatorReading")
    public operator fun com.google.protobuf.kotlin.DslList<openfmb.regulatormodule.RegulatorReading, RegulatorReadingProxy>.set(index: kotlin.Int, value: openfmb.regulatormodule.RegulatorReading) {
      _builder.setRegulatorReading(index, value)
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `repeated .regulatormodule.RegulatorReading regulatorReading = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRegulatorReading")
    public fun com.google.protobuf.kotlin.DslList<openfmb.regulatormodule.RegulatorReading, RegulatorReadingProxy>.clear() {
      _builder.clearRegulatorReading()
    }


    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var regulatorSystem: openfmb.regulatormodule.RegulatorSystem
      @JvmName("getRegulatorSystem")
      get() = _builder.getRegulatorSystem()
      @JvmName("setRegulatorSystem")
      set(value) {
        _builder.setRegulatorSystem(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearRegulatorSystem() {
      _builder.clearRegulatorSystem()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the regulatorSystem field is set.
     */
    public fun hasRegulatorSystem(): kotlin.Boolean {
      return _builder.hasRegulatorSystem()
    }
  }
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun openfmb.regulatormodule.RegulatorReadingProfile.copy(block: openfmb.regulatormodule.RegulatorReadingProfileKt.Dsl.() -> kotlin.Unit): openfmb.regulatormodule.RegulatorReadingProfile =
  openfmb.regulatormodule.RegulatorReadingProfileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.regulatormodule.RegulatorReadingProfileOrBuilder.readingMessageInfoOrNull: openfmb.commonmodule.ReadingMessageInfo?
  get() = if (hasReadingMessageInfo()) getReadingMessageInfo() else null

public val openfmb.regulatormodule.RegulatorReadingProfileOrBuilder.regulatorSystemOrNull: openfmb.regulatormodule.RegulatorSystem?
  get() = if (hasRegulatorSystem()) getRegulatorSystem() else null

