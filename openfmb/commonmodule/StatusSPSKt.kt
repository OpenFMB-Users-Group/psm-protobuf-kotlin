// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: commonmodule/commonmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializestatusSPS")
public inline fun statusSPS(block: openfmb.commonmodule.StatusSPSKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.StatusSPS =
  openfmb.commonmodule.StatusSPSKt.Dsl._create(openfmb.commonmodule.StatusSPS.newBuilder()).apply { block() }._build()
/**
 * ```
 * Specialized 61850 SPS class
 * ```
 *
 * Protobuf type `commonmodule.StatusSPS`
 */
public object StatusSPSKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.StatusSPS.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.StatusSPS.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.StatusSPS = _builder.build()

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.Quality q = 1;`
     */
    public var q: openfmb.commonmodule.Quality
      @kotlin.jvm.JvmName("getQ")
        get() = _builder.q
      @kotlin.jvm.JvmName("setQ")
        set(value) {
        _builder.q = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.Quality q = 1;`
     */
    public fun clearQ() {
      _builder.clearQ()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.Quality q = 1;`
     * @return Whether the q field is set.
     */
    public fun hasQ(): kotlin.Boolean {
      return _builder.hasQ()
    }

    public val StatusSPSKt.Dsl.qOrNull: openfmb.commonmodule.Quality?
      get() = _builder.qOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `bool stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var stVal: kotlin.Boolean
      @kotlin.jvm.JvmName("getStVal")
        get() = _builder.stVal
      @kotlin.jvm.JvmName("setStVal")
        set(value) {
        _builder.stVal = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `bool stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearStVal() {
      _builder.clearStVal()
    }

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.Timestamp t = 3;`
     */
    public var t: openfmb.commonmodule.Timestamp
      @kotlin.jvm.JvmName("getT")
        get() = _builder.t
      @kotlin.jvm.JvmName("setT")
        set(value) {
        _builder.t = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.Timestamp t = 3;`
     */
    public fun clearT() {
      _builder.clearT()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.Timestamp t = 3;`
     * @return Whether the t field is set.
     */
    public fun hasT(): kotlin.Boolean {
      return _builder.hasT()
    }

    public val StatusSPSKt.Dsl.tOrNull: openfmb.commonmodule.Timestamp?
      get() = _builder.tOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.commonmodule.StatusSPS.copy(block: `openfmb.commonmodule`.StatusSPSKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.StatusSPS =
  `openfmb.commonmodule`.StatusSPSKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.commonmodule.StatusSPSOrBuilder.qOrNull: openfmb.commonmodule.Quality?
  get() = if (hasQ()) getQ() else null

public val openfmb.commonmodule.StatusSPSOrBuilder.tOrNull: openfmb.commonmodule.Timestamp?
  get() = if (hasT()) getT() else null

