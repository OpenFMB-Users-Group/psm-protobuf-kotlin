// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: commonmodule/commonmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializevoltageDroop")
public inline fun voltageDroop(block: openfmb.commonmodule.VoltageDroopKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.VoltageDroop =
  openfmb.commonmodule.VoltageDroopKt.Dsl._create(openfmb.commonmodule.VoltageDroop.newBuilder()).apply { block() }._build()
/**
 * ```
 * ESS inverter high level function to maintain voltage within droop dead bands.
 * ```
 *
 * Protobuf type `commonmodule.VoltageDroop`
 */
public object VoltageDroopKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.VoltageDroop.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.VoltageDroop.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.VoltageDroop = _builder.build()

    /**
     * ```
     * Control value (TRUE or FALSE)
     * ```
     *
     * `.google.protobuf.BoolValue voltageDroopCtl = 1;`
     */
    public var voltageDroopCtl: com.google.protobuf.BoolValue
      @kotlin.jvm.JvmName("getVoltageDroopCtl")
        get() = _builder.voltageDroopCtl
      @kotlin.jvm.JvmName("setVoltageDroopCtl")
        set(value) {
        _builder.voltageDroopCtl = value
      }
    /**
     * ```
     * Control value (TRUE or FALSE)
     * ```
     *
     * `.google.protobuf.BoolValue voltageDroopCtl = 1;`
     */
    public fun clearVoltageDroopCtl() {
      _builder.clearVoltageDroopCtl()
    }
    /**
     * ```
     * Control value (TRUE or FALSE)
     * ```
     *
     * `.google.protobuf.BoolValue voltageDroopCtl = 1;`
     * @return Whether the voltageDroopCtl field is set.
     */
    public fun hasVoltageDroopCtl(): kotlin.Boolean {
      return _builder.hasVoltageDroopCtl()
    }

    public val VoltageDroopKt.Dsl.voltageDroopCtlOrNull: com.google.protobuf.BoolValue?
      get() = _builder.voltageDroopCtlOrNull

    /**
     * ```
     * Voltage regulation
     * ```
     *
     * `.commonmodule.VoltageRegulation voltageRegulation = 2;`
     */
    public var voltageRegulation: openfmb.commonmodule.VoltageRegulation
      @kotlin.jvm.JvmName("getVoltageRegulation")
        get() = _builder.voltageRegulation
      @kotlin.jvm.JvmName("setVoltageRegulation")
        set(value) {
        _builder.voltageRegulation = value
      }
    /**
     * ```
     * Voltage regulation
     * ```
     *
     * `.commonmodule.VoltageRegulation voltageRegulation = 2;`
     */
    public fun clearVoltageRegulation() {
      _builder.clearVoltageRegulation()
    }
    /**
     * ```
     * Voltage regulation
     * ```
     *
     * `.commonmodule.VoltageRegulation voltageRegulation = 2;`
     * @return Whether the voltageRegulation field is set.
     */
    public fun hasVoltageRegulation(): kotlin.Boolean {
      return _builder.hasVoltageRegulation()
    }

    public val VoltageDroopKt.Dsl.voltageRegulationOrNull: openfmb.commonmodule.VoltageRegulation?
      get() = _builder.voltageRegulationOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.commonmodule.VoltageDroop.copy(block: `openfmb.commonmodule`.VoltageDroopKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.VoltageDroop =
  `openfmb.commonmodule`.VoltageDroopKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.commonmodule.VoltageDroopOrBuilder.voltageDroopCtlOrNull: com.google.protobuf.BoolValue?
  get() = if (hasVoltageDroopCtl()) getVoltageDroopCtl() else null

public val openfmb.commonmodule.VoltageDroopOrBuilder.voltageRegulationOrNull: openfmb.commonmodule.VoltageRegulation?
  get() = if (hasVoltageRegulation()) getVoltageRegulation() else null

