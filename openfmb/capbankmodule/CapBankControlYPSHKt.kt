//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: capbankmodule/capbankmodule.proto

package openfmb.capbankmodule;

@kotlin.jvm.JvmName("-initializecapBankControlYPSH")
public inline fun capBankControlYPSH(block: openfmb.capbankmodule.CapBankControlYPSHKt.Dsl.() -> kotlin.Unit): openfmb.capbankmodule.CapBankControlYPSH =
  openfmb.capbankmodule.CapBankControlYPSHKt.Dsl._create(openfmb.capbankmodule.CapBankControlYPSH.newBuilder()).apply { block() }._build()
public object CapBankControlYPSHKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.capbankmodule.CapBankControlYPSH.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.capbankmodule.CapBankControlYPSH.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.capbankmodule.CapBankControlYPSH = _builder.build()

    /**
     * <pre>
     * Current limit (boolean field)
     * </pre>
     *
     * <code>.commonmodule.PhaseSPC AmpLmt = 1;</code>
     */
    public var ampLmt: openfmb.commonmodule.PhaseSPC
      @JvmName("getAmpLmt")
      get() = _builder.getAmpLmt()
      @JvmName("setAmpLmt")
      set(value) {
        _builder.setAmpLmt(value)
      }
    /**
     * <pre>
     * Current limit (boolean field)
     * </pre>
     *
     * <code>.commonmodule.PhaseSPC AmpLmt = 1;</code>
     */
    public fun clearAmpLmt() {
      _builder.clearAmpLmt()
    }
    /**
     * <pre>
     * Current limit (boolean field)
     * </pre>
     *
     * <code>.commonmodule.PhaseSPC AmpLmt = 1;</code>
     * @return Whether the ampLmt field is set.
     */
    public fun hasAmpLmt(): kotlin.Boolean {
      return _builder.hasAmpLmt()
    }

    /**
     * <pre>
     * High current  threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC AmpThdHi = 2;</code>
     */
    public var ampThdHi: openfmb.commonmodule.PhaseAPC
      @JvmName("getAmpThdHi")
      get() = _builder.getAmpThdHi()
      @JvmName("setAmpThdHi")
      set(value) {
        _builder.setAmpThdHi(value)
      }
    /**
     * <pre>
     * High current  threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC AmpThdHi = 2;</code>
     */
    public fun clearAmpThdHi() {
      _builder.clearAmpThdHi()
    }
    /**
     * <pre>
     * High current  threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC AmpThdHi = 2;</code>
     * @return Whether the ampThdHi field is set.
     */
    public fun hasAmpThdHi(): kotlin.Boolean {
      return _builder.hasAmpThdHi()
    }

    /**
     * <pre>
     * Low current threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC AmpThdLo = 3;</code>
     */
    public var ampThdLo: openfmb.commonmodule.PhaseAPC
      @JvmName("getAmpThdLo")
      get() = _builder.getAmpThdLo()
      @JvmName("setAmpThdLo")
      set(value) {
        _builder.setAmpThdLo(value)
      }
    /**
     * <pre>
     * Low current threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC AmpThdLo = 3;</code>
     */
    public fun clearAmpThdLo() {
      _builder.clearAmpThdLo()
    }
    /**
     * <pre>
     * Low current threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC AmpThdLo = 3;</code>
     * @return Whether the ampThdLo field is set.
     */
    public fun hasAmpThdLo(): kotlin.Boolean {
      return _builder.hasAmpThdLo()
    }

    /**
     * <pre>
     * Control mode auto
     * </pre>
     *
     * <code>.commonmodule.ControlSPC CtlModeAuto = 4;</code>
     */
    public var ctlModeAuto: openfmb.commonmodule.ControlSPC
      @JvmName("getCtlModeAuto")
      get() = _builder.getCtlModeAuto()
      @JvmName("setCtlModeAuto")
      set(value) {
        _builder.setCtlModeAuto(value)
      }
    /**
     * <pre>
     * Control mode auto
     * </pre>
     *
     * <code>.commonmodule.ControlSPC CtlModeAuto = 4;</code>
     */
    public fun clearCtlModeAuto() {
      _builder.clearCtlModeAuto()
    }
    /**
     * <pre>
     * Control mode auto
     * </pre>
     *
     * <code>.commonmodule.ControlSPC CtlModeAuto = 4;</code>
     * @return Whether the ctlModeAuto field is set.
     */
    public fun hasCtlModeAuto(): kotlin.Boolean {
      return _builder.hasCtlModeAuto()
    }

    /**
     * <pre>
     * Control mode override
     * </pre>
     *
     * <code>.commonmodule.ControlSPC CtlModeOvrRd = 5;</code>
     */
    public var ctlModeOvrRd: openfmb.commonmodule.ControlSPC
      @JvmName("getCtlModeOvrRd")
      get() = _builder.getCtlModeOvrRd()
      @JvmName("setCtlModeOvrRd")
      set(value) {
        _builder.setCtlModeOvrRd(value)
      }
    /**
     * <pre>
     * Control mode override
     * </pre>
     *
     * <code>.commonmodule.ControlSPC CtlModeOvrRd = 5;</code>
     */
    public fun clearCtlModeOvrRd() {
      _builder.clearCtlModeOvrRd()
    }
    /**
     * <pre>
     * Control mode override
     * </pre>
     *
     * <code>.commonmodule.ControlSPC CtlModeOvrRd = 5;</code>
     * @return Whether the ctlModeOvrRd field is set.
     */
    public fun hasCtlModeOvrRd(): kotlin.Boolean {
      return _builder.hasCtlModeOvrRd()
    }

    /**
     * <pre>
     * Control mode remote
     * </pre>
     *
     * <code>.commonmodule.ControlSPC CtlModeRem = 6;</code>
     */
    public var ctlModeRem: openfmb.commonmodule.ControlSPC
      @JvmName("getCtlModeRem")
      get() = _builder.getCtlModeRem()
      @JvmName("setCtlModeRem")
      set(value) {
        _builder.setCtlModeRem(value)
      }
    /**
     * <pre>
     * Control mode remote
     * </pre>
     *
     * <code>.commonmodule.ControlSPC CtlModeRem = 6;</code>
     */
    public fun clearCtlModeRem() {
      _builder.clearCtlModeRem()
    }
    /**
     * <pre>
     * Control mode remote
     * </pre>
     *
     * <code>.commonmodule.ControlSPC CtlModeRem = 6;</code>
     * @return Whether the ctlModeRem field is set.
     */
    public fun hasCtlModeRem(): kotlin.Boolean {
      return _builder.hasCtlModeRem()
    }

    /**
     * <pre>
     * The control characteristics for power flow operation
     * </pre>
     *
     * <code>.commonmodule.Optional_DirectionModeKind DirMode = 7;</code>
     */
    public var dirMode: openfmb.commonmodule.Optional_DirectionModeKind
      @JvmName("getDirMode")
      get() = _builder.getDirMode()
      @JvmName("setDirMode")
      set(value) {
        _builder.setDirMode(value)
      }
    /**
     * <pre>
     * The control characteristics for power flow operation
     * </pre>
     *
     * <code>.commonmodule.Optional_DirectionModeKind DirMode = 7;</code>
     */
    public fun clearDirMode() {
      _builder.clearDirMode()
    }
    /**
     * <pre>
     * The control characteristics for power flow operation
     * </pre>
     *
     * <code>.commonmodule.Optional_DirectionModeKind DirMode = 7;</code>
     * @return Whether the dirMode field is set.
     */
    public fun hasDirMode(): kotlin.Boolean {
      return _builder.hasDirMode()
    }

    /**
     * <pre>
     * (controllable) Position of the switch of power shunt.
     * </pre>
     *
     * <code>.commonmodule.PhaseSPC Pos = 8;</code>
     */
    public var pos: openfmb.commonmodule.PhaseSPC
      @JvmName("getPos")
      get() = _builder.getPos()
      @JvmName("setPos")
      set(value) {
        _builder.setPos(value)
      }
    /**
     * <pre>
     * (controllable) Position of the switch of power shunt.
     * </pre>
     *
     * <code>.commonmodule.PhaseSPC Pos = 8;</code>
     */
    public fun clearPos() {
      _builder.clearPos()
    }
    /**
     * <pre>
     * (controllable) Position of the switch of power shunt.
     * </pre>
     *
     * <code>.commonmodule.PhaseSPC Pos = 8;</code>
     * @return Whether the pos field is set.
     */
    public fun hasPos(): kotlin.Boolean {
      return _builder.hasPos()
    }

    /**
     * <pre>
     * Temperature limit (boolean field)
     * </pre>
     *
     * <code>.commonmodule.ControlSPC TempLmt = 9;</code>
     */
    public var tempLmt: openfmb.commonmodule.ControlSPC
      @JvmName("getTempLmt")
      get() = _builder.getTempLmt()
      @JvmName("setTempLmt")
      set(value) {
        _builder.setTempLmt(value)
      }
    /**
     * <pre>
     * Temperature limit (boolean field)
     * </pre>
     *
     * <code>.commonmodule.ControlSPC TempLmt = 9;</code>
     */
    public fun clearTempLmt() {
      _builder.clearTempLmt()
    }
    /**
     * <pre>
     * Temperature limit (boolean field)
     * </pre>
     *
     * <code>.commonmodule.ControlSPC TempLmt = 9;</code>
     * @return Whether the tempLmt field is set.
     */
    public fun hasTempLmt(): kotlin.Boolean {
      return _builder.hasTempLmt()
    }

    /**
     * <pre>
     * High temperature threshold
     * </pre>
     *
     * <code>.commonmodule.ControlAPC TempThdHi = 10;</code>
     */
    public var tempThdHi: openfmb.commonmodule.ControlAPC
      @JvmName("getTempThdHi")
      get() = _builder.getTempThdHi()
      @JvmName("setTempThdHi")
      set(value) {
        _builder.setTempThdHi(value)
      }
    /**
     * <pre>
     * High temperature threshold
     * </pre>
     *
     * <code>.commonmodule.ControlAPC TempThdHi = 10;</code>
     */
    public fun clearTempThdHi() {
      _builder.clearTempThdHi()
    }
    /**
     * <pre>
     * High temperature threshold
     * </pre>
     *
     * <code>.commonmodule.ControlAPC TempThdHi = 10;</code>
     * @return Whether the tempThdHi field is set.
     */
    public fun hasTempThdHi(): kotlin.Boolean {
      return _builder.hasTempThdHi()
    }

    /**
     * <pre>
     * Low temperature threshold
     * </pre>
     *
     * <code>.commonmodule.ControlAPC TempThdLo = 11;</code>
     */
    public var tempThdLo: openfmb.commonmodule.ControlAPC
      @JvmName("getTempThdLo")
      get() = _builder.getTempThdLo()
      @JvmName("setTempThdLo")
      set(value) {
        _builder.setTempThdLo(value)
      }
    /**
     * <pre>
     * Low temperature threshold
     * </pre>
     *
     * <code>.commonmodule.ControlAPC TempThdLo = 11;</code>
     */
    public fun clearTempThdLo() {
      _builder.clearTempThdLo()
    }
    /**
     * <pre>
     * Low temperature threshold
     * </pre>
     *
     * <code>.commonmodule.ControlAPC TempThdLo = 11;</code>
     * @return Whether the tempThdLo field is set.
     */
    public fun hasTempThdLo(): kotlin.Boolean {
      return _builder.hasTempThdLo()
    }

    /**
     * <pre>
     * VAr limit (boolean field)
     * </pre>
     *
     * <code>.commonmodule.PhaseSPC VArLmt = 12;</code>
     */
    public var vArLmt: openfmb.commonmodule.PhaseSPC
      @JvmName("getVArLmt")
      get() = _builder.getVArLmt()
      @JvmName("setVArLmt")
      set(value) {
        _builder.setVArLmt(value)
      }
    /**
     * <pre>
     * VAr limit (boolean field)
     * </pre>
     *
     * <code>.commonmodule.PhaseSPC VArLmt = 12;</code>
     */
    public fun clearVArLmt() {
      _builder.clearVArLmt()
    }
    /**
     * <pre>
     * VAr limit (boolean field)
     * </pre>
     *
     * <code>.commonmodule.PhaseSPC VArLmt = 12;</code>
     * @return Whether the vArLmt field is set.
     */
    public fun hasVArLmt(): kotlin.Boolean {
      return _builder.hasVArLmt()
    }

    /**
     * <pre>
     * High VAr threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC VArThdHi = 13;</code>
     */
    public var vArThdHi: openfmb.commonmodule.PhaseAPC
      @JvmName("getVArThdHi")
      get() = _builder.getVArThdHi()
      @JvmName("setVArThdHi")
      set(value) {
        _builder.setVArThdHi(value)
      }
    /**
     * <pre>
     * High VAr threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC VArThdHi = 13;</code>
     */
    public fun clearVArThdHi() {
      _builder.clearVArThdHi()
    }
    /**
     * <pre>
     * High VAr threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC VArThdHi = 13;</code>
     * @return Whether the vArThdHi field is set.
     */
    public fun hasVArThdHi(): kotlin.Boolean {
      return _builder.hasVArThdHi()
    }

    /**
     * <pre>
     * Low VAr threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC VArThdLo = 14;</code>
     */
    public var vArThdLo: openfmb.commonmodule.PhaseAPC
      @JvmName("getVArThdLo")
      get() = _builder.getVArThdLo()
      @JvmName("setVArThdLo")
      set(value) {
        _builder.setVArThdLo(value)
      }
    /**
     * <pre>
     * Low VAr threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC VArThdLo = 14;</code>
     */
    public fun clearVArThdLo() {
      _builder.clearVArThdLo()
    }
    /**
     * <pre>
     * Low VAr threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC VArThdLo = 14;</code>
     * @return Whether the vArThdLo field is set.
     */
    public fun hasVArThdLo(): kotlin.Boolean {
      return _builder.hasVArThdLo()
    }

    /**
     * <pre>
     * Voltage limit (boolean field)
     * </pre>
     *
     * <code>.commonmodule.PhaseSPC VolLmt = 15;</code>
     */
    public var volLmt: openfmb.commonmodule.PhaseSPC
      @JvmName("getVolLmt")
      get() = _builder.getVolLmt()
      @JvmName("setVolLmt")
      set(value) {
        _builder.setVolLmt(value)
      }
    /**
     * <pre>
     * Voltage limit (boolean field)
     * </pre>
     *
     * <code>.commonmodule.PhaseSPC VolLmt = 15;</code>
     */
    public fun clearVolLmt() {
      _builder.clearVolLmt()
    }
    /**
     * <pre>
     * Voltage limit (boolean field)
     * </pre>
     *
     * <code>.commonmodule.PhaseSPC VolLmt = 15;</code>
     * @return Whether the volLmt field is set.
     */
    public fun hasVolLmt(): kotlin.Boolean {
      return _builder.hasVolLmt()
    }

    /**
     * <pre>
     * High voltage threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC VolThdHi = 16;</code>
     */
    public var volThdHi: openfmb.commonmodule.PhaseAPC
      @JvmName("getVolThdHi")
      get() = _builder.getVolThdHi()
      @JvmName("setVolThdHi")
      set(value) {
        _builder.setVolThdHi(value)
      }
    /**
     * <pre>
     * High voltage threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC VolThdHi = 16;</code>
     */
    public fun clearVolThdHi() {
      _builder.clearVolThdHi()
    }
    /**
     * <pre>
     * High voltage threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC VolThdHi = 16;</code>
     * @return Whether the volThdHi field is set.
     */
    public fun hasVolThdHi(): kotlin.Boolean {
      return _builder.hasVolThdHi()
    }

    /**
     * <pre>
     * Low voltage threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC VolThdLo = 17;</code>
     */
    public var volThdLo: openfmb.commonmodule.PhaseAPC
      @JvmName("getVolThdLo")
      get() = _builder.getVolThdLo()
      @JvmName("setVolThdLo")
      set(value) {
        _builder.setVolThdLo(value)
      }
    /**
     * <pre>
     * Low voltage threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC VolThdLo = 17;</code>
     */
    public fun clearVolThdLo() {
      _builder.clearVolThdLo()
    }
    /**
     * <pre>
     * Low voltage threshold
     * </pre>
     *
     * <code>.commonmodule.PhaseAPC VolThdLo = 17;</code>
     * @return Whether the volThdLo field is set.
     */
    public fun hasVolThdLo(): kotlin.Boolean {
      return _builder.hasVolThdLo()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.capbankmodule.CapBankControlYPSH.copy(block: openfmb.capbankmodule.CapBankControlYPSHKt.Dsl.() -> kotlin.Unit): openfmb.capbankmodule.CapBankControlYPSH =
  openfmb.capbankmodule.CapBankControlYPSHKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.ampLmtOrNull: openfmb.commonmodule.PhaseSPC?
  get() = if (hasAmpLmt()) getAmpLmt() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.ampThdHiOrNull: openfmb.commonmodule.PhaseAPC?
  get() = if (hasAmpThdHi()) getAmpThdHi() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.ampThdLoOrNull: openfmb.commonmodule.PhaseAPC?
  get() = if (hasAmpThdLo()) getAmpThdLo() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.ctlModeAutoOrNull: openfmb.commonmodule.ControlSPC?
  get() = if (hasCtlModeAuto()) getCtlModeAuto() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.ctlModeOvrRdOrNull: openfmb.commonmodule.ControlSPC?
  get() = if (hasCtlModeOvrRd()) getCtlModeOvrRd() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.ctlModeRemOrNull: openfmb.commonmodule.ControlSPC?
  get() = if (hasCtlModeRem()) getCtlModeRem() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.dirModeOrNull: openfmb.commonmodule.Optional_DirectionModeKind?
  get() = if (hasDirMode()) getDirMode() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.posOrNull: openfmb.commonmodule.PhaseSPC?
  get() = if (hasPos()) getPos() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.tempLmtOrNull: openfmb.commonmodule.ControlSPC?
  get() = if (hasTempLmt()) getTempLmt() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.tempThdHiOrNull: openfmb.commonmodule.ControlAPC?
  get() = if (hasTempThdHi()) getTempThdHi() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.tempThdLoOrNull: openfmb.commonmodule.ControlAPC?
  get() = if (hasTempThdLo()) getTempThdLo() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.vArLmtOrNull: openfmb.commonmodule.PhaseSPC?
  get() = if (hasVArLmt()) getVArLmt() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.vArThdHiOrNull: openfmb.commonmodule.PhaseAPC?
  get() = if (hasVArThdHi()) getVArThdHi() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.vArThdLoOrNull: openfmb.commonmodule.PhaseAPC?
  get() = if (hasVArThdLo()) getVArThdLo() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.volLmtOrNull: openfmb.commonmodule.PhaseSPC?
  get() = if (hasVolLmt()) getVolLmt() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.volThdHiOrNull: openfmb.commonmodule.PhaseAPC?
  get() = if (hasVolThdHi()) getVolThdHi() else null

val openfmb.capbankmodule.CapBankControlYPSHOrBuilder.volThdLoOrNull: openfmb.commonmodule.PhaseAPC?
  get() = if (hasVolThdLo()) getVolThdLo() else null

