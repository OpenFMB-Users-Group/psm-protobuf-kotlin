//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: switchmodule/switchmodule.proto

package openfmb.switchmodule;

@kotlin.jvm.JvmName("-initializeswitchReadingProfile")
public inline fun switchReadingProfile(block: openfmb.switchmodule.SwitchReadingProfileKt.Dsl.() -> kotlin.Unit): openfmb.switchmodule.SwitchReadingProfile =
  openfmb.switchmodule.SwitchReadingProfileKt.Dsl._create(openfmb.switchmodule.SwitchReadingProfile.newBuilder()).apply { block() }._build()
public object SwitchReadingProfileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.switchmodule.SwitchReadingProfile.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.switchmodule.SwitchReadingProfile.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.switchmodule.SwitchReadingProfile = _builder.build()

    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];</code>
     */
    public var readingMessageInfo: openfmb.commonmodule.ReadingMessageInfo
      @JvmName("getReadingMessageInfo")
      get() = _builder.getReadingMessageInfo()
      @JvmName("setReadingMessageInfo")
      set(value) {
        _builder.setReadingMessageInfo(value)
      }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];</code>
     */
    public fun clearReadingMessageInfo() {
      _builder.clearReadingMessageInfo()
    }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];</code>
     * @return Whether the readingMessageInfo field is set.
     */
    public fun hasReadingMessageInfo(): kotlin.Boolean {
      return _builder.hasReadingMessageInfo()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var protectedSwitch: openfmb.switchmodule.ProtectedSwitch
      @JvmName("getProtectedSwitch")
      get() = _builder.getProtectedSwitch()
      @JvmName("setProtectedSwitch")
      set(value) {
        _builder.setProtectedSwitch(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearProtectedSwitch() {
      _builder.clearProtectedSwitch()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     * @return Whether the protectedSwitch field is set.
     */
    public fun hasProtectedSwitch(): kotlin.Boolean {
      return _builder.hasProtectedSwitch()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SwitchReadingProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>repeated .switchmodule.SwitchReading switchReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];</code>
     */
     public val switchReading: com.google.protobuf.kotlin.DslList<openfmb.switchmodule.SwitchReading, SwitchReadingProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSwitchReadingList()
      )
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>repeated .switchmodule.SwitchReading switchReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];</code>
     * @param value The switchReading to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSwitchReading")
    public fun com.google.protobuf.kotlin.DslList<openfmb.switchmodule.SwitchReading, SwitchReadingProxy>.add(value: openfmb.switchmodule.SwitchReading) {
      _builder.addSwitchReading(value)
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>repeated .switchmodule.SwitchReading switchReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];</code>
     * @param value The switchReading to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSwitchReading")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<openfmb.switchmodule.SwitchReading, SwitchReadingProxy>.plusAssign(value: openfmb.switchmodule.SwitchReading) {
      add(value)
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>repeated .switchmodule.SwitchReading switchReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];</code>
     * @param values The switchReading to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSwitchReading")
    public fun com.google.protobuf.kotlin.DslList<openfmb.switchmodule.SwitchReading, SwitchReadingProxy>.addAll(values: kotlin.collections.Iterable<openfmb.switchmodule.SwitchReading>) {
      _builder.addAllSwitchReading(values)
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>repeated .switchmodule.SwitchReading switchReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];</code>
     * @param values The switchReading to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSwitchReading")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<openfmb.switchmodule.SwitchReading, SwitchReadingProxy>.plusAssign(values: kotlin.collections.Iterable<openfmb.switchmodule.SwitchReading>) {
      addAll(values)
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>repeated .switchmodule.SwitchReading switchReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];</code>
     * @param index The index to set the value at.
     * @param value The switchReading to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSwitchReading")
    public operator fun com.google.protobuf.kotlin.DslList<openfmb.switchmodule.SwitchReading, SwitchReadingProxy>.set(index: kotlin.Int, value: openfmb.switchmodule.SwitchReading) {
      _builder.setSwitchReading(index, value)
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>repeated .switchmodule.SwitchReading switchReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSwitchReading")
    public fun com.google.protobuf.kotlin.DslList<openfmb.switchmodule.SwitchReading, SwitchReadingProxy>.clear() {
      _builder.clearSwitchReading()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.switchmodule.SwitchReadingProfile.copy(block: openfmb.switchmodule.SwitchReadingProfileKt.Dsl.() -> kotlin.Unit): openfmb.switchmodule.SwitchReadingProfile =
  openfmb.switchmodule.SwitchReadingProfileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val openfmb.switchmodule.SwitchReadingProfileOrBuilder.readingMessageInfoOrNull: openfmb.commonmodule.ReadingMessageInfo?
  get() = if (hasReadingMessageInfo()) getReadingMessageInfo() else null

val openfmb.switchmodule.SwitchReadingProfileOrBuilder.protectedSwitchOrNull: openfmb.switchmodule.ProtectedSwitch?
  get() = if (hasProtectedSwitch()) getProtectedSwitch() else null

