//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: commonmodule/commonmodule.proto

package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializeswitchPoint")
public inline fun switchPoint(block: openfmb.commonmodule.SwitchPointKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.SwitchPoint =
  openfmb.commonmodule.SwitchPointKt.Dsl._create(openfmb.commonmodule.SwitchPoint.newBuilder()).apply { block() }._build()
public object SwitchPointKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.SwitchPoint.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.SwitchPoint.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.SwitchPoint = _builder.build()

    /**
     * <pre>
     * Switch position
     * </pre>
     *
     * <code>.commonmodule.ControlDPC Pos = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var pos: openfmb.commonmodule.ControlDPC
      @JvmName("getPos")
      get() = _builder.getPos()
      @JvmName("setPos")
      set(value) {
        _builder.setPos(value)
      }
    /**
     * <pre>
     * Switch position
     * </pre>
     *
     * <code>.commonmodule.ControlDPC Pos = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearPos() {
      _builder.clearPos()
    }
    /**
     * <pre>
     * Switch position
     * </pre>
     *
     * <code>.commonmodule.ControlDPC Pos = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     * @return Whether the pos field is set.
     */
    public fun hasPos(): kotlin.Boolean {
      return _builder.hasPos()
    }

    /**
     * <pre>
     * Start time
     * </pre>
     *
     * <code>.commonmodule.ControlTimestamp startTime = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var startTime: openfmb.commonmodule.ControlTimestamp
      @JvmName("getStartTime")
      get() = _builder.getStartTime()
      @JvmName("setStartTime")
      set(value) {
        _builder.setStartTime(value)
      }
    /**
     * <pre>
     * Start time
     * </pre>
     *
     * <code>.commonmodule.ControlTimestamp startTime = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearStartTime() {
      _builder.clearStartTime()
    }
    /**
     * <pre>
     * Start time
     * </pre>
     *
     * <code>.commonmodule.ControlTimestamp startTime = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     * @return Whether the startTime field is set.
     */
    public fun hasStartTime(): kotlin.Boolean {
      return _builder.hasStartTime()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.commonmodule.SwitchPoint.copy(block: openfmb.commonmodule.SwitchPointKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.SwitchPoint =
  openfmb.commonmodule.SwitchPointKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.commonmodule.SwitchPointOrBuilder.posOrNull: openfmb.commonmodule.ControlDPC?
  get() = if (hasPos()) getPos() else null

public val openfmb.commonmodule.SwitchPointOrBuilder.startTimeOrNull: openfmb.commonmodule.ControlTimestamp?
  get() = if (hasStartTime()) getStartTime() else null

