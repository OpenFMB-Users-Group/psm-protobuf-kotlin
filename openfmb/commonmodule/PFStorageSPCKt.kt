//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: commonmodule/commonmodule.proto

package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializepFStorageSPC")
public inline fun pFStorageSPC(block: openfmb.commonmodule.PFStorageSPCKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.PFStorageSPC =
  openfmb.commonmodule.PFStorageSPCKt.Dsl._create(openfmb.commonmodule.PFStorageSPC.newBuilder()).apply { block() }._build()
public object PFStorageSPCKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.PFStorageSPC.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.PFStorageSPC.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.PFStorageSPC = _builder.build()

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>bool ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var ctlVal: kotlin.Boolean
      @JvmName("getCtlVal")
      get() = _builder.getCtlVal()
      @JvmName("setCtlVal")
      set(value) {
        _builder.setCtlVal(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>bool ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearCtlVal() {
      _builder.clearCtlVal()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.commonmodule.OperationStorageDFPF pFStorageParameter = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var pFStorageParameter: openfmb.commonmodule.OperationStorageDFPF
      @JvmName("getPFStorageParameter")
      get() = _builder.getPFStorageParameter()
      @JvmName("setPFStorageParameter")
      set(value) {
        _builder.setPFStorageParameter(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.commonmodule.OperationStorageDFPF pFStorageParameter = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearPFStorageParameter() {
      _builder.clearPFStorageParameter()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.commonmodule.OperationStorageDFPF pFStorageParameter = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     * @return Whether the pFStorageParameter field is set.
     */
    public fun hasPFStorageParameter(): kotlin.Boolean {
      return _builder.hasPFStorageParameter()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.commonmodule.PFStorageSPC.copy(block: openfmb.commonmodule.PFStorageSPCKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.PFStorageSPC =
  openfmb.commonmodule.PFStorageSPCKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val openfmb.commonmodule.PFStorageSPCOrBuilder.pFStorageParameterOrNull: openfmb.commonmodule.OperationStorageDFPF?
  get() = if (hasPFStorageParameter()) getPFStorageParameter() else null

