//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: generationmodule/generationmodule.proto

package openfmb.generationmodule;

@kotlin.jvm.JvmName("-initializegenerationStatusZGEN")
public inline fun generationStatusZGEN(block: openfmb.generationmodule.GenerationStatusZGENKt.Dsl.() -> kotlin.Unit): openfmb.generationmodule.GenerationStatusZGEN =
  openfmb.generationmodule.GenerationStatusZGENKt.Dsl._create(openfmb.generationmodule.GenerationStatusZGEN.newBuilder()).apply { block() }._build()
public object GenerationStatusZGENKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.generationmodule.GenerationStatusZGEN.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.generationmodule.GenerationStatusZGEN.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.generationmodule.GenerationStatusZGEN = _builder.build()

    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];</code>
     */
    public var generationEventAndStatusZGEN: openfmb.generationmodule.GenerationEventAndStatusZGEN
      @JvmName("getGenerationEventAndStatusZGEN")
      get() = _builder.getGenerationEventAndStatusZGEN()
      @JvmName("setGenerationEventAndStatusZGEN")
      set(value) {
        _builder.setGenerationEventAndStatusZGEN(value)
      }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];</code>
     */
    public fun clearGenerationEventAndStatusZGEN() {
      _builder.clearGenerationEventAndStatusZGEN()
    }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];</code>
     * @return Whether the generationEventAndStatusZGEN field is set.
     */
    public fun hasGenerationEventAndStatusZGEN(): kotlin.Boolean {
      return _builder.hasGenerationEventAndStatusZGEN()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.generationmodule.GenerationStatusZGEN.copy(block: openfmb.generationmodule.GenerationStatusZGENKt.Dsl.() -> kotlin.Unit): openfmb.generationmodule.GenerationStatusZGEN =
  openfmb.generationmodule.GenerationStatusZGENKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.generationmodule.GenerationStatusZGENOrBuilder.generationEventAndStatusZGENOrNull: openfmb.generationmodule.GenerationEventAndStatusZGEN?
  get() = if (hasGenerationEventAndStatusZGEN()) getGenerationEventAndStatusZGEN() else null

