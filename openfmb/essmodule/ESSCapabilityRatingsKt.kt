// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: essmodule/essmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.essmodule;

@kotlin.jvm.JvmName("-initializeeSSCapabilityRatings")
public inline fun eSSCapabilityRatings(block: openfmb.essmodule.ESSCapabilityRatingsKt.Dsl.() -> kotlin.Unit): openfmb.essmodule.ESSCapabilityRatings =
  openfmb.essmodule.ESSCapabilityRatingsKt.Dsl._create(openfmb.essmodule.ESSCapabilityRatings.newBuilder()).apply { block() }._build()
/**
 * ```
 * MISSING DOCUMENTATION!!!
 * ```
 *
 * Protobuf type `essmodule.ESSCapabilityRatings`
 */
public object ESSCapabilityRatingsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.essmodule.ESSCapabilityRatings.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.essmodule.ESSCapabilityRatings.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.essmodule.ESSCapabilityRatings = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.SourceCapabilityRatings sourceCapabilityRatings = 1 [(.uml.option_parent_message) = true];`
     */
    public var sourceCapabilityRatings: openfmb.commonmodule.SourceCapabilityRatings
      @kotlin.jvm.JvmName("getSourceCapabilityRatings")
        get() = _builder.sourceCapabilityRatings
      @kotlin.jvm.JvmName("setSourceCapabilityRatings")
        set(value) {
        _builder.sourceCapabilityRatings = value
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.SourceCapabilityRatings sourceCapabilityRatings = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearSourceCapabilityRatings() {
      _builder.clearSourceCapabilityRatings()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.SourceCapabilityRatings sourceCapabilityRatings = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the sourceCapabilityRatings field is set.
     */
    public fun hasSourceCapabilityRatings(): kotlin.Boolean {
      return _builder.hasSourceCapabilityRatings()
    }

    public val ESSCapabilityRatingsKt.Dsl.sourceCapabilityRatingsOrNull: openfmb.commonmodule.SourceCapabilityRatings?
      get() = _builder.sourceCapabilityRatingsOrNull

    /**
     * ```
     * Apparent Power Charge Maximum Rating
     * ```
     *
     * `.commonmodule.ASG VAChaRteMaxRtg = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var vAChaRteMaxRtg: openfmb.commonmodule.ASG
      @kotlin.jvm.JvmName("getVAChaRteMaxRtg")
        get() = _builder.vaChaRteMaxRtg
      @kotlin.jvm.JvmName("setVAChaRteMaxRtg")
        set(value) {
        _builder.vaChaRteMaxRtg = value
      }
    /**
     * ```
     * Apparent Power Charge Maximum Rating
     * ```
     *
     * `.commonmodule.ASG VAChaRteMaxRtg = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearVAChaRteMaxRtg() {
      _builder.clearVAChaRteMaxRtg()
    }
    /**
     * ```
     * Apparent Power Charge Maximum Rating
     * ```
     *
     * `.commonmodule.ASG VAChaRteMaxRtg = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the vAChaRteMaxRtg field is set.
     */
    public fun hasVAChaRteMaxRtg(): kotlin.Boolean {
      return _builder.hasVAChaRteMaxRtg()
    }

    public val ESSCapabilityRatingsKt.Dsl.vAChaRteMaxRtgOrNull: openfmb.commonmodule.ASG?
      get() = _builder.vAChaRteMaxRtgOrNull

    /**
     * ```
     * Apparent Power Discharge Maximum Rating
     * ```
     *
     * `.commonmodule.ASG VADisChaRteMaxRtg = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var vADisChaRteMaxRtg: openfmb.commonmodule.ASG
      @kotlin.jvm.JvmName("getVADisChaRteMaxRtg")
        get() = _builder.vaDisChaRteMaxRtg
      @kotlin.jvm.JvmName("setVADisChaRteMaxRtg")
        set(value) {
        _builder.vaDisChaRteMaxRtg = value
      }
    /**
     * ```
     * Apparent Power Discharge Maximum Rating
     * ```
     *
     * `.commonmodule.ASG VADisChaRteMaxRtg = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearVADisChaRteMaxRtg() {
      _builder.clearVADisChaRteMaxRtg()
    }
    /**
     * ```
     * Apparent Power Discharge Maximum Rating
     * ```
     *
     * `.commonmodule.ASG VADisChaRteMaxRtg = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the vADisChaRteMaxRtg field is set.
     */
    public fun hasVADisChaRteMaxRtg(): kotlin.Boolean {
      return _builder.hasVADisChaRteMaxRtg()
    }

    public val ESSCapabilityRatingsKt.Dsl.vADisChaRteMaxRtgOrNull: openfmb.commonmodule.ASG?
      get() = _builder.vADisChaRteMaxRtgOrNull

    /**
     * ```
     * Active Power Charge Maximum Rating
     * ```
     *
     * `.commonmodule.ASG WChaRteMaxRtg = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var wChaRteMaxRtg: openfmb.commonmodule.ASG
      @kotlin.jvm.JvmName("getWChaRteMaxRtg")
        get() = _builder.wChaRteMaxRtg
      @kotlin.jvm.JvmName("setWChaRteMaxRtg")
        set(value) {
        _builder.wChaRteMaxRtg = value
      }
    /**
     * ```
     * Active Power Charge Maximum Rating
     * ```
     *
     * `.commonmodule.ASG WChaRteMaxRtg = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearWChaRteMaxRtg() {
      _builder.clearWChaRteMaxRtg()
    }
    /**
     * ```
     * Active Power Charge Maximum Rating
     * ```
     *
     * `.commonmodule.ASG WChaRteMaxRtg = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the wChaRteMaxRtg field is set.
     */
    public fun hasWChaRteMaxRtg(): kotlin.Boolean {
      return _builder.hasWChaRteMaxRtg()
    }

    public val ESSCapabilityRatingsKt.Dsl.wChaRteMaxRtgOrNull: openfmb.commonmodule.ASG?
      get() = _builder.wChaRteMaxRtgOrNull

    /**
     * ```
     * Active Power Discharge Maximum Rating
     * ```
     *
     * `.commonmodule.ASG WDisChaRteMaxRtg = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var wDisChaRteMaxRtg: openfmb.commonmodule.ASG
      @kotlin.jvm.JvmName("getWDisChaRteMaxRtg")
        get() = _builder.wDisChaRteMaxRtg
      @kotlin.jvm.JvmName("setWDisChaRteMaxRtg")
        set(value) {
        _builder.wDisChaRteMaxRtg = value
      }
    /**
     * ```
     * Active Power Discharge Maximum Rating
     * ```
     *
     * `.commonmodule.ASG WDisChaRteMaxRtg = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearWDisChaRteMaxRtg() {
      _builder.clearWDisChaRteMaxRtg()
    }
    /**
     * ```
     * Active Power Discharge Maximum Rating
     * ```
     *
     * `.commonmodule.ASG WDisChaRteMaxRtg = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the wDisChaRteMaxRtg field is set.
     */
    public fun hasWDisChaRteMaxRtg(): kotlin.Boolean {
      return _builder.hasWDisChaRteMaxRtg()
    }

    public val ESSCapabilityRatingsKt.Dsl.wDisChaRteMaxRtgOrNull: openfmb.commonmodule.ASG?
      get() = _builder.wDisChaRteMaxRtgOrNull

    /**
     * ```
     * Energy rating of the DER storage.
     * ```
     *
     * `.commonmodule.ASG WHRtg = 6 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var wHRtg: openfmb.commonmodule.ASG
      @kotlin.jvm.JvmName("getWHRtg")
        get() = _builder.whRtg
      @kotlin.jvm.JvmName("setWHRtg")
        set(value) {
        _builder.whRtg = value
      }
    /**
     * ```
     * Energy rating of the DER storage.
     * ```
     *
     * `.commonmodule.ASG WHRtg = 6 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearWHRtg() {
      _builder.clearWHRtg()
    }
    /**
     * ```
     * Energy rating of the DER storage.
     * ```
     *
     * `.commonmodule.ASG WHRtg = 6 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the wHRtg field is set.
     */
    public fun hasWHRtg(): kotlin.Boolean {
      return _builder.hasWHRtg()
    }

    public val ESSCapabilityRatingsKt.Dsl.wHRtgOrNull: openfmb.commonmodule.ASG?
      get() = _builder.wHRtgOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.essmodule.ESSCapabilityRatings.copy(block: `openfmb.essmodule`.ESSCapabilityRatingsKt.Dsl.() -> kotlin.Unit): openfmb.essmodule.ESSCapabilityRatings =
  `openfmb.essmodule`.ESSCapabilityRatingsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.essmodule.ESSCapabilityRatingsOrBuilder.sourceCapabilityRatingsOrNull: openfmb.commonmodule.SourceCapabilityRatings?
  get() = if (hasSourceCapabilityRatings()) getSourceCapabilityRatings() else null

public val openfmb.essmodule.ESSCapabilityRatingsOrBuilder.vAChaRteMaxRtgOrNull: openfmb.commonmodule.ASG?
  get() = if (hasVAChaRteMaxRtg()) getVAChaRteMaxRtg() else null

public val openfmb.essmodule.ESSCapabilityRatingsOrBuilder.vADisChaRteMaxRtgOrNull: openfmb.commonmodule.ASG?
  get() = if (hasVADisChaRteMaxRtg()) getVADisChaRteMaxRtg() else null

public val openfmb.essmodule.ESSCapabilityRatingsOrBuilder.wChaRteMaxRtgOrNull: openfmb.commonmodule.ASG?
  get() = if (hasWChaRteMaxRtg()) getWChaRteMaxRtg() else null

public val openfmb.essmodule.ESSCapabilityRatingsOrBuilder.wDisChaRteMaxRtgOrNull: openfmb.commonmodule.ASG?
  get() = if (hasWDisChaRteMaxRtg()) getWDisChaRteMaxRtg() else null

public val openfmb.essmodule.ESSCapabilityRatingsOrBuilder.wHRtgOrNull: openfmb.commonmodule.ASG?
  get() = if (hasWHRtg()) getWHRtg() else null

