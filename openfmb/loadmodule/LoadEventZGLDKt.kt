// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: loadmodule/loadmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.loadmodule;

@kotlin.jvm.JvmName("-initializeloadEventZGLD")
public inline fun loadEventZGLD(block: openfmb.loadmodule.LoadEventZGLDKt.Dsl.() -> kotlin.Unit): openfmb.loadmodule.LoadEventZGLD =
  openfmb.loadmodule.LoadEventZGLDKt.Dsl._create(openfmb.loadmodule.LoadEventZGLD.newBuilder()).apply { block() }._build()
/**
 * ```
 * Specialized 61850 ZGLD LN class
 * ```
 *
 * Protobuf type `loadmodule.LoadEventZGLD`
 */
public object LoadEventZGLDKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.loadmodule.LoadEventZGLD.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.loadmodule.LoadEventZGLD.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.loadmodule.LoadEventZGLD = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.loadmodule.LoadEventAndStatusZGLD loadEventAndStatusZGLD = 1 [(.uml.option_parent_message) = true];`
     */
    public var loadEventAndStatusZGLD: openfmb.loadmodule.LoadEventAndStatusZGLD
      @JvmName("getLoadEventAndStatusZGLD")
      get() = _builder.getLoadEventAndStatusZGLD()
      @JvmName("setLoadEventAndStatusZGLD")
      set(value) {
        _builder.setLoadEventAndStatusZGLD(value)
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.loadmodule.LoadEventAndStatusZGLD loadEventAndStatusZGLD = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearLoadEventAndStatusZGLD() {
      _builder.clearLoadEventAndStatusZGLD()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.loadmodule.LoadEventAndStatusZGLD loadEventAndStatusZGLD = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the loadEventAndStatusZGLD field is set.
     */
    public fun hasLoadEventAndStatusZGLD(): kotlin.Boolean {
      return _builder.hasLoadEventAndStatusZGLD()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.loadmodule.LoadEventZGLD.copy(block: openfmb.loadmodule.LoadEventZGLDKt.Dsl.() -> kotlin.Unit): openfmb.loadmodule.LoadEventZGLD =
  openfmb.loadmodule.LoadEventZGLDKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.loadmodule.LoadEventZGLDOrBuilder.loadEventAndStatusZGLDOrNull: openfmb.loadmodule.LoadEventAndStatusZGLD?
  get() = if (hasLoadEventAndStatusZGLD()) getLoadEventAndStatusZGLD() else null

