// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: loadmodule/loadmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.loadmodule;

@kotlin.jvm.JvmName("-initializeloadPointStatus")
public inline fun loadPointStatus(block: openfmb.loadmodule.LoadPointStatusKt.Dsl.() -> kotlin.Unit): openfmb.loadmodule.LoadPointStatus =
  openfmb.loadmodule.LoadPointStatusKt.Dsl._create(openfmb.loadmodule.LoadPointStatus.newBuilder()).apply { block() }._build()
/**
 * ```
 * Point definition (Point)
 * ```
 *
 * Protobuf type `loadmodule.LoadPointStatus`
 */
public object LoadPointStatusKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.loadmodule.LoadPointStatus.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.loadmodule.LoadPointStatus.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.loadmodule.LoadPointStatus = _builder.build()

    /**
     * ```
     * Ramp rates
     * ```
     *
     * `.commonmodule.RampRate rampRates = 1;`
     */
    public var rampRates: openfmb.commonmodule.RampRate
      @JvmName("getRampRates")
      get() = _builder.getRampRates()
      @JvmName("setRampRates")
      set(value) {
        _builder.setRampRates(value)
      }
    /**
     * ```
     * Ramp rates
     * ```
     *
     * `.commonmodule.RampRate rampRates = 1;`
     */
    public fun clearRampRates() {
      _builder.clearRampRates()
    }
    /**
     * ```
     * Ramp rates
     * ```
     *
     * `.commonmodule.RampRate rampRates = 1;`
     * @return Whether the rampRates field is set.
     */
    public fun hasRampRates(): kotlin.Boolean {
      return _builder.hasRampRates()
    }

    /**
     * ```
     * Enable reactive power set point
     * ```
     *
     * `.commonmodule.StatusSPS reactivePwrSetPointEnabled = 2;`
     */
    public var reactivePwrSetPointEnabled: openfmb.commonmodule.StatusSPS
      @JvmName("getReactivePwrSetPointEnabled")
      get() = _builder.getReactivePwrSetPointEnabled()
      @JvmName("setReactivePwrSetPointEnabled")
      set(value) {
        _builder.setReactivePwrSetPointEnabled(value)
      }
    /**
     * ```
     * Enable reactive power set point
     * ```
     *
     * `.commonmodule.StatusSPS reactivePwrSetPointEnabled = 2;`
     */
    public fun clearReactivePwrSetPointEnabled() {
      _builder.clearReactivePwrSetPointEnabled()
    }
    /**
     * ```
     * Enable reactive power set point
     * ```
     *
     * `.commonmodule.StatusSPS reactivePwrSetPointEnabled = 2;`
     * @return Whether the reactivePwrSetPointEnabled field is set.
     */
    public fun hasReactivePwrSetPointEnabled(): kotlin.Boolean {
      return _builder.hasReactivePwrSetPointEnabled()
    }

    /**
     * ```
     * Enable joint real power set point
     * ```
     *
     * `.commonmodule.StatusSPS realPwrSetPointEnabled = 3;`
     */
    public var realPwrSetPointEnabled: openfmb.commonmodule.StatusSPS
      @JvmName("getRealPwrSetPointEnabled")
      get() = _builder.getRealPwrSetPointEnabled()
      @JvmName("setRealPwrSetPointEnabled")
      set(value) {
        _builder.setRealPwrSetPointEnabled(value)
      }
    /**
     * ```
     * Enable joint real power set point
     * ```
     *
     * `.commonmodule.StatusSPS realPwrSetPointEnabled = 3;`
     */
    public fun clearRealPwrSetPointEnabled() {
      _builder.clearRealPwrSetPointEnabled()
    }
    /**
     * ```
     * Enable joint real power set point
     * ```
     *
     * `.commonmodule.StatusSPS realPwrSetPointEnabled = 3;`
     * @return Whether the realPwrSetPointEnabled field is set.
     */
    public fun hasRealPwrSetPointEnabled(): kotlin.Boolean {
      return _builder.hasRealPwrSetPointEnabled()
    }

    /**
     * ```
     * Reset device
     * ```
     *
     * `.commonmodule.StatusSPS reset = 4;`
     */
    public var reset: openfmb.commonmodule.StatusSPS
      @JvmName("getReset")
      get() = _builder.getReset()
      @JvmName("setReset")
      set(value) {
        _builder.setReset(value)
      }
    /**
     * ```
     * Reset device
     * ```
     *
     * `.commonmodule.StatusSPS reset = 4;`
     */
    public fun clearReset() {
      _builder.clearReset()
    }
    /**
     * ```
     * Reset device
     * ```
     *
     * `.commonmodule.StatusSPS reset = 4;`
     * @return Whether the reset field is set.
     */
    public fun hasReset(): kotlin.Boolean {
      return _builder.hasReset()
    }

    /**
     * ```
     * ESS state
     * ```
     *
     * `.commonmodule.Optional_StateKind state = 5;`
     */
    public var state: openfmb.commonmodule.Optional_StateKind
      @JvmName("getState")
      get() = _builder.getState()
      @JvmName("setState")
      set(value) {
        _builder.setState(value)
      }
    /**
     * ```
     * ESS state
     * ```
     *
     * `.commonmodule.Optional_StateKind state = 5;`
     */
    public fun clearState() {
      _builder.clearState()
    }
    /**
     * ```
     * ESS state
     * ```
     *
     * `.commonmodule.Optional_StateKind state = 5;`
     * @return Whether the state field is set.
     */
    public fun hasState(): kotlin.Boolean {
      return _builder.hasState()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.loadmodule.LoadPointStatus.copy(block: openfmb.loadmodule.LoadPointStatusKt.Dsl.() -> kotlin.Unit): openfmb.loadmodule.LoadPointStatus =
  openfmb.loadmodule.LoadPointStatusKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.loadmodule.LoadPointStatusOrBuilder.rampRatesOrNull: openfmb.commonmodule.RampRate?
  get() = if (hasRampRates()) getRampRates() else null

public val openfmb.loadmodule.LoadPointStatusOrBuilder.reactivePwrSetPointEnabledOrNull: openfmb.commonmodule.StatusSPS?
  get() = if (hasReactivePwrSetPointEnabled()) getReactivePwrSetPointEnabled() else null

public val openfmb.loadmodule.LoadPointStatusOrBuilder.realPwrSetPointEnabledOrNull: openfmb.commonmodule.StatusSPS?
  get() = if (hasRealPwrSetPointEnabled()) getRealPwrSetPointEnabled() else null

public val openfmb.loadmodule.LoadPointStatusOrBuilder.resetOrNull: openfmb.commonmodule.StatusSPS?
  get() = if (hasReset()) getReset() else null

public val openfmb.loadmodule.LoadPointStatusOrBuilder.stateOrNull: openfmb.commonmodule.Optional_StateKind?
  get() = if (hasState()) getState() else null

