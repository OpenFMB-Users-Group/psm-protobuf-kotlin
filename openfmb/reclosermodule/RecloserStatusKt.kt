//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: reclosermodule/reclosermodule.proto

package openfmb.reclosermodule;

@kotlin.jvm.JvmName("-initializerecloserStatus")
public inline fun recloserStatus(block: openfmb.reclosermodule.RecloserStatusKt.Dsl.() -> kotlin.Unit): openfmb.reclosermodule.RecloserStatus =
  openfmb.reclosermodule.RecloserStatusKt.Dsl._create(openfmb.reclosermodule.RecloserStatus.newBuilder()).apply { block() }._build()
public object RecloserStatusKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.reclosermodule.RecloserStatus.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.reclosermodule.RecloserStatus.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.reclosermodule.RecloserStatus = _builder.build()

    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];</code>
     */
    public var statusValue: openfmb.commonmodule.StatusValue
      @JvmName("getStatusValue")
      get() = _builder.getStatusValue()
      @JvmName("setStatusValue")
      set(value) {
        _builder.setStatusValue(value)
      }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];</code>
     */
    public fun clearStatusValue() {
      _builder.clearStatusValue()
    }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];</code>
     * @return Whether the statusValue field is set.
     */
    public fun hasStatusValue(): kotlin.Boolean {
      return _builder.hasStatusValue()
    }

    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.commonmodule.StatusAndEventXCBR statusAndEventXCBR = 2;</code>
     */
    public var statusAndEventXCBR: openfmb.commonmodule.StatusAndEventXCBR
      @JvmName("getStatusAndEventXCBR")
      get() = _builder.getStatusAndEventXCBR()
      @JvmName("setStatusAndEventXCBR")
      set(value) {
        _builder.setStatusAndEventXCBR(value)
      }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.commonmodule.StatusAndEventXCBR statusAndEventXCBR = 2;</code>
     */
    public fun clearStatusAndEventXCBR() {
      _builder.clearStatusAndEventXCBR()
    }
    /**
     * <pre>
     * MISSING DOCUMENTATION!!!
     * </pre>
     *
     * <code>.commonmodule.StatusAndEventXCBR statusAndEventXCBR = 2;</code>
     * @return Whether the statusAndEventXCBR field is set.
     */
    public fun hasStatusAndEventXCBR(): kotlin.Boolean {
      return _builder.hasStatusAndEventXCBR()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.reclosermodule.RecloserStatus.copy(block: openfmb.reclosermodule.RecloserStatusKt.Dsl.() -> kotlin.Unit): openfmb.reclosermodule.RecloserStatus =
  openfmb.reclosermodule.RecloserStatusKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.reclosermodule.RecloserStatusOrBuilder.statusValueOrNull: openfmb.commonmodule.StatusValue?
  get() = if (hasStatusValue()) getStatusValue() else null

public val openfmb.reclosermodule.RecloserStatusOrBuilder.statusAndEventXCBROrNull: openfmb.commonmodule.StatusAndEventXCBR?
  get() = if (hasStatusAndEventXCBR()) getStatusAndEventXCBR() else null

