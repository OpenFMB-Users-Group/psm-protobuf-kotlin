// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: circuitsegmentservicemodule/circuitsegmentservicemodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.circuitsegmentservicemodule;

@kotlin.jvm.JvmName("-initializecircuitSegmentStatusProfile")
public inline fun circuitSegmentStatusProfile(block: openfmb.circuitsegmentservicemodule.CircuitSegmentStatusProfileKt.Dsl.() -> kotlin.Unit): openfmb.circuitsegmentservicemodule.CircuitSegmentStatusProfile =
  openfmb.circuitsegmentservicemodule.CircuitSegmentStatusProfileKt.Dsl._create(openfmb.circuitsegmentservicemodule.CircuitSegmentStatusProfile.newBuilder()).apply { block() }._build()
/**
 * ```
 * Switch event profile
 * ```
 *
 * Protobuf type `circuitsegmentservicemodule.CircuitSegmentStatusProfile`
 */
public object CircuitSegmentStatusProfileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.circuitsegmentservicemodule.CircuitSegmentStatusProfile.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.circuitsegmentservicemodule.CircuitSegmentStatusProfile.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.circuitsegmentservicemodule.CircuitSegmentStatusProfile = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public var statusMessageInfo: openfmb.commonmodule.StatusMessageInfo
      @kotlin.jvm.JvmName("getStatusMessageInfo")
        get() = _builder.statusMessageInfo
      @kotlin.jvm.JvmName("setStatusMessageInfo")
        set(value) {
        _builder.statusMessageInfo = value
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearStatusMessageInfo() {
      _builder.clearStatusMessageInfo()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the statusMessageInfo field is set.
     */
    public fun hasStatusMessageInfo(): kotlin.Boolean {
      return _builder.hasStatusMessageInfo()
    }

    public val CircuitSegmentStatusProfileKt.Dsl.statusMessageInfoOrNull: openfmb.commonmodule.StatusMessageInfo?
      get() = _builder.statusMessageInfoOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var applicationSystem: openfmb.commonmodule.ApplicationSystem
      @kotlin.jvm.JvmName("getApplicationSystem")
        get() = _builder.applicationSystem
      @kotlin.jvm.JvmName("setApplicationSystem")
        set(value) {
        _builder.applicationSystem = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearApplicationSystem() {
      _builder.clearApplicationSystem()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the applicationSystem field is set.
     */
    public fun hasApplicationSystem(): kotlin.Boolean {
      return _builder.hasApplicationSystem()
    }

    public val CircuitSegmentStatusProfileKt.Dsl.applicationSystemOrNull: openfmb.commonmodule.ApplicationSystem?
      get() = _builder.applicationSystemOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.circuitsegmentservicemodule.CircuitSegmentStatus circuitSegmentStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var circuitSegmentStatus: openfmb.circuitsegmentservicemodule.CircuitSegmentStatus
      @kotlin.jvm.JvmName("getCircuitSegmentStatus")
        get() = _builder.circuitSegmentStatus
      @kotlin.jvm.JvmName("setCircuitSegmentStatus")
        set(value) {
        _builder.circuitSegmentStatus = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.circuitsegmentservicemodule.CircuitSegmentStatus circuitSegmentStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearCircuitSegmentStatus() {
      _builder.clearCircuitSegmentStatus()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.circuitsegmentservicemodule.CircuitSegmentStatus circuitSegmentStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the circuitSegmentStatus field is set.
     */
    public fun hasCircuitSegmentStatus(): kotlin.Boolean {
      return _builder.hasCircuitSegmentStatus()
    }

    public val CircuitSegmentStatusProfileKt.Dsl.circuitSegmentStatusOrNull: openfmb.circuitsegmentservicemodule.CircuitSegmentStatus?
      get() = _builder.circuitSegmentStatusOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.circuitsegmentservicemodule.CircuitSegmentStatusProfile.copy(block: `openfmb.circuitsegmentservicemodule`.CircuitSegmentStatusProfileKt.Dsl.() -> kotlin.Unit): openfmb.circuitsegmentservicemodule.CircuitSegmentStatusProfile =
  `openfmb.circuitsegmentservicemodule`.CircuitSegmentStatusProfileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.circuitsegmentservicemodule.CircuitSegmentStatusProfileOrBuilder.statusMessageInfoOrNull: openfmb.commonmodule.StatusMessageInfo?
  get() = if (hasStatusMessageInfo()) getStatusMessageInfo() else null

public val openfmb.circuitsegmentservicemodule.CircuitSegmentStatusProfileOrBuilder.applicationSystemOrNull: openfmb.commonmodule.ApplicationSystem?
  get() = if (hasApplicationSystem()) getApplicationSystem() else null

public val openfmb.circuitsegmentservicemodule.CircuitSegmentStatusProfileOrBuilder.circuitSegmentStatusOrNull: openfmb.circuitsegmentservicemodule.CircuitSegmentStatus?
  get() = if (hasCircuitSegmentStatus()) getCircuitSegmentStatus() else null

