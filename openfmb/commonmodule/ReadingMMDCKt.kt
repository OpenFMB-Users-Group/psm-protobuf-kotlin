// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: commonmodule/commonmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializereadingMMDC")
public inline fun readingMMDC(block: openfmb.commonmodule.ReadingMMDCKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.ReadingMMDC =
  openfmb.commonmodule.ReadingMMDCKt.Dsl._create(openfmb.commonmodule.ReadingMMDC.newBuilder()).apply { block() }._build()
/**
 * ```
 * Specialized 61850 MMDC LN: DC measurement   Name: MMDC
 * ```
 *
 * Protobuf type `commonmodule.ReadingMMDC`
 */
public object ReadingMMDCKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.ReadingMMDC.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.ReadingMMDC.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.ReadingMMDC = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];`
     */
    public var logicalNode: openfmb.commonmodule.LogicalNode
      @kotlin.jvm.JvmName("getLogicalNode")
        get() = _builder.logicalNode
      @kotlin.jvm.JvmName("setLogicalNode")
        set(value) {
        _builder.logicalNode = value
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearLogicalNode() {
      _builder.clearLogicalNode()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the logicalNode field is set.
     */
    public fun hasLogicalNode(): kotlin.Boolean {
      return _builder.hasLogicalNode()
    }

    public val ReadingMMDCKt.Dsl.logicalNodeOrNull: openfmb.commonmodule.LogicalNode?
      get() = _builder.logicalNodeOrNull

    /**
     * ```
     * DC power.
     * ```
     *
     * `.commonmodule.MV Watt = 2;`
     */
    public var watt: openfmb.commonmodule.MV
      @kotlin.jvm.JvmName("getWatt")
        get() = _builder.watt
      @kotlin.jvm.JvmName("setWatt")
        set(value) {
        _builder.watt = value
      }
    /**
     * ```
     * DC power.
     * ```
     *
     * `.commonmodule.MV Watt = 2;`
     */
    public fun clearWatt() {
      _builder.clearWatt()
    }
    /**
     * ```
     * DC power.
     * ```
     *
     * `.commonmodule.MV Watt = 2;`
     * @return Whether the watt field is set.
     */
    public fun hasWatt(): kotlin.Boolean {
      return _builder.hasWatt()
    }

    public val ReadingMMDCKt.Dsl.wattOrNull: openfmb.commonmodule.MV?
      get() = _builder.wattOrNull

    /**
     * ```
     * DC current.
     * ```
     *
     * `.commonmodule.MV Amp = 3;`
     */
    public var amp: openfmb.commonmodule.MV
      @kotlin.jvm.JvmName("getAmp")
        get() = _builder.amp
      @kotlin.jvm.JvmName("setAmp")
        set(value) {
        _builder.amp = value
      }
    /**
     * ```
     * DC current.
     * ```
     *
     * `.commonmodule.MV Amp = 3;`
     */
    public fun clearAmp() {
      _builder.clearAmp()
    }
    /**
     * ```
     * DC current.
     * ```
     *
     * `.commonmodule.MV Amp = 3;`
     * @return Whether the amp field is set.
     */
    public fun hasAmp(): kotlin.Boolean {
      return _builder.hasAmp()
    }

    public val ReadingMMDCKt.Dsl.ampOrNull: openfmb.commonmodule.MV?
      get() = _builder.ampOrNull

    /**
     * ```
     * DC voltage.
     * ```
     *
     * `.commonmodule.MV Vol = 4;`
     */
    public var vol: openfmb.commonmodule.MV
      @kotlin.jvm.JvmName("getVol")
        get() = _builder.vol
      @kotlin.jvm.JvmName("setVol")
        set(value) {
        _builder.vol = value
      }
    /**
     * ```
     * DC voltage.
     * ```
     *
     * `.commonmodule.MV Vol = 4;`
     */
    public fun clearVol() {
      _builder.clearVol()
    }
    /**
     * ```
     * DC voltage.
     * ```
     *
     * `.commonmodule.MV Vol = 4;`
     * @return Whether the vol field is set.
     */
    public fun hasVol(): kotlin.Boolean {
      return _builder.hasVol()
    }

    public val ReadingMMDCKt.Dsl.volOrNull: openfmb.commonmodule.MV?
      get() = _builder.volOrNull

    /**
     * ```
     * DC voltage between positive pole and earth.
     * ```
     *
     * `.commonmodule.MV VolPsGnd = 5;`
     */
    public var volPsGnd: openfmb.commonmodule.MV
      @kotlin.jvm.JvmName("getVolPsGnd")
        get() = _builder.volPsGnd
      @kotlin.jvm.JvmName("setVolPsGnd")
        set(value) {
        _builder.volPsGnd = value
      }
    /**
     * ```
     * DC voltage between positive pole and earth.
     * ```
     *
     * `.commonmodule.MV VolPsGnd = 5;`
     */
    public fun clearVolPsGnd() {
      _builder.clearVolPsGnd()
    }
    /**
     * ```
     * DC voltage between positive pole and earth.
     * ```
     *
     * `.commonmodule.MV VolPsGnd = 5;`
     * @return Whether the volPsGnd field is set.
     */
    public fun hasVolPsGnd(): kotlin.Boolean {
      return _builder.hasVolPsGnd()
    }

    public val ReadingMMDCKt.Dsl.volPsGndOrNull: openfmb.commonmodule.MV?
      get() = _builder.volPsGndOrNull

    /**
     * ```
     * DC voltage between negative pole and earth.
     * ```
     *
     * `.commonmodule.MV VolNgGnd = 6;`
     */
    public var volNgGnd: openfmb.commonmodule.MV
      @kotlin.jvm.JvmName("getVolNgGnd")
        get() = _builder.volNgGnd
      @kotlin.jvm.JvmName("setVolNgGnd")
        set(value) {
        _builder.volNgGnd = value
      }
    /**
     * ```
     * DC voltage between negative pole and earth.
     * ```
     *
     * `.commonmodule.MV VolNgGnd = 6;`
     */
    public fun clearVolNgGnd() {
      _builder.clearVolNgGnd()
    }
    /**
     * ```
     * DC voltage between negative pole and earth.
     * ```
     *
     * `.commonmodule.MV VolNgGnd = 6;`
     * @return Whether the volNgGnd field is set.
     */
    public fun hasVolNgGnd(): kotlin.Boolean {
      return _builder.hasVolNgGnd()
    }

    public val ReadingMMDCKt.Dsl.volNgGndOrNull: openfmb.commonmodule.MV?
      get() = _builder.volNgGndOrNull

    /**
     * ```
     * Resistance in DC circuit.
     * ```
     *
     * `.commonmodule.MV Ris = 7;`
     */
    public var ris: openfmb.commonmodule.MV
      @kotlin.jvm.JvmName("getRis")
        get() = _builder.ris
      @kotlin.jvm.JvmName("setRis")
        set(value) {
        _builder.ris = value
      }
    /**
     * ```
     * Resistance in DC circuit.
     * ```
     *
     * `.commonmodule.MV Ris = 7;`
     */
    public fun clearRis() {
      _builder.clearRis()
    }
    /**
     * ```
     * Resistance in DC circuit.
     * ```
     *
     * `.commonmodule.MV Ris = 7;`
     * @return Whether the ris field is set.
     */
    public fun hasRis(): kotlin.Boolean {
      return _builder.hasRis()
    }

    public val ReadingMMDCKt.Dsl.risOrNull: openfmb.commonmodule.MV?
      get() = _builder.risOrNull

    /**
     * ```
     * DC resistance between positive pole and earth.
     * ```
     *
     * `.commonmodule.MV RisPsGnd = 8;`
     */
    public var risPsGnd: openfmb.commonmodule.MV
      @kotlin.jvm.JvmName("getRisPsGnd")
        get() = _builder.risPsGnd
      @kotlin.jvm.JvmName("setRisPsGnd")
        set(value) {
        _builder.risPsGnd = value
      }
    /**
     * ```
     * DC resistance between positive pole and earth.
     * ```
     *
     * `.commonmodule.MV RisPsGnd = 8;`
     */
    public fun clearRisPsGnd() {
      _builder.clearRisPsGnd()
    }
    /**
     * ```
     * DC resistance between positive pole and earth.
     * ```
     *
     * `.commonmodule.MV RisPsGnd = 8;`
     * @return Whether the risPsGnd field is set.
     */
    public fun hasRisPsGnd(): kotlin.Boolean {
      return _builder.hasRisPsGnd()
    }

    public val ReadingMMDCKt.Dsl.risPsGndOrNull: openfmb.commonmodule.MV?
      get() = _builder.risPsGndOrNull

    /**
     * ```
     * DC resistance between negative pole and earth.
     * ```
     *
     * `.commonmodule.MV RisNgGnd = 9;`
     */
    public var risNgGnd: openfmb.commonmodule.MV
      @kotlin.jvm.JvmName("getRisNgGnd")
        get() = _builder.risNgGnd
      @kotlin.jvm.JvmName("setRisNgGnd")
        set(value) {
        _builder.risNgGnd = value
      }
    /**
     * ```
     * DC resistance between negative pole and earth.
     * ```
     *
     * `.commonmodule.MV RisNgGnd = 9;`
     */
    public fun clearRisNgGnd() {
      _builder.clearRisNgGnd()
    }
    /**
     * ```
     * DC resistance between negative pole and earth.
     * ```
     *
     * `.commonmodule.MV RisNgGnd = 9;`
     * @return Whether the risNgGnd field is set.
     */
    public fun hasRisNgGnd(): kotlin.Boolean {
      return _builder.hasRisNgGnd()
    }

    public val ReadingMMDCKt.Dsl.risNgGndOrNull: openfmb.commonmodule.MV?
      get() = _builder.risNgGndOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.commonmodule.ReadingMMDC.copy(block: `openfmb.commonmodule`.ReadingMMDCKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.ReadingMMDC =
  `openfmb.commonmodule`.ReadingMMDCKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.commonmodule.ReadingMMDCOrBuilder.logicalNodeOrNull: openfmb.commonmodule.LogicalNode?
  get() = if (hasLogicalNode()) getLogicalNode() else null

public val openfmb.commonmodule.ReadingMMDCOrBuilder.wattOrNull: openfmb.commonmodule.MV?
  get() = if (hasWatt()) getWatt() else null

public val openfmb.commonmodule.ReadingMMDCOrBuilder.ampOrNull: openfmb.commonmodule.MV?
  get() = if (hasAmp()) getAmp() else null

public val openfmb.commonmodule.ReadingMMDCOrBuilder.volOrNull: openfmb.commonmodule.MV?
  get() = if (hasVol()) getVol() else null

public val openfmb.commonmodule.ReadingMMDCOrBuilder.volPsGndOrNull: openfmb.commonmodule.MV?
  get() = if (hasVolPsGnd()) getVolPsGnd() else null

public val openfmb.commonmodule.ReadingMMDCOrBuilder.volNgGndOrNull: openfmb.commonmodule.MV?
  get() = if (hasVolNgGnd()) getVolNgGnd() else null

public val openfmb.commonmodule.ReadingMMDCOrBuilder.risOrNull: openfmb.commonmodule.MV?
  get() = if (hasRis()) getRis() else null

public val openfmb.commonmodule.ReadingMMDCOrBuilder.risPsGndOrNull: openfmb.commonmodule.MV?
  get() = if (hasRisPsGnd()) getRisPsGnd() else null

public val openfmb.commonmodule.ReadingMMDCOrBuilder.risNgGndOrNull: openfmb.commonmodule.MV?
  get() = if (hasRisNgGnd()) getRisNgGnd() else null

