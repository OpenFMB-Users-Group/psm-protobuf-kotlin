//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: commonmodule/commonmodule.proto

package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializereadingMessageInfo")
public inline fun readingMessageInfo(block: openfmb.commonmodule.ReadingMessageInfoKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.ReadingMessageInfo =
  openfmb.commonmodule.ReadingMessageInfoKt.Dsl._create(openfmb.commonmodule.ReadingMessageInfo.newBuilder()).apply { block() }._build()
public object ReadingMessageInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.ReadingMessageInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.ReadingMessageInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.ReadingMessageInfo = _builder.build()

    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];</code>
     */
    public var messageInfo: openfmb.commonmodule.MessageInfo
      @JvmName("getMessageInfo")
      get() = _builder.getMessageInfo()
      @JvmName("setMessageInfo")
      set(value) {
        _builder.setMessageInfo(value)
      }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];</code>
     */
    public fun clearMessageInfo() {
      _builder.clearMessageInfo()
    }
    /**
     * <pre>
     * UML inherited base object
     * </pre>
     *
     * <code>.commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];</code>
     * @return Whether the messageInfo field is set.
     */
    public fun hasMessageInfo(): kotlin.Boolean {
      return _builder.hasMessageInfo()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.commonmodule.ReadingMessageInfo.copy(block: openfmb.commonmodule.ReadingMessageInfoKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.ReadingMessageInfo =
  openfmb.commonmodule.ReadingMessageInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val openfmb.commonmodule.ReadingMessageInfoOrBuilder.messageInfoOrNull: openfmb.commonmodule.MessageInfo?
  get() = if (hasMessageInfo()) getMessageInfo() else null

