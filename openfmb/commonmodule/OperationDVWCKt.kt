//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: commonmodule/commonmodule.proto

package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializeoperationDVWC")
public inline fun operationDVWC(block: openfmb.commonmodule.OperationDVWCKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.OperationDVWC =
  openfmb.commonmodule.OperationDVWCKt.Dsl._create(openfmb.commonmodule.OperationDVWC.newBuilder()).apply { block() }._build()
public object OperationDVWCKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.OperationDVWC.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.OperationDVWC.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.OperationDVWC = _builder.build()

    /**
     * <pre>
     * Voltage-Active Power Mode Enable
     * </pre>
     *
     * <code>bool modEna = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var modEna: kotlin.Boolean
      @JvmName("getModEna")
      get() = _builder.getModEna()
      @JvmName("setModEna")
      set(value) {
        _builder.setModEna(value)
      }
    /**
     * <pre>
     * Voltage-Active Power Mode Enable
     * </pre>
     *
     * <code>bool modEna = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearModEna() {
      _builder.clearModEna()
    }

    /**
     * <pre>
     * Open Loop Response Time
     * </pre>
     *
     * <code>.commonmodule.ClearingTime OplTmmsMax = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var oplTmmsMax: openfmb.commonmodule.ClearingTime
      @JvmName("getOplTmmsMax")
      get() = _builder.getOplTmmsMax()
      @JvmName("setOplTmmsMax")
      set(value) {
        _builder.setOplTmmsMax(value)
      }
    /**
     * <pre>
     * Open Loop Response Time
     * </pre>
     *
     * <code>.commonmodule.ClearingTime OplTmmsMax = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearOplTmmsMax() {
      _builder.clearOplTmmsMax()
    }
    /**
     * <pre>
     * Open Loop Response Time
     * </pre>
     *
     * <code>.commonmodule.ClearingTime OplTmmsMax = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     * @return Whether the oplTmmsMax field is set.
     */
    public fun hasOplTmmsMax(): kotlin.Boolean {
      return _builder.hasOplTmmsMax()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.commonmodule.OperationDVWC.copy(block: openfmb.commonmodule.OperationDVWCKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.OperationDVWC =
  openfmb.commonmodule.OperationDVWCKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val openfmb.commonmodule.OperationDVWCOrBuilder.oplTmmsMaxOrNull: openfmb.commonmodule.ClearingTime?
  get() = if (hasOplTmmsMax()) getOplTmmsMax() else null

