// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: switchmodule/switchmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.switchmodule;

@kotlin.jvm.JvmName("-initializeswitchStatusProfile")
public inline fun switchStatusProfile(block: openfmb.switchmodule.SwitchStatusProfileKt.Dsl.() -> kotlin.Unit): openfmb.switchmodule.SwitchStatusProfile =
  openfmb.switchmodule.SwitchStatusProfileKt.Dsl._create(openfmb.switchmodule.SwitchStatusProfile.newBuilder()).apply { block() }._build()
/**
 * ```
 * Switch status profile
 * ```
 *
 * Protobuf type `switchmodule.SwitchStatusProfile`
 */
public object SwitchStatusProfileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.switchmodule.SwitchStatusProfile.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.switchmodule.SwitchStatusProfile.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.switchmodule.SwitchStatusProfile = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public var statusMessageInfo: openfmb.commonmodule.StatusMessageInfo
      @kotlin.jvm.JvmName("getStatusMessageInfo")
        get() = _builder.statusMessageInfo
      @kotlin.jvm.JvmName("setStatusMessageInfo")
        set(value) {
        _builder.statusMessageInfo = value
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearStatusMessageInfo() {
      _builder.clearStatusMessageInfo()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the statusMessageInfo field is set.
     */
    public fun hasStatusMessageInfo(): kotlin.Boolean {
      return _builder.hasStatusMessageInfo()
    }

    public val SwitchStatusProfileKt.Dsl.statusMessageInfoOrNull: openfmb.commonmodule.StatusMessageInfo?
      get() = _builder.statusMessageInfoOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var protectedSwitch: openfmb.switchmodule.ProtectedSwitch
      @kotlin.jvm.JvmName("getProtectedSwitch")
        get() = _builder.protectedSwitch
      @kotlin.jvm.JvmName("setProtectedSwitch")
        set(value) {
        _builder.protectedSwitch = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearProtectedSwitch() {
      _builder.clearProtectedSwitch()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the protectedSwitch field is set.
     */
    public fun hasProtectedSwitch(): kotlin.Boolean {
      return _builder.hasProtectedSwitch()
    }

    public val SwitchStatusProfileKt.Dsl.protectedSwitchOrNull: openfmb.switchmodule.ProtectedSwitch?
      get() = _builder.protectedSwitchOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.switchmodule.SwitchStatus switchStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var switchStatus: openfmb.switchmodule.SwitchStatus
      @kotlin.jvm.JvmName("getSwitchStatus")
        get() = _builder.switchStatus
      @kotlin.jvm.JvmName("setSwitchStatus")
        set(value) {
        _builder.switchStatus = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.switchmodule.SwitchStatus switchStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearSwitchStatus() {
      _builder.clearSwitchStatus()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.switchmodule.SwitchStatus switchStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the switchStatus field is set.
     */
    public fun hasSwitchStatus(): kotlin.Boolean {
      return _builder.hasSwitchStatus()
    }

    public val SwitchStatusProfileKt.Dsl.switchStatusOrNull: openfmb.switchmodule.SwitchStatus?
      get() = _builder.switchStatusOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.switchmodule.SwitchStatusProfile.copy(block: `openfmb.switchmodule`.SwitchStatusProfileKt.Dsl.() -> kotlin.Unit): openfmb.switchmodule.SwitchStatusProfile =
  `openfmb.switchmodule`.SwitchStatusProfileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.switchmodule.SwitchStatusProfileOrBuilder.statusMessageInfoOrNull: openfmb.commonmodule.StatusMessageInfo?
  get() = if (hasStatusMessageInfo()) getStatusMessageInfo() else null

public val openfmb.switchmodule.SwitchStatusProfileOrBuilder.protectedSwitchOrNull: openfmb.switchmodule.ProtectedSwitch?
  get() = if (hasProtectedSwitch()) getProtectedSwitch() else null

public val openfmb.switchmodule.SwitchStatusProfileOrBuilder.switchStatusOrNull: openfmb.switchmodule.SwitchStatus?
  get() = if (hasSwitchStatus()) getSwitchStatus() else null

