// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: commonmodule/commonmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializetmVoltPoint")
public inline fun tmVoltPoint(block: openfmb.commonmodule.TmVoltPointKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.TmVoltPoint =
  openfmb.commonmodule.TmVoltPointKt.Dsl._create(openfmb.commonmodule.TmVoltPoint.newBuilder()).apply { block() }._build()
/**
 * ```
 * MISSING DOCUMENTATION!!!
 * ```
 *
 * Protobuf type `commonmodule.TmVoltPoint`
 */
public object TmVoltPointKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.TmVoltPoint.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.TmVoltPoint.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.TmVoltPoint = _builder.build()

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ClearingTime tmVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var tmVal: openfmb.commonmodule.ClearingTime
      @JvmName("getTmVal")
      get() = _builder.getTmVal()
      @JvmName("setTmVal")
      set(value) {
        _builder.setTmVal(value)
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ClearingTime tmVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearTmVal() {
      _builder.clearTmVal()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ClearingTime tmVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the tmVal field is set.
     */
    public fun hasTmVal(): kotlin.Boolean {
      return _builder.hasTmVal()
    }

    /**
     * ```
     * This is an absolute value field.
     * ```
     *
     * `float voltVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var voltVal: kotlin.Float
      @JvmName("getVoltVal")
      get() = _builder.getVoltVal()
      @JvmName("setVoltVal")
      set(value) {
        _builder.setVoltVal(value)
      }
    /**
     * ```
     * This is an absolute value field.
     * ```
     *
     * `float voltVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearVoltVal() {
      _builder.clearVoltVal()
    }
  }
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun openfmb.commonmodule.TmVoltPoint.copy(block: openfmb.commonmodule.TmVoltPointKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.TmVoltPoint =
  openfmb.commonmodule.TmVoltPointKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.commonmodule.TmVoltPointOrBuilder.tmValOrNull: openfmb.commonmodule.ClearingTime?
  get() = if (hasTmVal()) getTmVal() else null

