// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: commonmodule/commonmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializereadingMMTR")
public inline fun readingMMTR(block: openfmb.commonmodule.ReadingMMTRKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.ReadingMMTR =
  openfmb.commonmodule.ReadingMMTRKt.Dsl._create(openfmb.commonmodule.ReadingMMTR.newBuilder()).apply { block() }._build()
/**
 * ```
 * Specialized 61850 MMTR class
 * ```
 *
 * Protobuf type `commonmodule.ReadingMMTR`
 */
public object ReadingMMTRKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.ReadingMMTR.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.ReadingMMTR.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.ReadingMMTR = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];`
     */
    public var logicalNode: openfmb.commonmodule.LogicalNode
      @JvmName("getLogicalNode")
      get() = _builder.getLogicalNode()
      @JvmName("setLogicalNode")
      set(value) {
        _builder.setLogicalNode(value)
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearLogicalNode() {
      _builder.clearLogicalNode()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the logicalNode field is set.
     */
    public fun hasLogicalNode(): kotlin.Boolean {
      return _builder.hasLogicalNode()
    }

    /**
     * ```
     * Apparent energy demand (direction: from busbar).
     * ```
     *
     * `.commonmodule.BCR DmdVAh = 2;`
     */
    public var dmdVAh: openfmb.commonmodule.BCR
      @JvmName("getDmdVAh")
      get() = _builder.getDmdVAh()
      @JvmName("setDmdVAh")
      set(value) {
        _builder.setDmdVAh(value)
      }
    /**
     * ```
     * Apparent energy demand (direction: from busbar).
     * ```
     *
     * `.commonmodule.BCR DmdVAh = 2;`
     */
    public fun clearDmdVAh() {
      _builder.clearDmdVAh()
    }
    /**
     * ```
     * Apparent energy demand (direction: from busbar).
     * ```
     *
     * `.commonmodule.BCR DmdVAh = 2;`
     * @return Whether the dmdVAh field is set.
     */
    public fun hasDmdVAh(): kotlin.Boolean {
      return _builder.hasDmdVAh()
    }

    /**
     * ```
     * Reactive energy demand (direction: from busbar).
     * ```
     *
     * `.commonmodule.BCR DmdVArh = 3;`
     */
    public var dmdVArh: openfmb.commonmodule.BCR
      @JvmName("getDmdVArh")
      get() = _builder.getDmdVArh()
      @JvmName("setDmdVArh")
      set(value) {
        _builder.setDmdVArh(value)
      }
    /**
     * ```
     * Reactive energy demand (direction: from busbar).
     * ```
     *
     * `.commonmodule.BCR DmdVArh = 3;`
     */
    public fun clearDmdVArh() {
      _builder.clearDmdVArh()
    }
    /**
     * ```
     * Reactive energy demand (direction: from busbar).
     * ```
     *
     * `.commonmodule.BCR DmdVArh = 3;`
     * @return Whether the dmdVArh field is set.
     */
    public fun hasDmdVArh(): kotlin.Boolean {
      return _builder.hasDmdVArh()
    }

    /**
     * ```
     * Real energy demand (direction: from busbar).
     * ```
     *
     * `.commonmodule.BCR DmdWh = 4;`
     */
    public var dmdWh: openfmb.commonmodule.BCR
      @JvmName("getDmdWh")
      get() = _builder.getDmdWh()
      @JvmName("setDmdWh")
      set(value) {
        _builder.setDmdWh(value)
      }
    /**
     * ```
     * Real energy demand (direction: from busbar).
     * ```
     *
     * `.commonmodule.BCR DmdWh = 4;`
     */
    public fun clearDmdWh() {
      _builder.clearDmdWh()
    }
    /**
     * ```
     * Real energy demand (direction: from busbar).
     * ```
     *
     * `.commonmodule.BCR DmdWh = 4;`
     * @return Whether the dmdWh field is set.
     */
    public fun hasDmdWh(): kotlin.Boolean {
      return _builder.hasDmdWh()
    }

    /**
     * ```
     * Apparent energy supply (default direction: towards busbar).
     * ```
     *
     * `.commonmodule.BCR SupVAh = 5;`
     */
    public var supVAh: openfmb.commonmodule.BCR
      @JvmName("getSupVAh")
      get() = _builder.getSupVAh()
      @JvmName("setSupVAh")
      set(value) {
        _builder.setSupVAh(value)
      }
    /**
     * ```
     * Apparent energy supply (default direction: towards busbar).
     * ```
     *
     * `.commonmodule.BCR SupVAh = 5;`
     */
    public fun clearSupVAh() {
      _builder.clearSupVAh()
    }
    /**
     * ```
     * Apparent energy supply (default direction: towards busbar).
     * ```
     *
     * `.commonmodule.BCR SupVAh = 5;`
     * @return Whether the supVAh field is set.
     */
    public fun hasSupVAh(): kotlin.Boolean {
      return _builder.hasSupVAh()
    }

    /**
     * ```
     * Reactive energy supply (default direction: towards busbar).
     * ```
     *
     * `.commonmodule.BCR SupVArh = 6;`
     */
    public var supVArh: openfmb.commonmodule.BCR
      @JvmName("getSupVArh")
      get() = _builder.getSupVArh()
      @JvmName("setSupVArh")
      set(value) {
        _builder.setSupVArh(value)
      }
    /**
     * ```
     * Reactive energy supply (default direction: towards busbar).
     * ```
     *
     * `.commonmodule.BCR SupVArh = 6;`
     */
    public fun clearSupVArh() {
      _builder.clearSupVArh()
    }
    /**
     * ```
     * Reactive energy supply (default direction: towards busbar).
     * ```
     *
     * `.commonmodule.BCR SupVArh = 6;`
     * @return Whether the supVArh field is set.
     */
    public fun hasSupVArh(): kotlin.Boolean {
      return _builder.hasSupVArh()
    }

    /**
     * ```
     * Real energy supply (default direction: towards busbar).
     * ```
     *
     * `.commonmodule.BCR SupWh = 7;`
     */
    public var supWh: openfmb.commonmodule.BCR
      @JvmName("getSupWh")
      get() = _builder.getSupWh()
      @JvmName("setSupWh")
      set(value) {
        _builder.setSupWh(value)
      }
    /**
     * ```
     * Real energy supply (default direction: towards busbar).
     * ```
     *
     * `.commonmodule.BCR SupWh = 7;`
     */
    public fun clearSupWh() {
      _builder.clearSupWh()
    }
    /**
     * ```
     * Real energy supply (default direction: towards busbar).
     * ```
     *
     * `.commonmodule.BCR SupWh = 7;`
     * @return Whether the supWh field is set.
     */
    public fun hasSupWh(): kotlin.Boolean {
      return _builder.hasSupWh()
    }

    /**
     * ```
     * Net apparent energy since last reset.
     * ```
     *
     * `.commonmodule.BCR TotVAh = 8;`
     */
    public var totVAh: openfmb.commonmodule.BCR
      @JvmName("getTotVAh")
      get() = _builder.getTotVAh()
      @JvmName("setTotVAh")
      set(value) {
        _builder.setTotVAh(value)
      }
    /**
     * ```
     * Net apparent energy since last reset.
     * ```
     *
     * `.commonmodule.BCR TotVAh = 8;`
     */
    public fun clearTotVAh() {
      _builder.clearTotVAh()
    }
    /**
     * ```
     * Net apparent energy since last reset.
     * ```
     *
     * `.commonmodule.BCR TotVAh = 8;`
     * @return Whether the totVAh field is set.
     */
    public fun hasTotVAh(): kotlin.Boolean {
      return _builder.hasTotVAh()
    }

    /**
     * ```
     * Net reactive energy since last reset.
     * ```
     *
     * `.commonmodule.BCR TotVArh = 9;`
     */
    public var totVArh: openfmb.commonmodule.BCR
      @JvmName("getTotVArh")
      get() = _builder.getTotVArh()
      @JvmName("setTotVArh")
      set(value) {
        _builder.setTotVArh(value)
      }
    /**
     * ```
     * Net reactive energy since last reset.
     * ```
     *
     * `.commonmodule.BCR TotVArh = 9;`
     */
    public fun clearTotVArh() {
      _builder.clearTotVArh()
    }
    /**
     * ```
     * Net reactive energy since last reset.
     * ```
     *
     * `.commonmodule.BCR TotVArh = 9;`
     * @return Whether the totVArh field is set.
     */
    public fun hasTotVArh(): kotlin.Boolean {
      return _builder.hasTotVArh()
    }

    /**
     * ```
     * Net real energy since last reset.
     * ```
     *
     * `.commonmodule.BCR TotWh = 10;`
     */
    public var totWh: openfmb.commonmodule.BCR
      @JvmName("getTotWh")
      get() = _builder.getTotWh()
      @JvmName("setTotWh")
      set(value) {
        _builder.setTotWh(value)
      }
    /**
     * ```
     * Net real energy since last reset.
     * ```
     *
     * `.commonmodule.BCR TotWh = 10;`
     */
    public fun clearTotWh() {
      _builder.clearTotWh()
    }
    /**
     * ```
     * Net real energy since last reset.
     * ```
     *
     * `.commonmodule.BCR TotWh = 10;`
     * @return Whether the totWh field is set.
     */
    public fun hasTotWh(): kotlin.Boolean {
      return _builder.hasTotWh()
    }
  }
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun openfmb.commonmodule.ReadingMMTR.copy(block: openfmb.commonmodule.ReadingMMTRKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.ReadingMMTR =
  openfmb.commonmodule.ReadingMMTRKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.commonmodule.ReadingMMTROrBuilder.logicalNodeOrNull: openfmb.commonmodule.LogicalNode?
  get() = if (hasLogicalNode()) getLogicalNode() else null

public val openfmb.commonmodule.ReadingMMTROrBuilder.dmdVAhOrNull: openfmb.commonmodule.BCR?
  get() = if (hasDmdVAh()) getDmdVAh() else null

public val openfmb.commonmodule.ReadingMMTROrBuilder.dmdVArhOrNull: openfmb.commonmodule.BCR?
  get() = if (hasDmdVArh()) getDmdVArh() else null

public val openfmb.commonmodule.ReadingMMTROrBuilder.dmdWhOrNull: openfmb.commonmodule.BCR?
  get() = if (hasDmdWh()) getDmdWh() else null

public val openfmb.commonmodule.ReadingMMTROrBuilder.supVAhOrNull: openfmb.commonmodule.BCR?
  get() = if (hasSupVAh()) getSupVAh() else null

public val openfmb.commonmodule.ReadingMMTROrBuilder.supVArhOrNull: openfmb.commonmodule.BCR?
  get() = if (hasSupVArh()) getSupVArh() else null

public val openfmb.commonmodule.ReadingMMTROrBuilder.supWhOrNull: openfmb.commonmodule.BCR?
  get() = if (hasSupWh()) getSupWh() else null

public val openfmb.commonmodule.ReadingMMTROrBuilder.totVAhOrNull: openfmb.commonmodule.BCR?
  get() = if (hasTotVAh()) getTotVAh() else null

public val openfmb.commonmodule.ReadingMMTROrBuilder.totVArhOrNull: openfmb.commonmodule.BCR?
  get() = if (hasTotVArh()) getTotVArh() else null

public val openfmb.commonmodule.ReadingMMTROrBuilder.totWhOrNull: openfmb.commonmodule.BCR?
  get() = if (hasTotWh()) getTotWh() else null

