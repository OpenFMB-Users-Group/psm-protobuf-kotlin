//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: commonmodule/commonmodule.proto

package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializeeNSBehaviourModeKind")
public inline fun eNSBehaviourModeKind(block: openfmb.commonmodule.ENS_BehaviourModeKindKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.ENS_BehaviourModeKind =
  openfmb.commonmodule.ENS_BehaviourModeKindKt.Dsl._create(openfmb.commonmodule.ENS_BehaviourModeKind.newBuilder()).apply { block() }._build()
public object ENS_BehaviourModeKindKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.ENS_BehaviourModeKind.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.ENS_BehaviourModeKind.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.ENS_BehaviourModeKind = _builder.build()

    /**
     * <pre>
     * Quality of the value in 'stVal'.
     * </pre>
     *
     * <code>.commonmodule.Quality q = 1;</code>
     */
    public var q: openfmb.commonmodule.Quality
      @JvmName("getQ")
      get() = _builder.getQ()
      @JvmName("setQ")
      set(value) {
        _builder.setQ(value)
      }
    /**
     * <pre>
     * Quality of the value in 'stVal'.
     * </pre>
     *
     * <code>.commonmodule.Quality q = 1;</code>
     */
    public fun clearQ() {
      _builder.clearQ()
    }
    /**
     * <pre>
     * Quality of the value in 'stVal'.
     * </pre>
     *
     * <code>.commonmodule.Quality q = 1;</code>
     * @return Whether the q field is set.
     */
    public fun hasQ(): kotlin.Boolean {
      return _builder.hasQ()
    }

    /**
     * <pre>
     * Value of the data.
     * </pre>
     *
     * <code>.commonmodule.BehaviourModeKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public var stVal: openfmb.commonmodule.BehaviourModeKind
      @JvmName("getStVal")
      get() = _builder.getStVal()
      @JvmName("setStVal")
      set(value) {
        _builder.setStVal(value)
      }
    /**
     * <pre>
     * Value of the data.
     * </pre>
     *
     * <code>.commonmodule.BehaviourModeKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];</code>
     */
    public fun clearStVal() {
      _builder.clearStVal()
    }

    /**
     * <pre>
     * Timestamp of the last change or update event of 'stVal' or the last change of value in 'q'.
     * </pre>
     *
     * <code>.commonmodule.Timestamp t = 3;</code>
     */
    public var t: openfmb.commonmodule.Timestamp
      @JvmName("getT")
      get() = _builder.getT()
      @JvmName("setT")
      set(value) {
        _builder.setT(value)
      }
    /**
     * <pre>
     * Timestamp of the last change or update event of 'stVal' or the last change of value in 'q'.
     * </pre>
     *
     * <code>.commonmodule.Timestamp t = 3;</code>
     */
    public fun clearT() {
      _builder.clearT()
    }
    /**
     * <pre>
     * Timestamp of the last change or update event of 'stVal' or the last change of value in 'q'.
     * </pre>
     *
     * <code>.commonmodule.Timestamp t = 3;</code>
     * @return Whether the t field is set.
     */
    public fun hasT(): kotlin.Boolean {
      return _builder.hasT()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.commonmodule.ENS_BehaviourModeKind.copy(block: openfmb.commonmodule.ENS_BehaviourModeKindKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.ENS_BehaviourModeKind =
  openfmb.commonmodule.ENS_BehaviourModeKindKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.commonmodule.ENS_BehaviourModeKindOrBuilder.qOrNull: openfmb.commonmodule.Quality?
  get() = if (hasQ()) getQ() else null

public val openfmb.commonmodule.ENS_BehaviourModeKindOrBuilder.tOrNull: openfmb.commonmodule.Timestamp?
  get() = if (hasT()) getT() else null

