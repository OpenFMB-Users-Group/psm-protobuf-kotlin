//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: commonmodule/commonmodule.proto

package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializedateTimeInterval")
public inline fun dateTimeInterval(block: openfmb.commonmodule.DateTimeIntervalKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.DateTimeInterval =
  openfmb.commonmodule.DateTimeIntervalKt.Dsl._create(openfmb.commonmodule.DateTimeInterval.newBuilder()).apply { block() }._build()
public object DateTimeIntervalKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.DateTimeInterval.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.DateTimeInterval.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.DateTimeInterval = _builder.build()

    /**
     * <pre>
     * End date and time of this interval.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value end = 1;</code>
     */
    public var end: com.google.protobuf.Int64Value
      @JvmName("getEnd")
      get() = _builder.getEnd()
      @JvmName("setEnd")
      set(value) {
        _builder.setEnd(value)
      }
    /**
     * <pre>
     * End date and time of this interval.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value end = 1;</code>
     */
    public fun clearEnd() {
      _builder.clearEnd()
    }
    /**
     * <pre>
     * End date and time of this interval.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value end = 1;</code>
     * @return Whether the end field is set.
     */
    public fun hasEnd(): kotlin.Boolean {
      return _builder.hasEnd()
    }

    /**
     * <pre>
     * Start date and time of this interval.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value start = 2;</code>
     */
    public var start: com.google.protobuf.Int64Value
      @JvmName("getStart")
      get() = _builder.getStart()
      @JvmName("setStart")
      set(value) {
        _builder.setStart(value)
      }
    /**
     * <pre>
     * Start date and time of this interval.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value start = 2;</code>
     */
    public fun clearStart() {
      _builder.clearStart()
    }
    /**
     * <pre>
     * Start date and time of this interval.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value start = 2;</code>
     * @return Whether the start field is set.
     */
    public fun hasStart(): kotlin.Boolean {
      return _builder.hasStart()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.commonmodule.DateTimeInterval.copy(block: openfmb.commonmodule.DateTimeIntervalKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.DateTimeInterval =
  openfmb.commonmodule.DateTimeIntervalKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.commonmodule.DateTimeIntervalOrBuilder.endOrNull: com.google.protobuf.Int64Value?
  get() = if (hasEnd()) getEnd() else null

public val openfmb.commonmodule.DateTimeIntervalOrBuilder.startOrNull: com.google.protobuf.Int64Value?
  get() = if (hasStart()) getStart() else null

