// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: reservemodule/reservemodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.reservemodule;

@kotlin.jvm.JvmName("-initializereserveAvailabilityProfile")
public inline fun reserveAvailabilityProfile(block: openfmb.reservemodule.ReserveAvailabilityProfileKt.Dsl.() -> kotlin.Unit): openfmb.reservemodule.ReserveAvailabilityProfile =
  openfmb.reservemodule.ReserveAvailabilityProfileKt.Dsl._create(openfmb.reservemodule.ReserveAvailabilityProfile.newBuilder()).apply { block() }._build()
/**
 * ```
 * Reserve availability profile
 * ```
 *
 * Protobuf type `reservemodule.ReserveAvailabilityProfile`
 */
public object ReserveAvailabilityProfileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.reservemodule.ReserveAvailabilityProfile.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.reservemodule.ReserveAvailabilityProfile.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.reservemodule.ReserveAvailabilityProfile = _builder.build()

    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public var controlMessageInfo: openfmb.commonmodule.ControlMessageInfo
      @kotlin.jvm.JvmName("getControlMessageInfo")
        get() = _builder.controlMessageInfo
      @kotlin.jvm.JvmName("setControlMessageInfo")
        set(value) {
        _builder.controlMessageInfo = value
      }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];`
     */
    public fun clearControlMessageInfo() {
      _builder.clearControlMessageInfo()
    }
    /**
     * ```
     * UML inherited base object
     * ```
     *
     * `.commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];`
     * @return Whether the controlMessageInfo field is set.
     */
    public fun hasControlMessageInfo(): kotlin.Boolean {
      return _builder.hasControlMessageInfo()
    }

    public val ReserveAvailabilityProfileKt.Dsl.controlMessageInfoOrNull: openfmb.commonmodule.ControlMessageInfo?
      get() = _builder.controlMessageInfoOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reservemodule.AllocatedMargin allocatedMargin = 2;`
     */
    public var allocatedMargin: openfmb.reservemodule.AllocatedMargin
      @kotlin.jvm.JvmName("getAllocatedMargin")
        get() = _builder.allocatedMargin
      @kotlin.jvm.JvmName("setAllocatedMargin")
        set(value) {
        _builder.allocatedMargin = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reservemodule.AllocatedMargin allocatedMargin = 2;`
     */
    public fun clearAllocatedMargin() {
      _builder.clearAllocatedMargin()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reservemodule.AllocatedMargin allocatedMargin = 2;`
     * @return Whether the allocatedMargin field is set.
     */
    public fun hasAllocatedMargin(): kotlin.Boolean {
      return _builder.hasAllocatedMargin()
    }

    public val ReserveAvailabilityProfileKt.Dsl.allocatedMarginOrNull: openfmb.reservemodule.AllocatedMargin?
      get() = _builder.allocatedMarginOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ApplicationSystem requesterCircuitSegmentService = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var requesterCircuitSegmentService: openfmb.commonmodule.ApplicationSystem
      @kotlin.jvm.JvmName("getRequesterCircuitSegmentService")
        get() = _builder.requesterCircuitSegmentService
      @kotlin.jvm.JvmName("setRequesterCircuitSegmentService")
        set(value) {
        _builder.requesterCircuitSegmentService = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ApplicationSystem requesterCircuitSegmentService = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearRequesterCircuitSegmentService() {
      _builder.clearRequesterCircuitSegmentService()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ApplicationSystem requesterCircuitSegmentService = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the requesterCircuitSegmentService field is set.
     */
    public fun hasRequesterCircuitSegmentService(): kotlin.Boolean {
      return _builder.hasRequesterCircuitSegmentService()
    }

    public val ReserveAvailabilityProfileKt.Dsl.requesterCircuitSegmentServiceOrNull: openfmb.commonmodule.ApplicationSystem?
      get() = _builder.requesterCircuitSegmentServiceOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reservemodule.ReserveAvailability reserveAvailability = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var reserveAvailability: openfmb.reservemodule.ReserveAvailability
      @kotlin.jvm.JvmName("getReserveAvailability")
        get() = _builder.reserveAvailability
      @kotlin.jvm.JvmName("setReserveAvailability")
        set(value) {
        _builder.reserveAvailability = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reservemodule.ReserveAvailability reserveAvailability = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearReserveAvailability() {
      _builder.clearReserveAvailability()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.reservemodule.ReserveAvailability reserveAvailability = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the reserveAvailability field is set.
     */
    public fun hasReserveAvailability(): kotlin.Boolean {
      return _builder.hasReserveAvailability()
    }

    public val ReserveAvailabilityProfileKt.Dsl.reserveAvailabilityOrNull: openfmb.reservemodule.ReserveAvailability?
      get() = _builder.reserveAvailabilityOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ApplicationSystem responderCircuitSegmentService = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var responderCircuitSegmentService: openfmb.commonmodule.ApplicationSystem
      @kotlin.jvm.JvmName("getResponderCircuitSegmentService")
        get() = _builder.responderCircuitSegmentService
      @kotlin.jvm.JvmName("setResponderCircuitSegmentService")
        set(value) {
        _builder.responderCircuitSegmentService = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ApplicationSystem responderCircuitSegmentService = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearResponderCircuitSegmentService() {
      _builder.clearResponderCircuitSegmentService()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ApplicationSystem responderCircuitSegmentService = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the responderCircuitSegmentService field is set.
     */
    public fun hasResponderCircuitSegmentService(): kotlin.Boolean {
      return _builder.hasResponderCircuitSegmentService()
    }

    public val ReserveAvailabilityProfileKt.Dsl.responderCircuitSegmentServiceOrNull: openfmb.commonmodule.ApplicationSystem?
      get() = _builder.responderCircuitSegmentServiceOrNull

    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ConductingEquipment tiePoint = 6 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var tiePoint: openfmb.commonmodule.ConductingEquipment
      @kotlin.jvm.JvmName("getTiePoint")
        get() = _builder.tiePoint
      @kotlin.jvm.JvmName("setTiePoint")
        set(value) {
        _builder.tiePoint = value
      }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ConductingEquipment tiePoint = 6 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearTiePoint() {
      _builder.clearTiePoint()
    }
    /**
     * ```
     * MISSING DOCUMENTATION!!!
     * ```
     *
     * `.commonmodule.ConductingEquipment tiePoint = 6 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     * @return Whether the tiePoint field is set.
     */
    public fun hasTiePoint(): kotlin.Boolean {
      return _builder.hasTiePoint()
    }

    public val ReserveAvailabilityProfileKt.Dsl.tiePointOrNull: openfmb.commonmodule.ConductingEquipment?
      get() = _builder.tiePointOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.reservemodule.ReserveAvailabilityProfile.copy(block: `openfmb.reservemodule`.ReserveAvailabilityProfileKt.Dsl.() -> kotlin.Unit): openfmb.reservemodule.ReserveAvailabilityProfile =
  `openfmb.reservemodule`.ReserveAvailabilityProfileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.reservemodule.ReserveAvailabilityProfileOrBuilder.controlMessageInfoOrNull: openfmb.commonmodule.ControlMessageInfo?
  get() = if (hasControlMessageInfo()) getControlMessageInfo() else null

public val openfmb.reservemodule.ReserveAvailabilityProfileOrBuilder.allocatedMarginOrNull: openfmb.reservemodule.AllocatedMargin?
  get() = if (hasAllocatedMargin()) getAllocatedMargin() else null

public val openfmb.reservemodule.ReserveAvailabilityProfileOrBuilder.requesterCircuitSegmentServiceOrNull: openfmb.commonmodule.ApplicationSystem?
  get() = if (hasRequesterCircuitSegmentService()) getRequesterCircuitSegmentService() else null

public val openfmb.reservemodule.ReserveAvailabilityProfileOrBuilder.reserveAvailabilityOrNull: openfmb.reservemodule.ReserveAvailability?
  get() = if (hasReserveAvailability()) getReserveAvailability() else null

public val openfmb.reservemodule.ReserveAvailabilityProfileOrBuilder.responderCircuitSegmentServiceOrNull: openfmb.commonmodule.ApplicationSystem?
  get() = if (hasResponderCircuitSegmentService()) getResponderCircuitSegmentService() else null

public val openfmb.reservemodule.ReserveAvailabilityProfileOrBuilder.tiePointOrNull: openfmb.commonmodule.ConductingEquipment?
  get() = if (hasTiePoint()) getTiePoint() else null

