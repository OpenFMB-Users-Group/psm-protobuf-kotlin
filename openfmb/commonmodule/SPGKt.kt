// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: commonmodule/commonmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializesPG")
public inline fun sPG(block: openfmb.commonmodule.SPGKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.SPG =
  openfmb.commonmodule.SPGKt.Dsl._create(openfmb.commonmodule.SPG.newBuilder()).apply { block() }._build()
/**
 * ```
 * Single point setting (FC=SP) (SPG_SP)
 * ```
 *
 * Protobuf type `commonmodule.SPG`
 */
public object SPGKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.SPG.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.SPG.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.SPG = _builder.build()

    /**
     * ```
     * The value of the status setting (false is off, true is on).
     * ```
     *
     * `bool setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public var setVal: kotlin.Boolean
      @kotlin.jvm.JvmName("getSetVal")
        get() = _builder.setVal
      @kotlin.jvm.JvmName("setSetVal")
        set(value) {
        _builder.setVal = value
      }
    /**
     * ```
     * The value of the status setting (false is off, true is on).
     * ```
     *
     * `bool setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];`
     */
    public fun clearSetVal() {
      _builder.clearSetVal()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.commonmodule.SPG.copy(block: `openfmb.commonmodule`.SPGKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.SPG =
  `openfmb.commonmodule`.SPGKt.Dsl._create(this.toBuilder()).apply { block() }._build()

