// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: commonmodule/commonmodule.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package openfmb.commonmodule;

@kotlin.jvm.JvmName("-initializephaseAPC")
public inline fun phaseAPC(block: openfmb.commonmodule.PhaseAPCKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.PhaseAPC =
  openfmb.commonmodule.PhaseAPCKt.Dsl._create(openfmb.commonmodule.PhaseAPC.newBuilder()).apply { block() }._build()
/**
 * ```
 * [OpenFMB CDC extension] Per Phase ISC.
 * ```
 *
 * Protobuf type `commonmodule.PhaseAPC`
 */
public object PhaseAPCKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: openfmb.commonmodule.PhaseAPC.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: openfmb.commonmodule.PhaseAPC.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): openfmb.commonmodule.PhaseAPC = _builder.build()

    /**
     * ```
     * 3 Phase control.
     * ```
     *
     * `.commonmodule.ControlAPC phs3 = 1;`
     */
    public var phs3: openfmb.commonmodule.ControlAPC
      @kotlin.jvm.JvmName("getPhs3")
        get() = _builder.phs3
      @kotlin.jvm.JvmName("setPhs3")
        set(value) {
        _builder.phs3 = value
      }
    /**
     * ```
     * 3 Phase control.
     * ```
     *
     * `.commonmodule.ControlAPC phs3 = 1;`
     */
    public fun clearPhs3() {
      _builder.clearPhs3()
    }
    /**
     * ```
     * 3 Phase control.
     * ```
     *
     * `.commonmodule.ControlAPC phs3 = 1;`
     * @return Whether the phs3 field is set.
     */
    public fun hasPhs3(): kotlin.Boolean {
      return _builder.hasPhs3()
    }

    public val PhaseAPCKt.Dsl.phs3OrNull: openfmb.commonmodule.ControlAPC?
      get() = _builder.phs3OrNull

    /**
     * ```
     * Phase A control.
     * ```
     *
     * `.commonmodule.ControlAPC phsA = 2;`
     */
    public var phsA: openfmb.commonmodule.ControlAPC
      @kotlin.jvm.JvmName("getPhsA")
        get() = _builder.phsA
      @kotlin.jvm.JvmName("setPhsA")
        set(value) {
        _builder.phsA = value
      }
    /**
     * ```
     * Phase A control.
     * ```
     *
     * `.commonmodule.ControlAPC phsA = 2;`
     */
    public fun clearPhsA() {
      _builder.clearPhsA()
    }
    /**
     * ```
     * Phase A control.
     * ```
     *
     * `.commonmodule.ControlAPC phsA = 2;`
     * @return Whether the phsA field is set.
     */
    public fun hasPhsA(): kotlin.Boolean {
      return _builder.hasPhsA()
    }

    public val PhaseAPCKt.Dsl.phsAOrNull: openfmb.commonmodule.ControlAPC?
      get() = _builder.phsAOrNull

    /**
     * ```
     * Phase B control.
     * ```
     *
     * `.commonmodule.ControlAPC phsB = 3;`
     */
    public var phsB: openfmb.commonmodule.ControlAPC
      @kotlin.jvm.JvmName("getPhsB")
        get() = _builder.phsB
      @kotlin.jvm.JvmName("setPhsB")
        set(value) {
        _builder.phsB = value
      }
    /**
     * ```
     * Phase B control.
     * ```
     *
     * `.commonmodule.ControlAPC phsB = 3;`
     */
    public fun clearPhsB() {
      _builder.clearPhsB()
    }
    /**
     * ```
     * Phase B control.
     * ```
     *
     * `.commonmodule.ControlAPC phsB = 3;`
     * @return Whether the phsB field is set.
     */
    public fun hasPhsB(): kotlin.Boolean {
      return _builder.hasPhsB()
    }

    public val PhaseAPCKt.Dsl.phsBOrNull: openfmb.commonmodule.ControlAPC?
      get() = _builder.phsBOrNull

    /**
     * ```
     * Phase C control.
     * ```
     *
     * `.commonmodule.ControlAPC phsC = 4;`
     */
    public var phsC: openfmb.commonmodule.ControlAPC
      @kotlin.jvm.JvmName("getPhsC")
        get() = _builder.phsC
      @kotlin.jvm.JvmName("setPhsC")
        set(value) {
        _builder.phsC = value
      }
    /**
     * ```
     * Phase C control.
     * ```
     *
     * `.commonmodule.ControlAPC phsC = 4;`
     */
    public fun clearPhsC() {
      _builder.clearPhsC()
    }
    /**
     * ```
     * Phase C control.
     * ```
     *
     * `.commonmodule.ControlAPC phsC = 4;`
     * @return Whether the phsC field is set.
     */
    public fun hasPhsC(): kotlin.Boolean {
      return _builder.hasPhsC()
    }

    public val PhaseAPCKt.Dsl.phsCOrNull: openfmb.commonmodule.ControlAPC?
      get() = _builder.phsCOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun openfmb.commonmodule.PhaseAPC.copy(block: `openfmb.commonmodule`.PhaseAPCKt.Dsl.() -> kotlin.Unit): openfmb.commonmodule.PhaseAPC =
  `openfmb.commonmodule`.PhaseAPCKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val openfmb.commonmodule.PhaseAPCOrBuilder.phs3OrNull: openfmb.commonmodule.ControlAPC?
  get() = if (hasPhs3()) getPhs3() else null

public val openfmb.commonmodule.PhaseAPCOrBuilder.phsAOrNull: openfmb.commonmodule.ControlAPC?
  get() = if (hasPhsA()) getPhsA() else null

public val openfmb.commonmodule.PhaseAPCOrBuilder.phsBOrNull: openfmb.commonmodule.ControlAPC?
  get() = if (hasPhsB()) getPhsB() else null

public val openfmb.commonmodule.PhaseAPCOrBuilder.phsCOrNull: openfmb.commonmodule.ControlAPC?
  get() = if (hasPhsC()) getPhsC() else null

